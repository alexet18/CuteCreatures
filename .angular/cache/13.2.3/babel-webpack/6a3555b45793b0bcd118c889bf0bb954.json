{"ast":null,"code":"import { ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from 'ng-zorro-antd/core/services';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nfunction NzMessageComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 10);\n  }\n}\n\nfunction NzMessageComponent_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 11);\n  }\n}\n\nfunction NzMessageComponent_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 12);\n  }\n}\n\nfunction NzMessageComponent_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 13);\n  }\n}\n\nfunction NzMessageComponent_i_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 14);\n  }\n}\n\nfunction NzMessageComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r5.instance.content, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzMessageContainerComponent_nz_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-message\", 2);\n    i0.ɵɵlistener(\"destroyed\", function NzMessageContainerComponent_nz_message_1_Template_nz_message_destroyed_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.remove($event.id, $event.userAction);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const instance_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"instance\", instance_r1);\n  }\n}\n\nlet globalCounter = 0;\n\nclass NzMNService {\n  constructor(nzSingletonService, overlay, injector) {\n    this.nzSingletonService = nzSingletonService;\n    this.overlay = overlay;\n    this.injector = injector;\n  }\n\n  remove(id) {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n\n  getInstanceId() {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  withContainer(ctor) {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n\n    if (containerInstance) {\n      return containerInstance;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance;\n  }\n\n}\n\nclass NzMNContainerComponent {\n  constructor(cdr, nzConfigService) {\n    this.cdr = cdr;\n    this.nzConfigService = nzConfigService;\n    this.instances = [];\n    this.destroy$ = new Subject();\n    this.updateConfig();\n  }\n\n  ngOnInit() {\n    this.subscribeConfigChange();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  create(data) {\n    const instance = this.onCreate(data);\n\n    if (this.instances.length >= this.config.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n\n    this.instances = [...this.instances, instance];\n    this.readyInstances();\n    return instance;\n  }\n\n  remove(id, userAction = false) {\n    this.instances.some((instance, index) => {\n      if (instance.messageId === id) {\n        this.instances.splice(index, 1);\n        this.instances = [...this.instances];\n        this.onRemove(instance, userAction);\n        this.readyInstances();\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  removeAll() {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n    this.readyInstances();\n  }\n\n  onCreate(instance) {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject();\n    return instance;\n  }\n\n  onRemove(instance, userAction) {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n\n  readyInstances() {\n    this.cdr.detectChanges();\n  }\n\n  mergeOptions(options) {\n    const {\n      nzDuration,\n      nzAnimate,\n      nzPauseOnHover\n    } = this.config;\n    return Object.assign({\n      nzDuration,\n      nzAnimate,\n      nzPauseOnHover\n    }, options);\n  }\n\n}\n\nNzMNContainerComponent.ɵfac = function NzMNContainerComponent_Factory(t) {\n  return new (t || NzMNContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.NzConfigService));\n};\n\nNzMNContainerComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzMNContainerComponent\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMNContainerComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.NzConfigService\n    }];\n  }, null);\n})();\n\nclass NzMNComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.destroyed = new EventEmitter();\n    this.animationStateChanged = new Subject();\n    this.userAction = false;\n    this.eraseTimer = null;\n  }\n\n  ngOnInit() {\n    this.options = this.instance.options;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n      this.animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'leave'), take(1)).subscribe(() => {\n        clearTimeout(this.closeTimer);\n        this.destroyed.next({\n          id: this.instance.messageId,\n          userAction: this.userAction\n        });\n      });\n    }\n\n    this.autoClose = this.options.nzDuration > 0;\n\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n\n    this.animationStateChanged.complete();\n  }\n\n  onEnter() {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n\n  onLeave() {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n\n  destroy(userAction = false) {\n    this.userAction = userAction;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      this.closeTimer = setTimeout(() => {\n        this.closeTimer = undefined;\n        this.destroyed.next({\n          id: this.instance.messageId,\n          userAction\n        });\n      }, 200);\n    } else {\n      this.destroyed.next({\n        id: this.instance.messageId,\n        userAction\n      });\n    }\n  }\n\n  initErase() {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n\n  updateTTL() {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart;\n    }\n  }\n\n  startEraseTimeout() {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n\n  clearEraseTimeout() {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n\n}\n\nNzMNComponent.ɵfac = function NzMNComponent_Factory(t) {\n  return new (t || NzMNComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzMNComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzMNComponent\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMNComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzMessageComponent extends NzMNComponent {\n  constructor(cdr) {\n    super(cdr);\n    this.destroyed = new EventEmitter();\n  }\n\n}\n\nNzMessageComponent.ɵfac = function NzMessageComponent_Factory(t) {\n  return new (t || NzMessageComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzMessageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzMessageComponent,\n  selectors: [[\"nz-message\"]],\n  inputs: {\n    instance: \"instance\"\n  },\n  outputs: {\n    destroyed: \"destroyed\"\n  },\n  exportAs: [\"nzMessage\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 9,\n  consts: [[1, \"ant-message-notice\", 3, \"mouseenter\", \"mouseleave\"], [1, \"ant-message-notice-content\"], [1, \"ant-message-custom-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngSwitchCase\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [3, \"innerHTML\"]],\n  template: function NzMessageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"@moveUpMotion.done\", function NzMessageComponent_Template_div_animation_moveUpMotion_done_0_listener($event) {\n        return ctx.animationStateChanged.next($event);\n      })(\"mouseenter\", function NzMessageComponent_Template_div_mouseenter_0_listener() {\n        return ctx.onEnter();\n      })(\"mouseleave\", function NzMessageComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onLeave();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementContainerStart(3, 3);\n      i0.ɵɵtemplate(4, NzMessageComponent_i_4_Template, 1, 0, \"i\", 4);\n      i0.ɵɵtemplate(5, NzMessageComponent_i_5_Template, 1, 0, \"i\", 5);\n      i0.ɵɵtemplate(6, NzMessageComponent_i_6_Template, 1, 0, \"i\", 6);\n      i0.ɵɵtemplate(7, NzMessageComponent_i_7_Template, 1, 0, \"i\", 7);\n      i0.ɵɵtemplate(8, NzMessageComponent_i_8_Template, 1, 0, \"i\", 8);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(9, NzMessageComponent_ng_container_9_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@moveUpMotion\", ctx.instance.state);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", \"ant-message-\" + ctx.instance.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.instance.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"loading\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.instance.content);\n    }\n  },\n  directives: [i1$1.NgClass, i1$1.NgSwitch, i1$1.NgSwitchCase, i2.NzIconDirective, i3.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [moveUpMotion]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-message',\n      exportAs: 'nzMessage',\n      preserveWhitespaces: false,\n      animations: [moveUpMotion],\n      template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    instance: [{\n      type: Input\n    }],\n    destroyed: [{\n      type: Output\n    }]\n  });\n})();\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\nconst NZ_MESSAGE_DEFAULT_CONFIG = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24,\n  nzDirection: 'ltr'\n};\n\nclass NzMessageContainerComponent extends NzMNContainerComponent {\n  constructor(cdr, nzConfigService) {\n    super(cdr, nzConfigService);\n    this.dir = 'ltr';\n    const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n    this.dir = (config === null || config === void 0 ? void 0 : config.nzDirection) || 'ltr';\n  }\n\n  subscribeConfigChange() {\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateConfig();\n      const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n\n      if (config) {\n        const {\n          nzDirection\n        } = config;\n        this.dir = nzDirection || this.dir;\n      }\n    });\n  }\n\n  updateConfig() {\n    this.config = Object.assign(Object.assign(Object.assign({}, NZ_MESSAGE_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME));\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzMessageContainerComponent.ɵfac = function NzMessageContainerComponent_Factory(t) {\n  return new (t || NzMessageContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.NzConfigService));\n};\n\nNzMessageContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzMessageContainerComponent,\n  selectors: [[\"nz-message-container\"]],\n  exportAs: [\"nzMessageContainer\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[1, \"ant-message\"], [3, \"instance\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [3, \"instance\", \"destroyed\"]],\n  template: function NzMessageContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzMessageContainerComponent_nz_message_1_Template, 1, 1, \"nz-message\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"top\", ctx.top);\n      i0.ɵɵclassProp(\"ant-message-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.instances);\n    }\n  },\n  directives: [NzMessageComponent, i1$1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageContainerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-message-container',\n      exportAs: 'nzMessageContainer',\n      preserveWhitespaces: false,\n      template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.NzConfigService\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzMessageServiceModule {}\n\nNzMessageServiceModule.ɵfac = function NzMessageServiceModule_Factory(t) {\n  return new (t || NzMessageServiceModule)();\n};\n\nNzMessageServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzMessageServiceModule\n});\nNzMessageServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageServiceModule, [{\n    type: NgModule\n  }], null, null);\n})();\n\nclass NzMessageService extends NzMNService {\n  constructor(nzSingletonService, overlay, injector) {\n    super(nzSingletonService, overlay, injector);\n    this.componentPrefix = 'message-';\n  }\n\n  success(content, options) {\n    return this.createInstance({\n      type: 'success',\n      content\n    }, options);\n  }\n\n  error(content, options) {\n    return this.createInstance({\n      type: 'error',\n      content\n    }, options);\n  }\n\n  info(content, options) {\n    return this.createInstance({\n      type: 'info',\n      content\n    }, options);\n  }\n\n  warning(content, options) {\n    return this.createInstance({\n      type: 'warning',\n      content\n    }, options);\n  }\n\n  loading(content, options) {\n    return this.createInstance({\n      type: 'loading',\n      content\n    }, options);\n  }\n\n  create(type, content, options) {\n    return this.createInstance({\n      type,\n      content\n    }, options);\n  }\n\n  createInstance(message, options) {\n    this.container = this.withContainer(NzMessageContainerComponent);\n    return this.container.create(Object.assign(Object.assign({}, message), {\n      createdAt: new Date(),\n      messageId: this.getInstanceId(),\n      options\n    }));\n  }\n\n}\n\nNzMessageService.ɵfac = function NzMessageService_Factory(t) {\n  return new (t || NzMessageService)(i0.ɵɵinject(i1$2.NzSingletonService), i0.ɵɵinject(i2$1.Overlay), i0.ɵɵinject(i0.Injector));\n};\n\nNzMessageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzMessageService,\n  factory: NzMessageService.ɵfac,\n  providedIn: NzMessageServiceModule\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: NzMessageServiceModule\n    }]\n  }], function () {\n    return [{\n      type: i1$2.NzSingletonService\n    }, {\n      type: i2$1.Overlay\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzMessageModule {}\n\nNzMessageModule.ɵfac = function NzMessageModule_Factory(t) {\n  return new (t || NzMessageModule)();\n};\n\nNzMessageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzMessageModule\n});\nNzMessageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n      declarations: [NzMessageContainerComponent, NzMessageComponent],\n      entryComponents: [NzMessageContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService, NzMessageServiceModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-message.mjs"],"names":["ComponentPortal","i0","Directive","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","Injectable","Subject","filter","take","takeUntil","i1","toCssPixel","moveUpMotion","i1$1","CommonModule","i2","NzIconModule","i3","NzOutletModule","i1$2","i2$1","OverlayModule","BidiModule","globalCounter","NzMNService","constructor","nzSingletonService","overlay","injector","remove","id","container","removeAll","getInstanceId","componentPrefix","withContainer","ctor","containerInstance","getSingletonWithKey","overlayRef","create","hasBackdrop","scrollStrategy","scrollStrategies","noop","positionStrategy","position","global","componentPortal","componentRef","attach","overlayPane","overlayElement","style","zIndex","instance","registerSingletonWithKey","NzMNContainerComponent","cdr","nzConfigService","instances","destroy$","updateConfig","ngOnInit","subscribeConfigChange","ngOnDestroy","next","complete","data","onCreate","length","config","nzMaxStack","slice","readyInstances","userAction","some","index","messageId","splice","onRemove","forEach","i","options","mergeOptions","onClose","detectChanges","nzDuration","nzAnimate","nzPauseOnHover","Object","assign","ɵfac","ChangeDetectorRef","NzConfigService","ɵdir","type","NzMNComponent","destroyed","animationStateChanged","eraseTimer","state","pipe","event","phaseName","toState","subscribe","clearTimeout","closeTimer","autoClose","initErase","startEraseTimeout","clearEraseTimeout","onEnter","updateTTL","onLeave","destroy","setTimeout","undefined","eraseTTL","eraseTimingStart","Date","now","NzMessageComponent","ɵcmp","NgClass","NgSwitch","NgSwitchCase","NzIconDirective","NzStringTemplateOutletDirective","args","changeDetection","OnPush","encapsulation","None","selector","exportAs","preserveWhitespaces","animations","template","NZ_CONFIG_COMPONENT_NAME","NZ_MESSAGE_DEFAULT_CONFIG","nzTop","nzDirection","NzMessageContainerComponent","dir","getConfigForComponent","getConfigChangeEventForComponent","top","markForCheck","NgForOf","NzMessageServiceModule","ɵmod","ɵinj","NzMessageService","success","content","createInstance","error","info","warning","loading","message","createdAt","NzSingletonService","Overlay","Injector","ɵprov","providedIn","NzMessageModule","imports","declarations","entryComponents"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,EAA6CC,uBAA7C,EAAsEC,iBAAtE,EAAyFC,KAAzF,EAAgGC,MAAhG,EAAwGC,QAAxG,EAAkHC,UAAlH,QAAoI,eAApI;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,gBAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,OAAO,KAAKC,IAAZ,MAAsB,iBAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAO,KAAKC,IAAZ,MAAsB,6BAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,sBAAtB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;;AAqGyG1B,IAAAA,EAmH7F,sB;;;;;;AAnH6FA,IAAAA,EAoH7F,sB;;;;;;AApH6FA,IAAAA,EAqH7F,sB;;;;;;AArH6FA,IAAAA,EAsH7F,sB;;;;;;AAtH6FA,IAAAA,EAuH7F,sB;;;;;;AAvH6FA,IAAAA,EAyH/F,2B;AAzH+FA,IAAAA,EA0H7F,yB;AA1H6FA,IAAAA,EA2H/F,wB;;;;mBA3H+FA,E;AAAAA,IAAAA,EA0HvF,a;AA1HuFA,IAAAA,EA0HvF,kDA1HuFA,EA0HvF,gB;;;;;;gBA1HuFA,E;;AAAAA,IAAAA,EA8MnG,mC;AA9MmGA,IAAAA,EAiNjG;AAjNiGA,MAAAA,EAiNjG;AAAA,qBAjNiGA,EAiNjG;AAAA,aAAa,2CAAb;AAAA,M;AAjNiGA,IAAAA,EAkNlG,e;;;;;AAlNkGA,IAAAA,EAgNjG,oC;;;;AAnTR,IAAI2B,aAAa,GAAG,CAApB;;AACA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,kBAAD,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwC;AAC/C,SAAKF,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDC,EAAAA,MAAM,CAACC,EAAD,EAAK;AACP,QAAI,KAAKC,SAAT,EAAoB;AAChB,UAAID,EAAJ,EAAQ;AACJ,aAAKC,SAAL,CAAeF,MAAf,CAAsBC,EAAtB;AACH,OAFD,MAGK;AACD,aAAKC,SAAL,CAAeC,SAAf;AACH;AACJ;AACJ;;AACDC,EAAAA,aAAa,GAAG;AACZ,WAAQ,GAAE,KAAKC,eAAgB,IAAGX,aAAa,EAAG,EAAlD;AACH;;AACDY,EAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,QAAIC,iBAAiB,GAAG,KAAKX,kBAAL,CAAwBY,mBAAxB,CAA4C,KAAKJ,eAAjD,CAAxB;;AACA,QAAIG,iBAAJ,EAAuB;AACnB,aAAOA,iBAAP;AACH;;AACD,UAAME,UAAU,GAAG,KAAKZ,OAAL,CAAaa,MAAb,CAAoB;AACnCC,MAAAA,WAAW,EAAE,KADsB;AAEnCC,MAAAA,cAAc,EAAE,KAAKf,OAAL,CAAagB,gBAAb,CAA8BC,IAA9B,EAFmB;AAGnCC,MAAAA,gBAAgB,EAAE,KAAKlB,OAAL,CAAamB,QAAb,GAAwBC,MAAxB;AAHiB,KAApB,CAAnB;AAKA,UAAMC,eAAe,GAAG,IAAIrD,eAAJ,CAAoByC,IAApB,EAA0B,IAA1B,EAAgC,KAAKR,QAArC,CAAxB;AACA,UAAMqB,YAAY,GAAGV,UAAU,CAACW,MAAX,CAAkBF,eAAlB,CAArB;AACA,UAAMG,WAAW,GAAGZ,UAAU,CAACa,cAA/B;AACAD,IAAAA,WAAW,CAACE,KAAZ,CAAkBC,MAAlB,GAA2B,MAA3B;;AACA,QAAI,CAACjB,iBAAL,EAAwB;AACpB,WAAKN,SAAL,GAAiBM,iBAAiB,GAAGY,YAAY,CAACM,QAAlD;AACA,WAAK7B,kBAAL,CAAwB8B,wBAAxB,CAAiD,KAAKtB,eAAtD,EAAuEG,iBAAvE;AACH;;AACD,WAAOA,iBAAP;AACH;;AAtCa;;AAwClB,MAAMoB,sBAAN,CAA6B;AACzBhC,EAAAA,WAAW,CAACiC,GAAD,EAAMC,eAAN,EAAuB;AAC9B,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,QAAL,GAAgB,IAAIvD,OAAJ,EAAhB;AACA,SAAKwD,YAAL;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,qBAAL;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKJ,QAAL,CAAcK,IAAd;AACA,SAAKL,QAAL,CAAcM,QAAd;AACH;;AACD3B,EAAAA,MAAM,CAAC4B,IAAD,EAAO;AACT,UAAMb,QAAQ,GAAG,KAAKc,QAAL,CAAcD,IAAd,CAAjB;;AACA,QAAI,KAAKR,SAAL,CAAeU,MAAf,IAAyB,KAAKC,MAAL,CAAYC,UAAzC,EAAqD;AACjD,WAAKZ,SAAL,GAAiB,KAAKA,SAAL,CAAea,KAAf,CAAqB,CAArB,CAAjB;AACH;;AACD,SAAKb,SAAL,GAAiB,CAAC,GAAG,KAAKA,SAAT,EAAoBL,QAApB,CAAjB;AACA,SAAKmB,cAAL;AACA,WAAOnB,QAAP;AACH;;AACD1B,EAAAA,MAAM,CAACC,EAAD,EAAK6C,UAAU,GAAG,KAAlB,EAAyB;AAC3B,SAAKf,SAAL,CAAegB,IAAf,CAAoB,CAACrB,QAAD,EAAWsB,KAAX,KAAqB;AACrC,UAAItB,QAAQ,CAACuB,SAAT,KAAuBhD,EAA3B,EAA+B;AAC3B,aAAK8B,SAAL,CAAemB,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACA,aAAKjB,SAAL,GAAiB,CAAC,GAAG,KAAKA,SAAT,CAAjB;AACA,aAAKoB,QAAL,CAAczB,QAAd,EAAwBoB,UAAxB;AACA,aAAKD,cAAL;AACA,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH,KATD;AAUH;;AACD1C,EAAAA,SAAS,GAAG;AACR,SAAK4B,SAAL,CAAeqB,OAAf,CAAuBC,CAAC,IAAI,KAAKF,QAAL,CAAcE,CAAd,EAAiB,KAAjB,CAA5B;AACA,SAAKtB,SAAL,GAAiB,EAAjB;AACA,SAAKc,cAAL;AACH;;AACDL,EAAAA,QAAQ,CAACd,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAAC4B,OAAT,GAAmB,KAAKC,YAAL,CAAkB7B,QAAQ,CAAC4B,OAA3B,CAAnB;AACA5B,IAAAA,QAAQ,CAAC8B,OAAT,GAAmB,IAAI/E,OAAJ,EAAnB;AACA,WAAOiD,QAAP;AACH;;AACDyB,EAAAA,QAAQ,CAACzB,QAAD,EAAWoB,UAAX,EAAuB;AAC3BpB,IAAAA,QAAQ,CAAC8B,OAAT,CAAiBnB,IAAjB,CAAsBS,UAAtB;AACApB,IAAAA,QAAQ,CAAC8B,OAAT,CAAiBlB,QAAjB;AACH;;AACDO,EAAAA,cAAc,GAAG;AACb,SAAKhB,GAAL,CAAS4B,aAAT;AACH;;AACDF,EAAAA,YAAY,CAACD,OAAD,EAAU;AAClB,UAAM;AAAEI,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,QAA4C,KAAKlB,MAAvD;AACA,WAAOmB,MAAM,CAACC,MAAP,CAAc;AAAEJ,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,KAAd,EAAyDN,OAAzD,CAAP;AACH;;AAxDwB;;AA0D7B1B,sBAAsB,CAACmC,IAAvB;AAAA,mBAAmHnC,sBAAnH,EAAyG7D,EAAzG,mBAA2JA,EAAE,CAACiG,iBAA9J,GAAyGjG,EAAzG,mBAA4Lc,EAAE,CAACoF,eAA/L;AAAA;;AACArC,sBAAsB,CAACsC,IAAvB,kBADyGnG,EACzG;AAAA,QAAuG6D;AAAvG;;AACA;AAAA,qDAFyG7D,EAEzG,mBAA2F6D,sBAA3F,EAA+H,CAAC;AACpHuC,IAAAA,IAAI,EAAEnG;AAD8G,GAAD,CAA/H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmG,MAAAA,IAAI,EAAEpG,EAAE,CAACiG;AAAX,KAAD,EAAiC;AAAEG,MAAAA,IAAI,EAAEtF,EAAE,CAACoF;AAAX,KAAjC,CAAP;AAAwE,GAFlH;AAAA;;AAGA,MAAMG,aAAN,CAAoB;AAChBxE,EAAAA,WAAW,CAACiC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKwC,SAAL,GAAiB,IAAIpG,YAAJ,EAAjB;AACA,SAAKqG,qBAAL,GAA6B,IAAI7F,OAAJ,EAA7B;AACA,SAAKqE,UAAL,GAAkB,KAAlB;AACA,SAAKyB,UAAL,GAAkB,IAAlB;AACH;;AACDrC,EAAAA,QAAQ,GAAG;AACP,SAAKoB,OAAL,GAAe,KAAK5B,QAAL,CAAc4B,OAA7B;;AACA,QAAI,KAAKA,OAAL,CAAaK,SAAjB,EAA4B;AACxB,WAAKjC,QAAL,CAAc8C,KAAd,GAAsB,OAAtB;AACA,WAAKF,qBAAL,CACKG,IADL,CACU/F,MAAM,CAACgG,KAAK,IAAIA,KAAK,CAACC,SAAN,KAAoB,MAApB,IAA8BD,KAAK,CAACE,OAAN,KAAkB,OAA1D,CADhB,EACoFjG,IAAI,CAAC,CAAD,CADxF,EAEKkG,SAFL,CAEe,MAAM;AACjBC,QAAAA,YAAY,CAAC,KAAKC,UAAN,CAAZ;AACA,aAAKV,SAAL,CAAehC,IAAf,CAAoB;AAAEpC,UAAAA,EAAE,EAAE,KAAKyB,QAAL,CAAcuB,SAApB;AAA+BH,UAAAA,UAAU,EAAE,KAAKA;AAAhD,SAApB;AACH,OALD;AAMH;;AACD,SAAKkC,SAAL,GAAiB,KAAK1B,OAAL,CAAaI,UAAb,GAA0B,CAA3C;;AACA,QAAI,KAAKsB,SAAT,EAAoB;AAChB,WAAKC,SAAL;AACA,WAAKC,iBAAL;AACH;AACJ;;AACD9C,EAAAA,WAAW,GAAG;AACV,QAAI,KAAK4C,SAAT,EAAoB;AAChB,WAAKG,iBAAL;AACH;;AACD,SAAKb,qBAAL,CAA2BhC,QAA3B;AACH;;AACD8C,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKJ,SAAL,IAAkB,KAAK1B,OAAL,CAAaM,cAAnC,EAAmD;AAC/C,WAAKuB,iBAAL;AACA,WAAKE,SAAL;AACH;AACJ;;AACDC,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKN,SAAL,IAAkB,KAAK1B,OAAL,CAAaM,cAAnC,EAAmD;AAC/C,WAAKsB,iBAAL;AACH;AACJ;;AACDK,EAAAA,OAAO,CAACzC,UAAU,GAAG,KAAd,EAAqB;AACxB,SAAKA,UAAL,GAAkBA,UAAlB;;AACA,QAAI,KAAKQ,OAAL,CAAaK,SAAjB,EAA4B;AACxB,WAAKjC,QAAL,CAAc8C,KAAd,GAAsB,OAAtB;AACA,WAAK3C,GAAL,CAAS4B,aAAT;AACA,WAAKsB,UAAL,GAAkBS,UAAU,CAAC,MAAM;AAC/B,aAAKT,UAAL,GAAkBU,SAAlB;AACA,aAAKpB,SAAL,CAAehC,IAAf,CAAoB;AAAEpC,UAAAA,EAAE,EAAE,KAAKyB,QAAL,CAAcuB,SAApB;AAA+BH,UAAAA;AAA/B,SAApB;AACH,OAH2B,EAGzB,GAHyB,CAA5B;AAIH,KAPD,MAQK;AACD,WAAKuB,SAAL,CAAehC,IAAf,CAAoB;AAAEpC,QAAAA,EAAE,EAAE,KAAKyB,QAAL,CAAcuB,SAApB;AAA+BH,QAAAA;AAA/B,OAApB;AACH;AACJ;;AACDmC,EAAAA,SAAS,GAAG;AACR,SAAKS,QAAL,GAAgB,KAAKpC,OAAL,CAAaI,UAA7B;AACA,SAAKiC,gBAAL,GAAwBC,IAAI,CAACC,GAAL,EAAxB;AACH;;AACDR,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKL,SAAT,EAAoB;AAChB,WAAKU,QAAL,IAAiBE,IAAI,CAACC,GAAL,KAAa,KAAKF,gBAAnC;AACH;AACJ;;AACDT,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKQ,QAAL,GAAgB,CAApB,EAAuB;AACnB,WAAKP,iBAAL;AACA,WAAKZ,UAAL,GAAkBiB,UAAU,CAAC,MAAM,KAAKD,OAAL,EAAP,EAAuB,KAAKG,QAA5B,CAA5B;AACA,WAAKC,gBAAL,GAAwBC,IAAI,CAACC,GAAL,EAAxB;AACH,KAJD,MAKK;AACD,WAAKN,OAAL;AACH;AACJ;;AACDJ,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKZ,UAAL,KAAoB,IAAxB,EAA8B;AAC1BO,MAAAA,YAAY,CAAC,KAAKP,UAAN,CAAZ;AACA,WAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;;AAhFe;;AAkFpBH,aAAa,CAACL,IAAd;AAAA,mBAA0GK,aAA1G,EAvFyGrG,EAuFzG,mBAAyIA,EAAE,CAACiG,iBAA5I;AAAA;;AACAI,aAAa,CAACF,IAAd,kBAxFyGnG,EAwFzG;AAAA,QAA8FqG;AAA9F;;AACA;AAAA,qDAzFyGrG,EAyFzG,mBAA2FqG,aAA3F,EAAsH,CAAC;AAC3GD,IAAAA,IAAI,EAAEnG;AADqG,GAAD,CAAtH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmG,MAAAA,IAAI,EAAEpG,EAAE,CAACiG;AAAX,KAAD,CAAP;AAA0C,GAFpF;AAAA;AAIA;AACA;AACA;AACA;;;AACA,MAAM8B,kBAAN,SAAiC1B,aAAjC,CAA+C;AAC3CxE,EAAAA,WAAW,CAACiC,GAAD,EAAM;AACb,UAAMA,GAAN;AACA,SAAKwC,SAAL,GAAiB,IAAIpG,YAAJ,EAAjB;AACH;;AAJ0C;;AAM/C6H,kBAAkB,CAAC/B,IAAnB;AAAA,mBAA+G+B,kBAA/G,EAvGyG/H,EAuGzG,mBAAmJA,EAAE,CAACiG,iBAAtJ;AAAA;;AACA8B,kBAAkB,CAACC,IAAnB,kBAxGyGhI,EAwGzG;AAAA,QAAmG+H,kBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxGyG/H,EAwGzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAxGyGA,MAAAA,EAyGrG,4BADJ;AAxGyGA,MAAAA,EA4GnG;AAAA,eAAsB,sCAAtB;AAAA;AAAA,eACc,aADd;AAAA;AAAA,eAEc,aAFd;AAAA,QAJN;AAxGyGA,MAAAA,EAgHnG,4BARN;AAxGyGA,MAAAA,EAiHjG,4BATR;AAxGyGA,MAAAA,EAkH/F,8BAVV;AAxGyGA,MAAAA,EAmH7F,6DAXZ;AAxGyGA,MAAAA,EAoH7F,6DAZZ;AAxGyGA,MAAAA,EAqH7F,6DAbZ;AAxGyGA,MAAAA,EAsH7F,6DAdZ;AAxGyGA,MAAAA,EAuH7F,6DAfZ;AAxGyGA,MAAAA,EAwH/F,wBAhBV;AAxGyGA,MAAAA,EAyH/F,mFAjBV;AAxGyGA,MAAAA,EA4HjG,eApBR;AAxGyGA,MAAAA,EA6HnG,eArBN;AAxGyGA,MAAAA,EA8HrG,eAtBJ;AAAA;;AAAA;AAxGyGA,MAAAA,EA2GnG,gDAHN;AAxGyGA,MAAAA,EAiHzD,aAThD;AAxGyGA,MAAAA,EAiHzD,0DAThD;AAxGyGA,MAAAA,EAkHjF,aAVxB;AAxGyGA,MAAAA,EAkHjF,0CAVxB;AAxGyGA,MAAAA,EAmHzF,aAXhB;AAxGyGA,MAAAA,EAmHzF,sCAXhB;AAxGyGA,MAAAA,EAoHzF,aAZhB;AAxGyGA,MAAAA,EAoHzF,mCAZhB;AAxGyGA,MAAAA,EAqHzF,aAbhB;AAxGyGA,MAAAA,EAqHzF,sCAbhB;AAxGyGA,MAAAA,EAsHzF,aAdhB;AAxGyGA,MAAAA,EAsHzF,oCAdhB;AAxGyGA,MAAAA,EAuHzF,aAfhB;AAxGyGA,MAAAA,EAuHzF,sCAfhB;AAxGyGA,MAAAA,EAyHhF,aAjBzB;AAxGyGA,MAAAA,EAyHhF,2DAjBzB;AAAA;AAAA;AAAA,eAuB0CiB,IAAI,CAACgH,OAvB/C,EAuBuHhH,IAAI,CAACiH,QAvB5H,EAuB8LjH,IAAI,CAACkH,YAvBnM,EAuBiRhH,EAAE,CAACiH,eAvBpR,EAuBib/G,EAAE,CAACgH,+BAvBpb;AAAA;AAAA;AAAA,eAuBqnB,CAACrH,YAAD;AAvBrnB;AAAA;AAAA;;AAwBA;AAAA,qDAhIyGhB,EAgIzG,mBAA2F+H,kBAA3F,EAA2H,CAAC;AAChH3B,IAAAA,IAAI,EAAEjG,SAD0G;AAEhHmI,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAEnI,uBAAuB,CAACoI,MAD1C;AAECC,MAAAA,aAAa,EAAEpI,iBAAiB,CAACqI,IAFlC;AAGCC,MAAAA,QAAQ,EAAE,YAHX;AAICC,MAAAA,QAAQ,EAAE,WAJX;AAKCC,MAAAA,mBAAmB,EAAE,KALtB;AAMCC,MAAAA,UAAU,EAAE,CAAC9H,YAAD,CANb;AAOC+H,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BmB,KAAD;AAF0G,GAAD,CAA3H,EAkC4B,YAAY;AAAE,WAAO,CAAC;AAAE3C,MAAAA,IAAI,EAAEpG,EAAE,CAACiG;AAAX,KAAD,CAAP;AAA0C,GAlCpF,EAkCsG;AAAEtC,IAAAA,QAAQ,EAAE,CAAC;AACnGyC,MAAAA,IAAI,EAAE9F;AAD6F,KAAD,CAAZ;AAEtFgG,IAAAA,SAAS,EAAE,CAAC;AACZF,MAAAA,IAAI,EAAE7F;AADM,KAAD;AAF2E,GAlCtG;AAAA;;AAwCA,MAAMyI,wBAAwB,GAAG,SAAjC;AACA,MAAMC,yBAAyB,GAAG;AAC9BrD,EAAAA,SAAS,EAAE,IADmB;AAE9BD,EAAAA,UAAU,EAAE,IAFkB;AAG9Bf,EAAAA,UAAU,EAAE,CAHkB;AAI9BiB,EAAAA,cAAc,EAAE,IAJc;AAK9BqD,EAAAA,KAAK,EAAE,EALuB;AAM9BC,EAAAA,WAAW,EAAE;AANiB,CAAlC;;AAQA,MAAMC,2BAAN,SAA0CvF,sBAA1C,CAAiE;AAC7DhC,EAAAA,WAAW,CAACiC,GAAD,EAAMC,eAAN,EAAuB;AAC9B,UAAMD,GAAN,EAAWC,eAAX;AACA,SAAKsF,GAAL,GAAW,KAAX;AACA,UAAM1E,MAAM,GAAG,KAAKZ,eAAL,CAAqBuF,qBAArB,CAA2CN,wBAA3C,CAAf;AACA,SAAKK,GAAL,GAAW,CAAC1E,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACwE,WAAxD,KAAwE,KAAnF;AACH;;AACD/E,EAAAA,qBAAqB,GAAG;AACpB,SAAKL,eAAL,CACKwF,gCADL,CACsCP,wBADtC,EAEKtC,IAFL,CAEU7F,SAAS,CAAC,KAAKoD,QAAN,CAFnB,EAGK6C,SAHL,CAGe,MAAM;AACjB,WAAK5C,YAAL;AACA,YAAMS,MAAM,GAAG,KAAKZ,eAAL,CAAqBuF,qBAArB,CAA2CN,wBAA3C,CAAf;;AACA,UAAIrE,MAAJ,EAAY;AACR,cAAM;AAAEwE,UAAAA;AAAF,YAAkBxE,MAAxB;AACA,aAAK0E,GAAL,GAAWF,WAAW,IAAI,KAAKE,GAA/B;AACH;AACJ,KAVD;AAWH;;AACDnF,EAAAA,YAAY,GAAG;AACX,SAAKS,MAAL,GAAcmB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkD,yBAAlB,CAAd,EAA4D,KAAKtE,MAAjE,CAAd,EAAwF,KAAKZ,eAAL,CAAqBuF,qBAArB,CAA2CN,wBAA3C,CAAxF,CAAd;AACA,SAAKQ,GAAL,GAAWzI,UAAU,CAAC,KAAK4D,MAAL,CAAYuE,KAAb,CAArB;AACA,SAAKpF,GAAL,CAAS2F,YAAT;AACH;;AAxB4D;;AA0BjEL,2BAA2B,CAACpD,IAA5B;AAAA,mBAAwHoD,2BAAxH,EA3MyGpJ,EA2MzG,mBAAqKA,EAAE,CAACiG,iBAAxK,GA3MyGjG,EA2MzG,mBAAsMc,EAAE,CAACoF,eAAzM;AAAA;;AACAkD,2BAA2B,CAACpB,IAA5B,kBA5MyGhI,EA4MzG;AAAA,QAA4GoJ,2BAA5G;AAAA;AAAA;AAAA,aA5MyGpJ,EA4MzG;AAAA;AAAA;AAAA;AAAA;AAAA;AA5MyGA,MAAAA,EA6MrG,4BADJ;AA5MyGA,MAAAA,EA8MnG,wFAFN;AA5MyGA,MAAAA,EAmNrG,eAPJ;AAAA;;AAAA;AA5MyGA,MAAAA,EA6MpC,4BADrE;AA5MyGA,MAAAA,EA6M5E,kDAD7B;AA5MyGA,MAAAA,EA+M5E,aAH7B;AA5MyGA,MAAAA,EA+M5E,qCAH7B;AAAA;AAAA;AAAA,eAQ0C+H,kBAR1C,EAQqL9G,IAAI,CAACyI,OAR1L;AAAA;AAAA;AAAA;;AASA;AAAA,qDArNyG1J,EAqNzG,mBAA2FoJ,2BAA3F,EAAoI,CAAC;AACzHhD,IAAAA,IAAI,EAAEjG,SADmH;AAEzHmI,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAEnI,uBAAuB,CAACoI,MAD1C;AAECC,MAAAA,aAAa,EAAEpI,iBAAiB,CAACqI,IAFlC;AAGCC,MAAAA,QAAQ,EAAE,sBAHX;AAICC,MAAAA,QAAQ,EAAE,oBAJX;AAKCC,MAAAA,mBAAmB,EAAE,KALtB;AAMCE,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdmB,KAAD;AAFmH,GAAD,CAApI,EAkB4B,YAAY;AAAE,WAAO,CAAC;AAAE3C,MAAAA,IAAI,EAAEpG,EAAE,CAACiG;AAAX,KAAD,EAAiC;AAAEG,MAAAA,IAAI,EAAEtF,EAAE,CAACoF;AAAX,KAAjC,CAAP;AAAwE,GAlBlH;AAAA;AAoBA;AACA;AACA;AACA;;;AACA,MAAMyD,sBAAN,CAA6B;;AAE7BA,sBAAsB,CAAC3D,IAAvB;AAAA,mBAAmH2D,sBAAnH;AAAA;;AACAA,sBAAsB,CAACC,IAAvB,kBAhPyG5J,EAgPzG;AAAA,QAAoH2J;AAApH;AACAA,sBAAsB,CAACE,IAAvB,kBAjPyG7J,EAiPzG;;AACA;AAAA,qDAlPyGA,EAkPzG,mBAA2F2J,sBAA3F,EAA+H,CAAC;AACpHvD,IAAAA,IAAI,EAAE5F;AAD8G,GAAD,CAA/H;AAAA;;AAIA,MAAMsJ,gBAAN,SAA+BlI,WAA/B,CAA2C;AACvCC,EAAAA,WAAW,CAACC,kBAAD,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwC;AAC/C,UAAMF,kBAAN,EAA0BC,OAA1B,EAAmCC,QAAnC;AACA,SAAKM,eAAL,GAAuB,UAAvB;AACH;;AACDyH,EAAAA,OAAO,CAACC,OAAD,EAAUzE,OAAV,EAAmB;AACtB,WAAO,KAAK0E,cAAL,CAAoB;AAAE7D,MAAAA,IAAI,EAAE,SAAR;AAAmB4D,MAAAA;AAAnB,KAApB,EAAkDzE,OAAlD,CAAP;AACH;;AACD2E,EAAAA,KAAK,CAACF,OAAD,EAAUzE,OAAV,EAAmB;AACpB,WAAO,KAAK0E,cAAL,CAAoB;AAAE7D,MAAAA,IAAI,EAAE,OAAR;AAAiB4D,MAAAA;AAAjB,KAApB,EAAgDzE,OAAhD,CAAP;AACH;;AACD4E,EAAAA,IAAI,CAACH,OAAD,EAAUzE,OAAV,EAAmB;AACnB,WAAO,KAAK0E,cAAL,CAAoB;AAAE7D,MAAAA,IAAI,EAAE,MAAR;AAAgB4D,MAAAA;AAAhB,KAApB,EAA+CzE,OAA/C,CAAP;AACH;;AACD6E,EAAAA,OAAO,CAACJ,OAAD,EAAUzE,OAAV,EAAmB;AACtB,WAAO,KAAK0E,cAAL,CAAoB;AAAE7D,MAAAA,IAAI,EAAE,SAAR;AAAmB4D,MAAAA;AAAnB,KAApB,EAAkDzE,OAAlD,CAAP;AACH;;AACD8E,EAAAA,OAAO,CAACL,OAAD,EAAUzE,OAAV,EAAmB;AACtB,WAAO,KAAK0E,cAAL,CAAoB;AAAE7D,MAAAA,IAAI,EAAE,SAAR;AAAmB4D,MAAAA;AAAnB,KAApB,EAAkDzE,OAAlD,CAAP;AACH;;AACD3C,EAAAA,MAAM,CAACwD,IAAD,EAAO4D,OAAP,EAAgBzE,OAAhB,EAAyB;AAC3B,WAAO,KAAK0E,cAAL,CAAoB;AAAE7D,MAAAA,IAAF;AAAQ4D,MAAAA;AAAR,KAApB,EAAuCzE,OAAvC,CAAP;AACH;;AACD0E,EAAAA,cAAc,CAACK,OAAD,EAAU/E,OAAV,EAAmB;AAC7B,SAAKpD,SAAL,GAAiB,KAAKI,aAAL,CAAmB6G,2BAAnB,CAAjB;AACA,WAAO,KAAKjH,SAAL,CAAeS,MAAf,CAAsBkD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBuE,OAAlB,CAAd,EAA0C;AACnEC,MAAAA,SAAS,EAAE,IAAI1C,IAAJ,EADwD;AAEnE3C,MAAAA,SAAS,EAAE,KAAK7C,aAAL,EAFwD;AAGnEkD,MAAAA;AAHmE,KAA1C,CAAtB,CAAP;AAKH;;AA9BsC;;AAgC3CuE,gBAAgB,CAAC9D,IAAjB;AAAA,mBAA6G8D,gBAA7G,EAtRyG9J,EAsRzG,UAA+IuB,IAAI,CAACiJ,kBAApJ,GAtRyGxK,EAsRzG,UAAmLwB,IAAI,CAACiJ,OAAxL,GAtRyGzK,EAsRzG,UAA4MA,EAAE,CAAC0K,QAA/M;AAAA;;AACAZ,gBAAgB,CAACa,KAAjB,kBAvRyG3K,EAuRzG;AAAA,SAAiH8J,gBAAjH;AAAA,WAAiHA,gBAAjH;AAAA,cAA+IH;AAA/I;;AACA;AAAA,qDAxRyG3J,EAwRzG,mBAA2F8J,gBAA3F,EAAyH,CAAC;AAC9G1D,IAAAA,IAAI,EAAE3F,UADwG;AAE9G6H,IAAAA,IAAI,EAAE,CAAC;AACCsC,MAAAA,UAAU,EAAEjB;AADb,KAAD;AAFwG,GAAD,CAAzH,EAK4B,YAAY;AAAE,WAAO,CAAC;AAAEvD,MAAAA,IAAI,EAAE7E,IAAI,CAACiJ;AAAb,KAAD,EAAoC;AAAEpE,MAAAA,IAAI,EAAE5E,IAAI,CAACiJ;AAAb,KAApC,EAA4D;AAAErE,MAAAA,IAAI,EAAEpG,EAAE,CAAC0K;AAAX,KAA5D,CAAP;AAA4F,GALtI;AAAA;AAOA;AACA;AACA;AACA;;;AACA,MAAMG,eAAN,CAAsB;;AAEtBA,eAAe,CAAC7E,IAAhB;AAAA,mBAA4G6E,eAA5G;AAAA;;AACAA,eAAe,CAACjB,IAAhB,kBAtSyG5J,EAsSzG;AAAA,QAA6G6K;AAA7G;AACAA,eAAe,CAAChB,IAAhB,kBAvSyG7J,EAuSzG;AAAA,YAAwI,CAAC0B,UAAD,EAAaR,YAAb,EAA2BO,aAA3B,EAA0CL,YAA1C,EAAwDE,cAAxD,EAAwEqI,sBAAxE,CAAxI;AAAA;;AACA;AAAA,qDAxSyG3J,EAwSzG,mBAA2F6K,eAA3F,EAAwH,CAAC;AAC7GzE,IAAAA,IAAI,EAAE5F,QADuG;AAE7G8H,IAAAA,IAAI,EAAE,CAAC;AACCwC,MAAAA,OAAO,EAAE,CAACpJ,UAAD,EAAaR,YAAb,EAA2BO,aAA3B,EAA0CL,YAA1C,EAAwDE,cAAxD,EAAwEqI,sBAAxE,CADV;AAECoB,MAAAA,YAAY,EAAE,CAAC3B,2BAAD,EAA8BrB,kBAA9B,CAFf;AAGCiD,MAAAA,eAAe,EAAE,CAAC5B,2BAAD;AAHlB,KAAD;AAFuG,GAAD,CAAxH;AAAA;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAAS/C,aAAT,EAAwBxC,sBAAxB,EAAgDjC,WAAhD,EAA6DmG,kBAA7D,EAAiFqB,2BAAjF,EAA8GyB,eAA9G,EAA+Hf,gBAA/H,EAAiJH,sBAAjJ","sourcesContent":["import { ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from 'ng-zorro-antd/core/services';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nlet globalCounter = 0;\nclass NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        this.nzSingletonService = nzSingletonService;\n        this.overlay = overlay;\n        this.injector = injector;\n    }\n    remove(id) {\n        if (this.container) {\n            if (id) {\n                this.container.remove(id);\n            }\n            else {\n                this.container.removeAll();\n            }\n        }\n    }\n    getInstanceId() {\n        return `${this.componentPrefix}-${globalCounter++}`;\n    }\n    withContainer(ctor) {\n        let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n        if (containerInstance) {\n            return containerInstance;\n        }\n        const overlayRef = this.overlay.create({\n            hasBackdrop: false,\n            scrollStrategy: this.overlay.scrollStrategies.noop(),\n            positionStrategy: this.overlay.position().global()\n        });\n        const componentPortal = new ComponentPortal(ctor, null, this.injector);\n        const componentRef = overlayRef.attach(componentPortal);\n        const overlayPane = overlayRef.overlayElement;\n        overlayPane.style.zIndex = '1010';\n        if (!containerInstance) {\n            this.container = containerInstance = componentRef.instance;\n            this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n        }\n        return containerInstance;\n    }\n}\nclass NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        this.cdr = cdr;\n        this.nzConfigService = nzConfigService;\n        this.instances = [];\n        this.destroy$ = new Subject();\n        this.updateConfig();\n    }\n    ngOnInit() {\n        this.subscribeConfigChange();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    create(data) {\n        const instance = this.onCreate(data);\n        if (this.instances.length >= this.config.nzMaxStack) {\n            this.instances = this.instances.slice(1);\n        }\n        this.instances = [...this.instances, instance];\n        this.readyInstances();\n        return instance;\n    }\n    remove(id, userAction = false) {\n        this.instances.some((instance, index) => {\n            if (instance.messageId === id) {\n                this.instances.splice(index, 1);\n                this.instances = [...this.instances];\n                this.onRemove(instance, userAction);\n                this.readyInstances();\n                return true;\n            }\n            return false;\n        });\n    }\n    removeAll() {\n        this.instances.forEach(i => this.onRemove(i, false));\n        this.instances = [];\n        this.readyInstances();\n    }\n    onCreate(instance) {\n        instance.options = this.mergeOptions(instance.options);\n        instance.onClose = new Subject();\n        return instance;\n    }\n    onRemove(instance, userAction) {\n        instance.onClose.next(userAction);\n        instance.onClose.complete();\n    }\n    readyInstances() {\n        this.cdr.detectChanges();\n    }\n    mergeOptions(options) {\n        const { nzDuration, nzAnimate, nzPauseOnHover } = this.config;\n        return Object.assign({ nzDuration, nzAnimate, nzPauseOnHover }, options);\n    }\n}\nNzMNContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMNContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NzConfigService }], target: i0.ɵɵFactoryTarget.Directive });\nNzMNContainerComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzMNContainerComponent, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMNContainerComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.NzConfigService }]; } });\nclass NzMNComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.destroyed = new EventEmitter();\n        this.animationStateChanged = new Subject();\n        this.userAction = false;\n        this.eraseTimer = null;\n    }\n    ngOnInit() {\n        this.options = this.instance.options;\n        if (this.options.nzAnimate) {\n            this.instance.state = 'enter';\n            this.animationStateChanged\n                .pipe(filter(event => event.phaseName === 'done' && event.toState === 'leave'), take(1))\n                .subscribe(() => {\n                clearTimeout(this.closeTimer);\n                this.destroyed.next({ id: this.instance.messageId, userAction: this.userAction });\n            });\n        }\n        this.autoClose = this.options.nzDuration > 0;\n        if (this.autoClose) {\n            this.initErase();\n            this.startEraseTimeout();\n        }\n    }\n    ngOnDestroy() {\n        if (this.autoClose) {\n            this.clearEraseTimeout();\n        }\n        this.animationStateChanged.complete();\n    }\n    onEnter() {\n        if (this.autoClose && this.options.nzPauseOnHover) {\n            this.clearEraseTimeout();\n            this.updateTTL();\n        }\n    }\n    onLeave() {\n        if (this.autoClose && this.options.nzPauseOnHover) {\n            this.startEraseTimeout();\n        }\n    }\n    destroy(userAction = false) {\n        this.userAction = userAction;\n        if (this.options.nzAnimate) {\n            this.instance.state = 'leave';\n            this.cdr.detectChanges();\n            this.closeTimer = setTimeout(() => {\n                this.closeTimer = undefined;\n                this.destroyed.next({ id: this.instance.messageId, userAction });\n            }, 200);\n        }\n        else {\n            this.destroyed.next({ id: this.instance.messageId, userAction });\n        }\n    }\n    initErase() {\n        this.eraseTTL = this.options.nzDuration;\n        this.eraseTimingStart = Date.now();\n    }\n    updateTTL() {\n        if (this.autoClose) {\n            this.eraseTTL -= Date.now() - this.eraseTimingStart;\n        }\n    }\n    startEraseTimeout() {\n        if (this.eraseTTL > 0) {\n            this.clearEraseTimeout();\n            this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n            this.eraseTimingStart = Date.now();\n        }\n        else {\n            this.destroy();\n        }\n    }\n    clearEraseTimeout() {\n        if (this.eraseTimer !== null) {\n            clearTimeout(this.eraseTimer);\n            this.eraseTimer = null;\n        }\n    }\n}\nNzMNComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMNComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzMNComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzMNComponent, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMNComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageComponent extends NzMNComponent {\n    constructor(cdr) {\n        super(cdr);\n        this.destroyed = new EventEmitter();\n    }\n}\nNzMessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzMessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzMessageComponent, selector: \"nz-message\", inputs: { instance: \"instance\" }, outputs: { destroyed: \"destroyed\" }, exportAs: [\"nzMessage\"], usesInheritance: true, ngImport: i0, template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, directives: [{ type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [moveUpMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-message',\n                    exportAs: 'nzMessage',\n                    preserveWhitespaces: false,\n                    animations: [moveUpMotion],\n                    template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { instance: [{\n                type: Input\n            }], destroyed: [{\n                type: Output\n            }] } });\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\nconst NZ_MESSAGE_DEFAULT_CONFIG = {\n    nzAnimate: true,\n    nzDuration: 3000,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzTop: 24,\n    nzDirection: 'ltr'\n};\nclass NzMessageContainerComponent extends NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        super(cdr, nzConfigService);\n        this.dir = 'ltr';\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n        this.dir = (config === null || config === void 0 ? void 0 : config.nzDirection) || 'ltr';\n    }\n    subscribeConfigChange() {\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateConfig();\n            const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n            if (config) {\n                const { nzDirection } = config;\n                this.dir = nzDirection || this.dir;\n            }\n        });\n    }\n    updateConfig() {\n        this.config = Object.assign(Object.assign(Object.assign({}, NZ_MESSAGE_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME));\n        this.top = toCssPixel(this.config.nzTop);\n        this.cdr.markForCheck();\n    }\n}\nNzMessageContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NzConfigService }], target: i0.ɵɵFactoryTarget.Component });\nNzMessageContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzMessageContainerComponent, selector: \"nz-message-container\", exportAs: [\"nzMessageContainer\"], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `, isInline: true, components: [{ type: NzMessageComponent, selector: \"nz-message\", inputs: [\"instance\"], outputs: [\"destroyed\"], exportAs: [\"nzMessage\"] }], directives: [{ type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-message-container',\n                    exportAs: 'nzMessageContainer',\n                    preserveWhitespaces: false,\n                    template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.NzConfigService }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageServiceModule {\n}\nNzMessageServiceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageServiceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzMessageServiceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageServiceModule });\nNzMessageServiceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageServiceModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageServiceModule, decorators: [{\n            type: NgModule\n        }] });\n\nclass NzMessageService extends NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        super(nzSingletonService, overlay, injector);\n        this.componentPrefix = 'message-';\n    }\n    success(content, options) {\n        return this.createInstance({ type: 'success', content }, options);\n    }\n    error(content, options) {\n        return this.createInstance({ type: 'error', content }, options);\n    }\n    info(content, options) {\n        return this.createInstance({ type: 'info', content }, options);\n    }\n    warning(content, options) {\n        return this.createInstance({ type: 'warning', content }, options);\n    }\n    loading(content, options) {\n        return this.createInstance({ type: 'loading', content }, options);\n    }\n    create(type, content, options) {\n        return this.createInstance({ type, content }, options);\n    }\n    createInstance(message, options) {\n        this.container = this.withContainer(NzMessageContainerComponent);\n        return this.container.create(Object.assign(Object.assign({}, message), {\n            createdAt: new Date(),\n            messageId: this.getInstanceId(),\n            options\n        }));\n    }\n}\nNzMessageService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageService, deps: [{ token: i1$2.NzSingletonService }, { token: i2$1.Overlay }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nNzMessageService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageService, providedIn: NzMessageServiceModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: NzMessageServiceModule\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.NzSingletonService }, { type: i2$1.Overlay }, { type: i0.Injector }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageModule {\n}\nNzMessageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzMessageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageModule, declarations: [NzMessageContainerComponent, NzMessageComponent], imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule] });\nNzMessageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageModule, imports: [[BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzMessageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n                    declarations: [NzMessageContainerComponent, NzMessageComponent],\n                    entryComponents: [NzMessageContainerComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService, NzMessageServiceModule };\n"]},"metadata":{},"sourceType":"module"}