{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { TAB, ESCAPE, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i9 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Self, Injector, forwardRef, Component, Optional, Host, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, merge, of } from 'rxjs';\nimport { takeUntil, tap, filter } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzTreeBaseService, NzTreeBase, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/select';\nimport { NzSelectSearchComponent, NzSelectModule } from 'ng-zorro-antd/select';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i6 from 'ng-zorro-antd/tree';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport * as i7 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i10 from 'ng-zorro-antd/core/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = [\"nzTreeTemplate\"];\nconst _c1 = [\"treeRef\"];\n\nfunction NzTreeSelectComponent_ng_template_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵelement(1, \"nz-embed-empty\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzComponentName\", \"tree-select\")(\"specificContent\", ctx_r7.nzNotFoundContent);\n  }\n}\n\nconst _c2 = function () {\n  return [];\n};\n\nfunction NzTreeSelectComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"nz-tree\", 8, 9);\n    i0.ɵɵlistener(\"nzExpandChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzExpandChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onExpandedKeysChange($event);\n    })(\"nzClick\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.nzTreeClick.emit($event);\n    })(\"nzCheckedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckedKeysChange_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.updateSelectedNodes();\n    })(\"nzSelectedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSelectedKeysChange_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.updateSelectedNodes();\n    })(\"nzCheckBoxChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckBoxChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.nzTreeCheckBoxChange.emit($event);\n    })(\"nzSearchValueChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSearchValueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.setSearchValues($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NzTreeSelectComponent_ng_template_0_span_3_Template, 2, 2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-dropdown-placement-bottomLeft\", ctx_r0.dropDownPosition === \"bottom\")(\"ant-select-dropdown-placement-topLeft\", ctx_r0.dropDownPosition === \"top\")(\"ant-tree-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    i0.ɵɵproperty(\"@slideMotion\", \"enter\")(\"ngClass\", ctx_r0.dropdownClassName)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"dir\", ctx_r0.dir)(\"ngStyle\", ctx_r0.nzDropdownStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.isNotFound)(\"nzData\", ctx_r0.nzNodes)(\"nzMultiple\", ctx_r0.nzMultiple)(\"nzSearchValue\", ctx_r0.inputValue)(\"nzHideUnMatched\", ctx_r0.nzHideUnMatched)(\"nzShowIcon\", ctx_r0.nzShowIcon)(\"nzCheckable\", ctx_r0.nzCheckable)(\"nzAsyncData\", ctx_r0.nzAsyncData)(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzExpandAll\", ctx_r0.nzDefaultExpandAll)(\"nzExpandedKeys\", ctx_r0.expandedKeys)(\"nzCheckedKeys\", ctx_r0.nzCheckable ? ctx_r0.value : i0.ɵɵpureFunction0(34, _c2))(\"nzSelectedKeys\", !ctx_r0.nzCheckable ? ctx_r0.value : i0.ɵɵpureFunction0(35, _c2))(\"nzTreeTemplate\", ctx_r0.treeTemplate)(\"nzCheckStrictly\", ctx_r0.nzCheckStrictly)(\"nzVirtualItemSize\", ctx_r0.nzVirtualItemSize)(\"nzVirtualMaxBufferPx\", ctx_r0.nzVirtualMaxBufferPx)(\"nzVirtualMinBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"nzVirtualHeight\", ctx_r0.nzVirtualHeight);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzNodes.length === 0 || ctx_r0.isNotFound);\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-select-item\", 15);\n    i0.ɵɵlistener(\"delete\", function NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template_nz_select_item_delete_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const node_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.removeSelected(node_r17, true);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r17 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"deletable\", true)(\"disabled\", node_r17.isDisabled || ctx_r15.nzDisabled)(\"label\", ctx_r15.nzDisplayWith(node_r17));\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 16);\n    i0.ɵɵpipe(1, \"slice\");\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"contentTemplateOutlet\", ctx_r16.nzMaxTagPlaceholder)(\"contentTemplateOutletContext\", i0.ɵɵpipeBind2(1, 5, ctx_r16.selectedNodes, ctx_r16.nzMaxTagCount))(\"deletable\", false)(\"disabled\", false)(\"label\", \"+ \" + (ctx_r16.selectedNodes.length - ctx_r16.nzMaxTagCount) + \" ...\");\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template, 1, 3, \"nz-select-item\", 13);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵtemplate(3, NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template, 2, 8, \"nz-select-item\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 3, ctx_r1.selectedNodes, 0, ctx_r1.nzMaxTagCount))(\"ngForTrackBy\", ctx_r1.trackValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedNodes.length > ctx_r1.nzMaxTagCount);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_placeholder_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-placeholder\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", ctx_r2.placeHolderDisplay);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.nzPlaceHolder);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"deletable\", false)(\"disabled\", false)(\"label\", ctx_r3.nzDisplayWith(ctx_r3.selectedNodes[0]));\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_arrow_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-arrow\");\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_clear_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-select-clear\", 19);\n    i0.ɵɵlistener(\"clear\", function NzTreeSelectComponent_nz_select_clear_7_Template_nz_select_clear_clear_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onClearSelection();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nlet NzTreeSelectService = /*#__PURE__*/(() => {\n  class NzTreeSelectService extends NzTreeBaseService {}\n\n  NzTreeSelectService.ɵfac = /* @__PURE__ */function () {\n    let ɵNzTreeSelectService_BaseFactory;\n    return function NzTreeSelectService_Factory(t) {\n      return (ɵNzTreeSelectService_BaseFactory || (ɵNzTreeSelectService_BaseFactory = i0.ɵɵgetInheritedFactory(NzTreeSelectService)))(t || NzTreeSelectService);\n    };\n  }();\n\n  NzTreeSelectService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NzTreeSelectService,\n    factory: NzTreeSelectService.ɵfac\n  });\n  return NzTreeSelectService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction higherOrderServiceFactory(injector) {\n  return injector.get(NzTreeSelectService);\n}\n\nconst NZ_CONFIG_MODULE_NAME = 'treeSelect';\nconst TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\nlet NzTreeSelectComponent = /*#__PURE__*/(() => {\n  class NzTreeSelectComponent extends NzTreeBase {\n    constructor(nzTreeService, nzConfigService, renderer, cdr, elementRef, directionality, focusMonitor, noAnimation) {\n      super(nzTreeService);\n      this.nzConfigService = nzConfigService;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.elementRef = elementRef;\n      this.directionality = directionality;\n      this.focusMonitor = focusMonitor;\n      this.noAnimation = noAnimation;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzId = null;\n      this.nzAllowClear = true;\n      this.nzShowExpand = true;\n      this.nzShowLine = false;\n      this.nzDropdownMatchSelectWidth = true;\n      this.nzCheckable = false;\n      this.nzHideUnMatched = false;\n      this.nzShowIcon = false;\n      this.nzShowSearch = false;\n      this.nzDisabled = false;\n      this.nzAsyncData = false;\n      this.nzMultiple = false;\n      this.nzDefaultExpandAll = false;\n      this.nzCheckStrictly = false;\n      this.nzVirtualItemSize = 28;\n      this.nzVirtualMaxBufferPx = 500;\n      this.nzVirtualMinBufferPx = 28;\n      this.nzVirtualHeight = null;\n      this.nzNodes = [];\n      this.nzOpen = false;\n      this.nzSize = 'default';\n      this.nzPlaceHolder = '';\n      this.nzDropdownStyle = null;\n      this.nzBackdrop = false;\n\n      this.nzDisplayWith = node => node.title;\n\n      this.nzMaxTagPlaceholder = null;\n      this.nzOpenChange = new EventEmitter();\n      this.nzCleared = new EventEmitter();\n      this.nzRemoved = new EventEmitter();\n      this.nzExpandChange = new EventEmitter();\n      this.nzTreeClick = new EventEmitter();\n      this.nzTreeCheckBoxChange = new EventEmitter();\n      this.dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n      this.isComposing = false;\n      this.isDestroy = true;\n      this.isNotFound = false;\n      this.focused = false;\n      this.inputValue = '';\n      this.dropDownPosition = 'bottom';\n      this.selectedNodes = [];\n      this.expandedKeys = [];\n      this.value = [];\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n\n      this.onChange = _value => {};\n\n      this.onTouched = () => {};\n\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-select');\n    }\n\n    set nzExpandedKeys(value) {\n      this.expandedKeys = value;\n    }\n\n    get nzExpandedKeys() {\n      return this.expandedKeys;\n    }\n\n    get treeTemplate() {\n      return this.nzTreeTemplate || this.nzTreeTemplateChild;\n    }\n\n    get placeHolderDisplay() {\n      return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n    }\n\n    get isMultiple() {\n      return this.nzMultiple || this.nzCheckable;\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.isDestroy = false;\n      this.subscribeSelectionChange();\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          this.focused = false;\n          this.cdr.markForCheck();\n          Promise.resolve().then(() => {\n            this.onTouched();\n          });\n        } else {\n          this.focused = true;\n          this.cdr.markForCheck();\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.isDestroy = true;\n      this.closeDropDown();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    isComposingChange(isComposing) {\n      this.isComposing = isComposing;\n    }\n\n    setDisabledState(isDisabled) {\n      this.nzDisabled = isDisabled;\n      this.closeDropDown();\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzNodes,\n        nzDropdownClassName\n      } = changes;\n\n      if (nzNodes) {\n        this.updateSelectedNodes(true);\n      }\n\n      if (nzDropdownClassName) {\n        const className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n        this.dropdownClassName = className ? `${TREE_SELECT_DEFAULT_CLASS} ${className}` : TREE_SELECT_DEFAULT_CLASS;\n      }\n    }\n\n    writeValue(value) {\n      if (isNotNil(value)) {\n        if (this.isMultiple && Array.isArray(value)) {\n          this.value = value;\n        } else {\n          this.value = [value];\n        }\n\n        this.updateSelectedNodes(true);\n      } else {\n        this.value = [];\n        this.selectedNodes.forEach(node => {\n          this.removeSelected(node, false);\n        });\n        this.selectedNodes = [];\n      }\n\n      this.cdr.markForCheck();\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    onKeydown(event) {\n      if (this.nzDisabled) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case ESCAPE:\n          /**\n           * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n           */\n          break;\n\n        case TAB:\n          this.closeDropDown();\n          break;\n\n        default:\n          if (!this.nzOpen) {\n            this.openDropdown();\n          }\n\n      }\n    }\n\n    trigger() {\n      if (this.nzDisabled || !this.nzDisabled && this.nzOpen) {\n        this.closeDropDown();\n      } else {\n        this.openDropdown();\n      }\n    }\n\n    openDropdown() {\n      if (!this.nzDisabled) {\n        this.nzOpen = true;\n        this.nzOpenChange.emit(this.nzOpen);\n        this.updateCdkConnectedOverlayStatus();\n\n        if (this.nzShowSearch || this.isMultiple) {\n          this.focusOnInput();\n        }\n      }\n    }\n\n    closeDropDown() {\n      this.onTouched();\n      this.nzOpen = false;\n      this.inputValue = '';\n      this.isNotFound = false;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.cdr.markForCheck();\n    }\n\n    onKeyDownInput(e) {\n      const keyCode = e.keyCode;\n      const eventTarget = e.target;\n\n      if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n        e.preventDefault();\n\n        if (this.selectedNodes.length) {\n          const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n          this.removeSelected(removeNode);\n        }\n      }\n    }\n\n    onExpandedKeysChange(value) {\n      this.nzExpandChange.emit(value);\n      this.expandedKeys = [...value.keys];\n    }\n\n    setInputValue(value) {\n      this.inputValue = value;\n      this.updatePosition();\n    }\n\n    removeSelected(node, emit = true) {\n      node.isSelected = false;\n      node.isChecked = false;\n\n      if (this.nzCheckable) {\n        this.nzTreeService.conduct(node, this.nzCheckStrictly);\n      } else {\n        this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n      }\n\n      if (emit) {\n        this.nzRemoved.emit(node);\n      }\n    }\n\n    focusOnInput() {\n      if (this.nzSelectSearchComponent) {\n        this.nzSelectSearchComponent.focus();\n      }\n    }\n\n    subscribeSelectionChange() {\n      merge(this.nzTreeClick.pipe(tap(event => {\n        const node = event.node;\n\n        if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n          node.isChecked = !node.isChecked;\n          node.isHalfChecked = false;\n\n          if (!this.nzCheckStrictly) {\n            this.nzTreeService.conduct(node);\n          }\n        }\n\n        if (this.nzCheckable) {\n          node.isSelected = false;\n        }\n      }), filter(event => {\n        const node = event.node;\n        return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n      })), this.nzCheckable ? this.nzTreeCheckBoxChange : of(), this.nzCleared, this.nzRemoved).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.updateSelectedNodes();\n        const value = this.selectedNodes.map(node => node.key);\n        this.value = [...value];\n\n        if (this.nzShowSearch || this.isMultiple) {\n          this.inputValue = '';\n          this.isNotFound = false;\n        }\n\n        if (this.isMultiple) {\n          this.onChange(value);\n          this.focusOnInput();\n          this.updatePosition();\n        } else {\n          this.closeDropDown();\n          this.onChange(value.length ? value[0] : null);\n        }\n      });\n    }\n\n    updateSelectedNodes(init = false) {\n      if (init) {\n        const nodes = this.coerceTreeNodes(this.nzNodes);\n        this.nzTreeService.isMultiple = this.isMultiple;\n        this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n        this.nzTreeService.initTree(nodes);\n\n        if (this.nzCheckable) {\n          this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n        } else {\n          this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n        }\n      }\n\n      this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n    }\n\n    updatePosition() {\n      reqAnimFrame(() => {\n        var _a, _b;\n\n        (_b = (_a = this.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();\n      });\n    }\n\n    onPositionChange(position) {\n      this.dropDownPosition = position.connectionPair.originY;\n    }\n\n    onClearSelection() {\n      this.selectedNodes.forEach(node => {\n        this.removeSelected(node, false);\n      });\n      this.nzCleared.emit();\n    }\n\n    onClickOutside(event) {\n      if (!this.elementRef.nativeElement.contains(event.target)) {\n        this.closeDropDown();\n      }\n    }\n\n    setSearchValues($event) {\n      Promise.resolve().then(() => {\n        this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys.length === 0;\n      });\n    }\n\n    updateCdkConnectedOverlayStatus() {\n      this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n\n    trackValue(_index, option) {\n      return option.key;\n    }\n\n  }\n\n  NzTreeSelectComponent.ɵfac = function NzTreeSelectComponent_Factory(t) {\n    return new (t || NzTreeSelectComponent)(i0.ɵɵdirectiveInject(NzTreeSelectService), i0.ɵɵdirectiveInject(i2.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(i5.NzNoAnimationDirective, 9));\n  };\n\n  NzTreeSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTreeSelectComponent,\n    selectors: [[\"nz-tree-select\"]],\n    contentQueries: function NzTreeSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n      }\n    },\n    viewQuery: function NzTreeSelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NzSelectSearchComponent, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(CdkOverlayOrigin, 7);\n        i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzSelectSearchComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);\n      }\n    },\n    hostAttrs: [1, \"ant-select\"],\n    hostVars: 22,\n    hostBindings: function NzTreeSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NzTreeSelectComponent_click_HostBindingHandler() {\n          return ctx.trigger();\n        })(\"keydown\", function NzTreeSelectComponent_keydown_HostBindingHandler($event) {\n          return ctx.onKeydown($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-rtl\", ctx.dir === \"rtl\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-single\", !ctx.isMultiple)(\"ant-select-show-arrow\", !ctx.isMultiple)(\"ant-select-show-search\", !ctx.isMultiple)(\"ant-select-multiple\", ctx.isMultiple)(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-open\", ctx.nzOpen)(\"ant-select-focused\", ctx.nzOpen || ctx.focused);\n      }\n    },\n    inputs: {\n      nzId: \"nzId\",\n      nzAllowClear: \"nzAllowClear\",\n      nzShowExpand: \"nzShowExpand\",\n      nzShowLine: \"nzShowLine\",\n      nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\",\n      nzCheckable: \"nzCheckable\",\n      nzHideUnMatched: \"nzHideUnMatched\",\n      nzShowIcon: \"nzShowIcon\",\n      nzShowSearch: \"nzShowSearch\",\n      nzDisabled: \"nzDisabled\",\n      nzAsyncData: \"nzAsyncData\",\n      nzMultiple: \"nzMultiple\",\n      nzDefaultExpandAll: \"nzDefaultExpandAll\",\n      nzCheckStrictly: \"nzCheckStrictly\",\n      nzVirtualItemSize: \"nzVirtualItemSize\",\n      nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n      nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n      nzVirtualHeight: \"nzVirtualHeight\",\n      nzExpandedIcon: \"nzExpandedIcon\",\n      nzNotFoundContent: \"nzNotFoundContent\",\n      nzNodes: \"nzNodes\",\n      nzOpen: \"nzOpen\",\n      nzSize: \"nzSize\",\n      nzPlaceHolder: \"nzPlaceHolder\",\n      nzDropdownStyle: \"nzDropdownStyle\",\n      nzDropdownClassName: \"nzDropdownClassName\",\n      nzBackdrop: \"nzBackdrop\",\n      nzExpandedKeys: \"nzExpandedKeys\",\n      nzDisplayWith: \"nzDisplayWith\",\n      nzMaxTagCount: \"nzMaxTagCount\",\n      nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\",\n      nzTreeTemplate: \"nzTreeTemplate\"\n    },\n    outputs: {\n      nzOpenChange: \"nzOpenChange\",\n      nzCleared: \"nzCleared\",\n      nzRemoved: \"nzRemoved\",\n      nzExpandChange: \"nzExpandChange\",\n      nzTreeClick: \"nzTreeClick\",\n      nzTreeCheckBoxChange: \"nzTreeCheckBoxChange\"\n    },\n    exportAs: [\"nzTreeSelect\"],\n    features: [i0.ɵɵProvidersFeature([NzTreeSelectService, {\n      provide: NzTreeHigherOrderServiceToken,\n      useFactory: higherOrderServiceFactory,\n      deps: [[new Self(), Injector]]\n    }, {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeSelectComponent),\n      multi: true\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 17,\n    consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayWidth\", \"overlayOutsideClick\", \"detach\", \"positionChange\"], [\"cdkOverlayOrigin\", \"\", 1, \"ant-select-selector\"], [4, \"ngIf\"], [3, \"nzId\", \"showInput\", \"value\", \"mirrorSync\", \"disabled\", \"focusTrigger\", \"keydown\", \"isComposingChange\", \"valueChange\"], [3, \"placeholder\", \"display\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"clear\", 4, \"ngIf\"], [3, \"ngClass\", \"nzNoAnimation\", \"dir\", \"ngStyle\"], [\"nzNoAnimation\", \"\", \"nzSelectMode\", \"\", \"nzBlockNode\", \"\", 3, \"hidden\", \"nzData\", \"nzMultiple\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzShowIcon\", \"nzCheckable\", \"nzAsyncData\", \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzExpandAll\", \"nzExpandedKeys\", \"nzCheckedKeys\", \"nzSelectedKeys\", \"nzTreeTemplate\", \"nzCheckStrictly\", \"nzVirtualItemSize\", \"nzVirtualMaxBufferPx\", \"nzVirtualMinBufferPx\", \"nzVirtualHeight\", \"nzExpandChange\", \"nzClick\", \"nzCheckedKeysChange\", \"nzSelectedKeysChange\", \"nzCheckBoxChange\", \"nzSearchValueChange\"], [\"treeRef\", \"\"], [\"class\", \"ant-select-not-found\", 4, \"ngIf\"], [1, \"ant-select-not-found\"], [3, \"nzComponentName\", \"specificContent\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\"], [3, \"placeholder\"], [3, \"deletable\", \"disabled\", \"label\"], [3, \"clear\"]],\n    template: function NzTreeSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NzTreeSelectComponent_ng_template_0_Template, 4, 36, \"ng-template\", 0);\n        i0.ɵɵlistener(\"overlayOutsideClick\", function NzTreeSelectComponent_Template_ng_template_overlayOutsideClick_0_listener($event) {\n          return ctx.onClickOutside($event);\n        })(\"detach\", function NzTreeSelectComponent_Template_ng_template_detach_0_listener() {\n          return ctx.closeDropDown();\n        })(\"positionChange\", function NzTreeSelectComponent_Template_ng_template_positionChange_0_listener($event) {\n          return ctx.onPositionChange($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, NzTreeSelectComponent_ng_container_2_Template, 4, 7, \"ng-container\", 2);\n        i0.ɵɵelementStart(3, \"nz-select-search\", 3);\n        i0.ɵɵlistener(\"keydown\", function NzTreeSelectComponent_Template_nz_select_search_keydown_3_listener($event) {\n          return ctx.onKeyDownInput($event);\n        })(\"isComposingChange\", function NzTreeSelectComponent_Template_nz_select_search_isComposingChange_3_listener($event) {\n          return ctx.isComposing = $event;\n        })(\"valueChange\", function NzTreeSelectComponent_Template_nz_select_search_valueChange_3_listener($event) {\n          return ctx.setInputValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, NzTreeSelectComponent_nz_select_placeholder_4_Template, 1, 3, \"nz-select-placeholder\", 4);\n        i0.ɵɵtemplate(5, NzTreeSelectComponent_nz_select_item_5_Template, 1, 3, \"nz-select-item\", 5);\n        i0.ɵɵtemplate(6, NzTreeSelectComponent_nz_select_arrow_6_Template, 1, 0, \"nz-select-arrow\", 2);\n        i0.ɵɵtemplate(7, NzTreeSelectComponent_nz_select_clear_7_Template, 1, 0, \"nz-select-clear\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayOrigin\", ctx.cdkOverlayOrigin)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-select-tree-dropdown\")(\"cdkConnectedOverlayMinWidth\", ctx.nzDropdownMatchSelectWidth ? null : ctx.triggerWidth)(\"cdkConnectedOverlayWidth\", ctx.nzDropdownMatchSelectWidth ? ctx.triggerWidth : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiple);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzId\", ctx.nzId)(\"showInput\", ctx.nzShowSearch)(\"value\", ctx.inputValue)(\"mirrorSync\", ctx.isMultiple)(\"disabled\", ctx.nzDisabled)(\"focusTrigger\", ctx.nzOpen);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nzPlaceHolder && ctx.selectedNodes.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isMultiple && ctx.selectedNodes.length === 1 && !ctx.isComposing && ctx.inputValue === \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isMultiple);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nzAllowClear && !ctx.nzDisabled && ctx.selectedNodes.length);\n      }\n    },\n    directives: [i6.NzTreeComponent, i7.NzEmbedEmptyComponent, i8.NzSelectItemComponent, i8.NzSelectSearchComponent, i8.NzSelectPlaceholderComponent, i8.NzSelectArrowComponent, i8.NzSelectClearComponent, i9.CdkConnectedOverlay, i10.NzConnectedOverlayDirective, i11.NgClass, i5.NzNoAnimationDirective, i3.Dir, i11.NgStyle, i11.NgIf, i9.CdkOverlayOrigin, i11.NgForOf],\n    pipes: [i11.SlicePipe],\n    encapsulation: 2,\n    data: {\n      animation: [slideMotion]\n    }\n  });\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzAllowClear\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowExpand\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowLine\", void 0);\n\n  __decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzDropdownMatchSelectWidth\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzCheckable\", void 0);\n\n  __decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzHideUnMatched\", void 0);\n\n  __decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzShowIcon\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowSearch\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzDisabled\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzAsyncData\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzMultiple\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzDefaultExpandAll\", void 0);\n\n  __decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzCheckStrictly\", void 0);\n\n  __decorate([WithConfig()], NzTreeSelectComponent.prototype, \"nzSize\", void 0);\n\n  __decorate([WithConfig()], NzTreeSelectComponent.prototype, \"nzBackdrop\", void 0);\n\n  return NzTreeSelectComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzTreeSelectModule = /*#__PURE__*/(() => {\n  class NzTreeSelectModule {}\n\n  NzTreeSelectModule.ɵfac = function NzTreeSelectModule_Factory(t) {\n    return new (t || NzTreeSelectModule)();\n  };\n\n  NzTreeSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzTreeSelectModule\n  });\n  NzTreeSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule]]\n  });\n  return NzTreeSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTreeSelectComponent, NzTreeSelectModule, NzTreeSelectService, higherOrderServiceFactory }; //# sourceMappingURL=ng-zorro-antd-tree-select.mjs.map","map":null,"metadata":{},"sourceType":"module"}