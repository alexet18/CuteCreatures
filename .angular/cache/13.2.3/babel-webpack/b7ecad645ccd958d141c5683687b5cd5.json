{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { FormsModule } from '@angular/forms';\n\nfunction NzTagComponent_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 1);\n    i0.ɵɵlistener(\"click\", function NzTagComponent_i_1_Template_i_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.closeTag($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [\"*\"];\n\nclass NzTagComponent {\n  constructor(cdr, renderer, elementRef, directionality) {\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.isPresetColor = false;\n    this.nzMode = 'default';\n    this.nzChecked = false;\n    this.nzOnClose = new EventEmitter();\n    this.nzCheckedChange = new EventEmitter();\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  updateCheckedStatus() {\n    if (this.nzMode === 'checkable') {\n      this.nzChecked = !this.nzChecked;\n      this.nzCheckedChange.emit(this.nzChecked);\n    }\n  }\n\n  closeTag(e) {\n    this.nzOnClose.emit(e);\n\n    if (!e.defaultPrevented) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  clearPresetColor() {\n    const hostElement = this.elementRef.nativeElement; // /(ant-tag-(?:pink|red|...))/g\n\n    const regexp = new RegExp(`(ant-tag-(?:${[...presetColors, ...statusColors].join('|')}))`, 'g');\n    const classname = hostElement.classList.toString();\n    const matches = [];\n    let match = regexp.exec(classname);\n\n    while (match !== null) {\n      matches.push(match[1]);\n      match = regexp.exec(classname);\n    }\n\n    hostElement.classList.remove(...matches);\n  }\n\n  setPresetColor() {\n    const hostElement = this.elementRef.nativeElement;\n    this.clearPresetColor();\n\n    if (!this.nzColor) {\n      this.isPresetColor = false;\n    } else {\n      this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n    }\n\n    if (this.isPresetColor) {\n      hostElement.classList.add(`ant-tag-${this.nzColor}`);\n    }\n  }\n\n  ngOnInit() {\n    var _a;\n\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzColor\n    } = changes;\n\n    if (nzColor) {\n      this.setPresetColor();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTagComponent.ɵfac = function NzTagComponent_Factory(t) {\n  return new (t || NzTagComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzTagComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTagComponent,\n  selectors: [[\"nz-tag\"]],\n  hostAttrs: [1, \"ant-tag\"],\n  hostVars: 10,\n  hostBindings: function NzTagComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() {\n        return ctx.updateCheckedStatus();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n      i0.ɵɵclassProp(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked)(\"ant-tag-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzMode: \"nzMode\",\n    nzColor: \"nzColor\",\n    nzChecked: \"nzChecked\"\n  },\n  outputs: {\n    nzOnClose: \"nzOnClose\",\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  exportAs: [\"nzTag\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]],\n  template: function NzTagComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NzTagComponent_i_1_Template, 1, 0, \"i\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n    }\n  },\n  directives: [i2.NgIf, i3.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzTagComponent.prototype, \"nzChecked\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTagComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tag',\n      exportAs: 'nzTag',\n      preserveWhitespaces: false,\n      template: `\n    <ng-content></ng-content>\n    <i\n      nz-icon\n      nzType=\"close\"\n      class=\"ant-tag-close-icon\"\n      *ngIf=\"nzMode === 'closeable'\"\n      tabindex=\"-1\"\n      (click)=\"closeTag($event)\"\n    ></i>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'ant-tag',\n        '[style.background-color]': `isPresetColor ? '' : nzColor`,\n        '[class.ant-tag-has-color]': `nzColor && !isPresetColor`,\n        '[class.ant-tag-checkable]': `nzMode === 'checkable'`,\n        '[class.ant-tag-checkable-checked]': `nzChecked`,\n        '[class.ant-tag-rtl]': `dir === 'rtl'`,\n        '(click)': 'updateCheckedStatus()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzMode: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzOnClose: [{\n      type: Output\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTagModule {}\n\nNzTagModule.ɵfac = function NzTagModule_Factory(t) {\n  return new (t || NzTagModule)();\n};\n\nNzTagModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTagModule\n});\nNzTagModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTagModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n      declarations: [NzTagComponent],\n      exports: [NzTagComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTagComponent, NzTagModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-tag.mjs"],"names":["__decorate","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Input","Output","NgModule","Subject","takeUntil","presetColors","statusColors","isPresetColor","isStatusColor","InputBoolean","i1","BidiModule","i2","CommonModule","i3","NzIconModule","FormsModule","NzTagComponent","constructor","cdr","renderer","elementRef","directionality","nzMode","nzChecked","nzOnClose","nzCheckedChange","dir","destroy$","updateCheckedStatus","emit","closeTag","e","defaultPrevented","removeChild","parentNode","nativeElement","clearPresetColor","hostElement","regexp","RegExp","join","classname","classList","toString","matches","match","exec","push","remove","setPresetColor","nzColor","add","ngOnInit","_a","change","pipe","subscribe","direction","detectChanges","value","ngOnChanges","changes","ngOnDestroy","next","complete","ɵfac","ChangeDetectorRef","Renderer2","ElementRef","Directionality","ɵcmp","NgIf","NzIconDirective","prototype","type","args","selector","exportAs","preserveWhitespaces","template","changeDetection","OnPush","encapsulation","None","host","class","decorators","NzTagModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { FormsModule } from '@angular/forms';\n\nclass NzTagComponent {\n    constructor(cdr, renderer, elementRef, directionality) {\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.isPresetColor = false;\n        this.nzMode = 'default';\n        this.nzChecked = false;\n        this.nzOnClose = new EventEmitter();\n        this.nzCheckedChange = new EventEmitter();\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    updateCheckedStatus() {\n        if (this.nzMode === 'checkable') {\n            this.nzChecked = !this.nzChecked;\n            this.nzCheckedChange.emit(this.nzChecked);\n        }\n    }\n    closeTag(e) {\n        this.nzOnClose.emit(e);\n        if (!e.defaultPrevented) {\n            this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n        }\n    }\n    clearPresetColor() {\n        const hostElement = this.elementRef.nativeElement;\n        // /(ant-tag-(?:pink|red|...))/g\n        const regexp = new RegExp(`(ant-tag-(?:${[...presetColors, ...statusColors].join('|')}))`, 'g');\n        const classname = hostElement.classList.toString();\n        const matches = [];\n        let match = regexp.exec(classname);\n        while (match !== null) {\n            matches.push(match[1]);\n            match = regexp.exec(classname);\n        }\n        hostElement.classList.remove(...matches);\n    }\n    setPresetColor() {\n        const hostElement = this.elementRef.nativeElement;\n        this.clearPresetColor();\n        if (!this.nzColor) {\n            this.isPresetColor = false;\n        }\n        else {\n            this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n        }\n        if (this.isPresetColor) {\n            hostElement.classList.add(`ant-tag-${this.nzColor}`);\n        }\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.setPresetColor();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTagComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTagComponent, selector: \"nz-tag\", inputs: { nzMode: \"nzMode\", nzColor: \"nzColor\", nzChecked: \"nzChecked\" }, outputs: { nzOnClose: \"nzOnClose\", nzCheckedChange: \"nzCheckedChange\" }, host: { listeners: { \"click\": \"updateCheckedStatus()\" }, properties: { \"style.background-color\": \"isPresetColor ? '' : nzColor\", \"class.ant-tag-has-color\": \"nzColor && !isPresetColor\", \"class.ant-tag-checkable\": \"nzMode === 'checkable'\", \"class.ant-tag-checkable-checked\": \"nzChecked\", \"class.ant-tag-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-tag\" }, exportAs: [\"nzTag\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <i\n      nz-icon\n      nzType=\"close\"\n      class=\"ant-tag-close-icon\"\n      *ngIf=\"nzMode === 'closeable'\"\n      tabindex=\"-1\"\n      (click)=\"closeTag($event)\"\n    ></i>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzTagComponent.prototype, \"nzChecked\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTagComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tag',\n                    exportAs: 'nzTag',\n                    preserveWhitespaces: false,\n                    template: `\n    <ng-content></ng-content>\n    <i\n      nz-icon\n      nzType=\"close\"\n      class=\"ant-tag-close-icon\"\n      *ngIf=\"nzMode === 'closeable'\"\n      tabindex=\"-1\"\n      (click)=\"closeTag($event)\"\n    ></i>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'ant-tag',\n                        '[style.background-color]': `isPresetColor ? '' : nzColor`,\n                        '[class.ant-tag-has-color]': `nzColor && !isPresetColor`,\n                        '[class.ant-tag-checkable]': `nzMode === 'checkable'`,\n                        '[class.ant-tag-checkable-checked]': `nzChecked`,\n                        '[class.ant-tag-rtl]': `dir === 'rtl'`,\n                        '(click)': 'updateCheckedStatus()'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzMode: [{\n                type: Input\n            }], nzColor: [{\n                type: Input\n            }], nzChecked: [{\n                type: Input\n            }], nzOnClose: [{\n                type: Output\n            }], nzCheckedChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTagModule {\n}\nNzTagModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTagModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzTagModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTagModule, declarations: [NzTagComponent], imports: [BidiModule, CommonModule, FormsModule, NzIconModule], exports: [NzTagComponent] });\nNzTagModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTagModule, imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTagModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n                    declarations: [NzTagComponent],\n                    exports: [NzTagComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTagComponent, NzTagModule };\n"]},"metadata":{},"sourceType":"module"}