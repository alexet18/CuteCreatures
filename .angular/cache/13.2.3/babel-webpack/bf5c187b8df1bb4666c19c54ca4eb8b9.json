{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, forwardRef, Optional, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i3 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i6 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nconst _c0 = [\"nz-rate-item\", \"\"];\n\nfunction NzRateItemComponent_ng_template_1_Template(rf, ctx) {}\n\nfunction NzRateItemComponent_ng_template_3_Template(rf, ctx) {}\n\nfunction NzRateItemComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 4);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst _c2 = [\"ulElement\"];\n\nfunction NzRateComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵlistener(\"itemHover\", function NzRateComponent_li_2_Template_div_itemHover_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onItemHover(i_r3, $event);\n    })(\"itemClick\", function NzRateComponent_li_2_Template_div_itemClick_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onItemClick(i_r3, $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.starStyleArray[i_r3] || \"\")(\"nzTooltipTitle\", ctx_r1.nzTooltips[i_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"allowHalf\", ctx_r1.nzAllowHalf)(\"character\", ctx_r1.nzCharacter)(\"index\", i_r3);\n  }\n}\n\nlet NzRateItemComponent = /*#__PURE__*/(() => {\n  class NzRateItemComponent {\n    constructor() {\n      this.index = 0;\n      this.allowHalf = false;\n      this.itemHover = new EventEmitter();\n      this.itemClick = new EventEmitter();\n    }\n\n    hoverRate(isHalf) {\n      this.itemHover.next(isHalf && this.allowHalf);\n    }\n\n    clickRate(isHalf) {\n      this.itemClick.next(isHalf && this.allowHalf);\n    }\n\n  }\n\n  NzRateItemComponent.ɵfac = function NzRateItemComponent_Factory(t) {\n    return new (t || NzRateItemComponent)();\n  };\n\n  NzRateItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzRateItemComponent,\n    selectors: [[\"\", \"nz-rate-item\", \"\"]],\n    inputs: {\n      character: \"character\",\n      index: \"index\",\n      allowHalf: \"allowHalf\"\n    },\n    outputs: {\n      itemHover: \"itemHover\",\n      itemClick: \"itemClick\"\n    },\n    exportAs: [\"nzRateItem\"],\n    attrs: _c0,\n    decls: 6,\n    vars: 8,\n    consts: [[1, \"ant-rate-star-second\", 3, \"mouseover\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-rate-star-first\", 3, \"mouseover\", \"click\"], [\"defaultCharacter\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"star\", \"nzTheme\", \"fill\"]],\n    template: function NzRateItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mouseover\", function NzRateItemComponent_Template_div_mouseover_0_listener($event) {\n          ctx.hoverRate(false);\n          return $event.stopPropagation();\n        })(\"click\", function NzRateItemComponent_Template_div_click_0_listener() {\n          return ctx.clickRate(false);\n        });\n        i0.ɵɵtemplate(1, NzRateItemComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵlistener(\"mouseover\", function NzRateItemComponent_Template_div_mouseover_2_listener($event) {\n          ctx.hoverRate(true);\n          return $event.stopPropagation();\n        })(\"click\", function NzRateItemComponent_Template_div_click_2_listener() {\n          return ctx.clickRate(true);\n        });\n        i0.ɵɵtemplate(3, NzRateItemComponent_ng_template_3_Template, 0, 0, \"ng-template\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, NzRateItemComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(5);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.character || _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c1, ctx.index));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.character || _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c1, ctx.index));\n      }\n    },\n    directives: [i5.NgTemplateOutlet, i2.NzIconDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean()], NzRateItemComponent.prototype, \"allowHalf\", void 0);\n\n  return NzRateItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'rate';\nlet NzRateComponent = /*#__PURE__*/(() => {\n  class NzRateComponent {\n    constructor(nzConfigService, ngZone, renderer, cdr, directionality, destroy$) {\n      this.nzConfigService = nzConfigService;\n      this.ngZone = ngZone;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.directionality = directionality;\n      this.destroy$ = destroy$;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzAllowClear = true;\n      this.nzAllowHalf = false;\n      this.nzDisabled = false;\n      this.nzAutoFocus = false;\n      this.nzCount = 5;\n      this.nzTooltips = [];\n      this.nzOnBlur = new EventEmitter();\n      this.nzOnFocus = new EventEmitter();\n      this.nzOnHoverChange = new EventEmitter();\n      this.nzOnKeyDown = new EventEmitter();\n      this.classMap = {};\n      this.starArray = [];\n      this.starStyleArray = [];\n      this.dir = 'ltr';\n      this.hasHalf = false;\n      this.hoverValue = 0;\n      this.isFocused = false;\n      this._value = 0;\n\n      this.onChange = () => null;\n\n      this.onTouched = () => null;\n    }\n\n    get nzValue() {\n      return this._value;\n    }\n\n    set nzValue(input) {\n      if (this._value === input) {\n        return;\n      }\n\n      this._value = input;\n      this.hasHalf = !Number.isInteger(input);\n      this.hoverValue = Math.ceil(input);\n    }\n\n    ngOnChanges(changes) {\n      const {\n        nzAutoFocus,\n        nzCount,\n        nzValue\n      } = changes;\n\n      if (nzAutoFocus && !nzAutoFocus.isFirstChange()) {\n        const el = this.ulElement.nativeElement;\n\n        if (this.nzAutoFocus && !this.nzDisabled) {\n          this.renderer.setAttribute(el, 'autofocus', 'autofocus');\n        } else {\n          this.renderer.removeAttribute(el, 'autofocus');\n        }\n      }\n\n      if (nzCount) {\n        this.updateStarArray();\n      }\n\n      if (nzValue) {\n        this.updateStarStyle();\n      }\n    }\n\n    ngOnInit() {\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => this.cdr.markForCheck());\n      this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.ngZone.runOutsideAngular(() => {\n        fromEvent(this.ulElement.nativeElement, 'focus').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          this.isFocused = true;\n\n          if (this.nzOnFocus.observers.length) {\n            this.ngZone.run(() => this.nzOnFocus.emit(event));\n          }\n        });\n        fromEvent(this.ulElement.nativeElement, 'blur').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          this.isFocused = false;\n\n          if (this.nzOnBlur.observers.length) {\n            this.ngZone.run(() => this.nzOnBlur.emit(event));\n          }\n        });\n      });\n    }\n\n    onItemClick(index, isHalf) {\n      if (this.nzDisabled) {\n        return;\n      }\n\n      this.hoverValue = index + 1;\n      const actualValue = isHalf ? index + 0.5 : index + 1;\n\n      if (this.nzValue === actualValue) {\n        if (this.nzAllowClear) {\n          this.nzValue = 0;\n          this.onChange(this.nzValue);\n        }\n      } else {\n        this.nzValue = actualValue;\n        this.onChange(this.nzValue);\n      }\n\n      this.updateStarStyle();\n    }\n\n    onItemHover(index, isHalf) {\n      if (this.nzDisabled || this.hoverValue === index + 1 && isHalf === this.hasHalf) {\n        return;\n      }\n\n      this.hoverValue = index + 1;\n      this.hasHalf = isHalf;\n      this.nzOnHoverChange.emit(this.hoverValue);\n      this.updateStarStyle();\n    }\n\n    onRateLeave() {\n      this.hasHalf = !Number.isInteger(this.nzValue);\n      this.hoverValue = Math.ceil(this.nzValue);\n      this.updateStarStyle();\n    }\n\n    focus() {\n      this.ulElement.nativeElement.focus();\n    }\n\n    blur() {\n      this.ulElement.nativeElement.blur();\n    }\n\n    onKeyDown(e) {\n      const oldVal = this.nzValue;\n\n      if (e.keyCode === RIGHT_ARROW && this.nzValue < this.nzCount) {\n        this.nzValue += this.nzAllowHalf ? 0.5 : 1;\n      } else if (e.keyCode === LEFT_ARROW && this.nzValue > 0) {\n        this.nzValue -= this.nzAllowHalf ? 0.5 : 1;\n      }\n\n      if (oldVal !== this.nzValue) {\n        this.onChange(this.nzValue);\n        this.nzOnKeyDown.emit(e);\n        this.updateStarStyle();\n        this.cdr.markForCheck();\n      }\n    }\n\n    updateStarArray() {\n      this.starArray = Array(this.nzCount).fill(0).map((_, i) => i);\n      this.updateStarStyle();\n    }\n\n    updateStarStyle() {\n      this.starStyleArray = this.starArray.map(i => {\n        const prefix = 'ant-rate-star';\n        const value = i + 1;\n        return {\n          [`${prefix}-full`]: value < this.hoverValue || !this.hasHalf && value === this.hoverValue,\n          [`${prefix}-half`]: this.hasHalf && value === this.hoverValue,\n          [`${prefix}-active`]: this.hasHalf && value === this.hoverValue,\n          [`${prefix}-zero`]: value > this.hoverValue,\n          [`${prefix}-focused`]: this.hasHalf && value === this.hoverValue && this.isFocused\n        };\n      });\n    }\n\n    writeValue(value) {\n      this.nzValue = value || 0;\n      this.updateStarArray();\n      this.cdr.markForCheck();\n    }\n\n    setDisabledState(isDisabled) {\n      this.nzDisabled = isDisabled;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n  }\n\n  NzRateComponent.ɵfac = function NzRateComponent_Factory(t) {\n    return new (t || NzRateComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2$1.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzDestroyService));\n  };\n\n  NzRateComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzRateComponent,\n    selectors: [[\"nz-rate\"]],\n    viewQuery: function NzRateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ulElement = _t.first);\n      }\n    },\n    inputs: {\n      nzAllowClear: \"nzAllowClear\",\n      nzAllowHalf: \"nzAllowHalf\",\n      nzDisabled: \"nzDisabled\",\n      nzAutoFocus: \"nzAutoFocus\",\n      nzCharacter: \"nzCharacter\",\n      nzCount: \"nzCount\",\n      nzTooltips: \"nzTooltips\"\n    },\n    outputs: {\n      nzOnBlur: \"nzOnBlur\",\n      nzOnFocus: \"nzOnFocus\",\n      nzOnHoverChange: \"nzOnHoverChange\",\n      nzOnKeyDown: \"nzOnKeyDown\"\n    },\n    exportAs: [\"nzRate\"],\n    features: [i0.ɵɵProvidersFeature([NzDestroyService, {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzRateComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 7,\n    consts: [[1, \"ant-rate\", 3, \"ngClass\", \"tabindex\", \"keydown\", \"mouseleave\"], [\"ulElement\", \"\"], [\"class\", \"ant-rate-star\", \"nz-tooltip\", \"\", 3, \"ngClass\", \"nzTooltipTitle\", 4, \"ngFor\", \"ngForOf\"], [\"nz-tooltip\", \"\", 1, \"ant-rate-star\", 3, \"ngClass\", \"nzTooltipTitle\"], [\"nz-rate-item\", \"\", 3, \"allowHalf\", \"character\", \"index\", \"itemHover\", \"itemClick\"]],\n    template: function NzRateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0, 1);\n        i0.ɵɵlistener(\"keydown\", function NzRateComponent_Template_ul_keydown_0_listener($event) {\n          ctx.onKeyDown($event);\n          return $event.preventDefault();\n        })(\"mouseleave\", function NzRateComponent_Template_ul_mouseleave_0_listener($event) {\n          ctx.onRateLeave();\n          return $event.stopPropagation();\n        });\n        i0.ɵɵtemplate(2, NzRateComponent_li_2_Template, 2, 5, \"li\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-rate-disabled\", ctx.nzDisabled)(\"ant-rate-rtl\", ctx.dir === \"rtl\");\n        i0.ɵɵproperty(\"ngClass\", ctx.classMap)(\"tabindex\", ctx.nzDisabled ? -1 : 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.starArray);\n      }\n    },\n    directives: [NzRateItemComponent, i5.NgClass, i5.NgForOf, i6.NzTooltipDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([WithConfig(), InputBoolean()], NzRateComponent.prototype, \"nzAllowClear\", void 0);\n\n  __decorate([WithConfig(), InputBoolean()], NzRateComponent.prototype, \"nzAllowHalf\", void 0);\n\n  __decorate([InputBoolean()], NzRateComponent.prototype, \"nzDisabled\", void 0);\n\n  __decorate([InputBoolean()], NzRateComponent.prototype, \"nzAutoFocus\", void 0);\n\n  __decorate([InputNumber()], NzRateComponent.prototype, \"nzCount\", void 0);\n\n  return NzRateComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzRateModule = /*#__PURE__*/(() => {\n  class NzRateModule {}\n\n  NzRateModule.ɵfac = function NzRateModule_Factory(t) {\n    return new (t || NzRateModule)();\n  };\n\n  NzRateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzRateModule\n  });\n  NzRateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, NzIconModule, NzToolTipModule]]\n  });\n  return NzRateModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzRateComponent, NzRateItemComponent, NzRateModule }; //# sourceMappingURL=ng-zorro-antd-rate.mjs.map","map":null,"metadata":{},"sourceType":"module"}