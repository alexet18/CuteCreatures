{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Output, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"inputElement\"];\n\nclass NzInputNumberComponent {\n  constructor(ngZone, elementRef, cdr, focusMonitor, directionality) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this.destroy$ = new Subject();\n    this.isFocused = false;\n    this.disabledUp = false;\n    this.disabledDown = false;\n    this.dir = 'ltr';\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.nzBlur = new EventEmitter();\n    this.nzFocus = new EventEmitter();\n    this.nzSize = 'default';\n    this.nzMin = -Infinity;\n    this.nzMax = Infinity;\n\n    this.nzParser = value => value.trim().replace(/ã€‚/g, '.').replace(/[^\\w\\.-]+/g, '');\n\n    this.nzPrecisionMode = 'toFixed';\n    this.nzPlaceHolder = '';\n    this.nzStep = 1;\n    this.nzInputMode = 'decimal';\n    this.nzId = null;\n    this.nzDisabled = false;\n    this.nzAutoFocus = false;\n\n    this.nzFormatter = value => value;\n  }\n\n  onModelChange(value) {\n    this.parsedValue = this.nzParser(value);\n    this.inputElement.nativeElement.value = `${this.parsedValue}`;\n    const validValue = this.getCurrentValidValue(this.parsedValue);\n    this.setValue(validValue);\n  }\n\n  getCurrentValidValue(value) {\n    let val = value;\n\n    if (val === '') {\n      val = '';\n    } else if (!this.isNotCompleteNumber(val)) {\n      val = `${this.getValidValue(val)}`;\n    } else {\n      val = this.value;\n    }\n\n    return this.toNumber(val);\n  } // '1.' '1x' 'xx' '' => are not complete numbers\n\n\n  isNotCompleteNumber(num) {\n    return isNaN(num) || num === '' || num === null || !!(num && num.toString().indexOf('.') === num.toString().length - 1);\n  }\n\n  getValidValue(value) {\n    let val = parseFloat(value); // https://github.com/ant-design/ant-design/issues/7358\n\n    if (isNaN(val)) {\n      return value;\n    }\n\n    if (val < this.nzMin) {\n      val = this.nzMin;\n    }\n\n    if (val > this.nzMax) {\n      val = this.nzMax;\n    }\n\n    return val;\n  }\n\n  toNumber(num) {\n    if (this.isNotCompleteNumber(num)) {\n      return num;\n    }\n\n    const numStr = String(num);\n\n    if (numStr.indexOf('.') >= 0 && isNotNil(this.nzPrecision)) {\n      if (typeof this.nzPrecisionMode === 'function') {\n        return this.nzPrecisionMode(num, this.nzPrecision);\n      } else if (this.nzPrecisionMode === 'cut') {\n        const numSplit = numStr.split('.');\n        numSplit[1] = numSplit[1].slice(0, this.nzPrecision);\n        return Number(numSplit.join('.'));\n      }\n\n      return Number(Number(num).toFixed(this.nzPrecision));\n    }\n\n    return Number(num);\n  }\n\n  getRatio(e) {\n    let ratio = 1;\n\n    if (e.metaKey || e.ctrlKey) {\n      ratio = 0.1;\n    } else if (e.shiftKey) {\n      ratio = 10;\n    }\n\n    return ratio;\n  }\n\n  down(e, ratio) {\n    if (!this.isFocused) {\n      this.focus();\n    }\n\n    this.step('down', e, ratio);\n  }\n\n  up(e, ratio) {\n    if (!this.isFocused) {\n      this.focus();\n    }\n\n    this.step('up', e, ratio);\n  }\n\n  getPrecision(value) {\n    const valueString = value.toString();\n\n    if (valueString.indexOf('e-') >= 0) {\n      return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n    }\n\n    let precision = 0;\n\n    if (valueString.indexOf('.') >= 0) {\n      precision = valueString.length - valueString.indexOf('.') - 1;\n    }\n\n    return precision;\n  } // step={1.0} value={1.51}\n  // press +\n  // then value should be 2.51, rather than 2.5\n  // if this.props.precision is undefined\n  // https://github.com/react-component/input-number/issues/39\n\n\n  getMaxPrecision(currentValue, ratio) {\n    if (isNotNil(this.nzPrecision)) {\n      return this.nzPrecision;\n    }\n\n    const ratioPrecision = this.getPrecision(ratio);\n    const stepPrecision = this.getPrecision(this.nzStep);\n    const currentValuePrecision = this.getPrecision(currentValue);\n\n    if (!currentValue) {\n      return ratioPrecision + stepPrecision;\n    }\n\n    return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n  }\n\n  getPrecisionFactor(currentValue, ratio) {\n    const precision = this.getMaxPrecision(currentValue, ratio);\n    return Math.pow(10, precision);\n  }\n\n  upStep(val, rat) {\n    const precisionFactor = this.getPrecisionFactor(val, rat);\n    const precision = Math.abs(this.getMaxPrecision(val, rat));\n    let result;\n\n    if (typeof val === 'number') {\n      result = ((precisionFactor * val + precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n    } else {\n      result = this.nzMin === -Infinity ? this.nzStep : this.nzMin;\n    }\n\n    return this.toNumber(result);\n  }\n\n  downStep(val, rat) {\n    const precisionFactor = this.getPrecisionFactor(val, rat);\n    const precision = Math.abs(this.getMaxPrecision(val, rat));\n    let result;\n\n    if (typeof val === 'number') {\n      result = ((precisionFactor * val - precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n    } else {\n      result = this.nzMin === -Infinity ? -this.nzStep : this.nzMin;\n    }\n\n    return this.toNumber(result);\n  }\n\n  step(type, e, ratio = 1) {\n    this.stop();\n    e.preventDefault();\n\n    if (this.nzDisabled) {\n      return;\n    }\n\n    const value = this.getCurrentValidValue(this.parsedValue) || 0;\n    let val = 0;\n\n    if (type === 'up') {\n      val = this.upStep(value, ratio);\n    } else if (type === 'down') {\n      val = this.downStep(value, ratio);\n    }\n\n    const outOfRange = val > this.nzMax || val < this.nzMin;\n\n    if (val > this.nzMax) {\n      val = this.nzMax;\n    } else if (val < this.nzMin) {\n      val = this.nzMin;\n    }\n\n    this.setValue(val);\n    this.updateDisplayValue(val);\n    this.isFocused = true;\n\n    if (outOfRange) {\n      return;\n    }\n\n    this.autoStepTimer = setTimeout(() => {\n      this[type](e, ratio);\n    }, 300);\n  }\n\n  stop() {\n    if (this.autoStepTimer) {\n      clearTimeout(this.autoStepTimer);\n    }\n  }\n\n  setValue(value) {\n    if (`${this.value}` !== `${value}`) {\n      this.onChange(value);\n    }\n\n    this.value = value;\n    this.parsedValue = value;\n    this.disabledUp = this.disabledDown = false;\n\n    if (value || value === 0) {\n      const val = Number(value);\n\n      if (val >= this.nzMax) {\n        this.disabledUp = true;\n      }\n\n      if (val <= this.nzMin) {\n        this.disabledDown = true;\n      }\n    }\n  }\n\n  updateDisplayValue(value) {\n    const displayValue = isNotNil(this.nzFormatter(value)) ? this.nzFormatter(value) : '';\n    this.displayValue = displayValue;\n    this.inputElement.nativeElement.value = `${displayValue}`;\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.setValue(value);\n    this.updateDisplayValue(value);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus() {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur() {\n    this.inputElement.nativeElement.blur();\n  }\n\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        this.isFocused = false;\n        this.updateDisplayValue(this.value);\n        this.nzBlur.emit();\n        Promise.resolve().then(() => this.onTouched());\n      } else {\n        this.isFocused = true;\n        this.nzFocus.emit();\n      }\n    });\n    this.dir = this.directionality.value;\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.inputElement.nativeElement, 'keyup').pipe(takeUntil(this.destroy$)).subscribe(() => this.stop());\n      fromEvent(this.inputElement.nativeElement, 'keydown').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        const {\n          keyCode\n        } = event;\n\n        if (keyCode !== UP_ARROW && keyCode !== DOWN_ARROW && keyCode !== ENTER) {\n          return;\n        }\n\n        this.ngZone.run(() => {\n          if (keyCode === UP_ARROW) {\n            const ratio = this.getRatio(event);\n            this.up(event, ratio);\n            this.stop();\n          } else if (keyCode === DOWN_ARROW) {\n            const ratio = this.getRatio(event);\n            this.down(event, ratio);\n            this.stop();\n          } else {\n            this.updateDisplayValue(this.value);\n          }\n\n          this.cdr.markForCheck();\n        });\n      });\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.nzFormatter && !changes.nzFormatter.isFirstChange()) {\n      const validValue = this.getCurrentValidValue(this.parsedValue);\n      this.setValue(validValue);\n      this.updateDisplayValue(validValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzInputNumberComponent.Éµfac = function NzInputNumberComponent_Factory(t) {\n  return new (t || NzInputNumberComponent)(i0.ÉµÉµdirectiveInject(i0.NgZone), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i1.FocusMonitor), i0.ÉµÉµdirectiveInject(i2.Directionality, 8));\n};\n\nNzInputNumberComponent.Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n  type: NzInputNumberComponent,\n  selectors: [[\"nz-input-number\"]],\n  viewQuery: function NzInputNumberComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.inputElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-input-number\"],\n  hostVars: 10,\n  hostBindings: function NzInputNumberComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ÉµÉµclassProp(\"ant-input-number-focused\", ctx.isFocused)(\"ant-input-number-lg\", ctx.nzSize === \"large\")(\"ant-input-number-sm\", ctx.nzSize === \"small\")(\"ant-input-number-disabled\", ctx.nzDisabled)(\"ant-input-number-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzSize: \"nzSize\",\n    nzMin: \"nzMin\",\n    nzMax: \"nzMax\",\n    nzParser: \"nzParser\",\n    nzPrecision: \"nzPrecision\",\n    nzPrecisionMode: \"nzPrecisionMode\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzStep: \"nzStep\",\n    nzInputMode: \"nzInputMode\",\n    nzId: \"nzId\",\n    nzDisabled: \"nzDisabled\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzFormatter: \"nzFormatter\"\n  },\n  outputs: {\n    nzBlur: \"nzBlur\",\n    nzFocus: \"nzFocus\"\n  },\n  exportAs: [\"nzInputNumber\"],\n  features: [i0.ÉµÉµProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzInputNumberComponent),\n    multi: true\n  }]), i0.ÉµÉµNgOnChangesFeature],\n  decls: 8,\n  vars: 13,\n  consts: [[1, \"ant-input-number-handler-wrap\"], [\"unselectable\", \"unselectable\", 1, \"ant-input-number-handler\", \"ant-input-number-handler-up\", 3, \"mousedown\", \"mouseup\", \"mouseleave\"], [\"nz-icon\", \"\", \"nzType\", \"up\", 1, \"ant-input-number-handler-up-inner\"], [\"unselectable\", \"unselectable\", 1, \"ant-input-number-handler\", \"ant-input-number-handler-down\", 3, \"mousedown\", \"mouseup\", \"mouseleave\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 1, \"ant-input-number-handler-down-inner\"], [1, \"ant-input-number-input-wrap\"], [\"autocomplete\", \"off\", 1, \"ant-input-number-input\", 3, \"disabled\", \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"inputElement\", \"\"]],\n  template: function NzInputNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµelementStart(0, \"div\", 0);\n      i0.ÉµÉµelementStart(1, \"span\", 1);\n      i0.ÉµÉµlistener(\"mousedown\", function NzInputNumberComponent_Template_span_mousedown_1_listener($event) {\n        return ctx.up($event);\n      })(\"mouseup\", function NzInputNumberComponent_Template_span_mouseup_1_listener() {\n        return ctx.stop();\n      })(\"mouseleave\", function NzInputNumberComponent_Template_span_mouseleave_1_listener() {\n        return ctx.stop();\n      });\n      i0.ÉµÉµelement(2, \"i\", 2);\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(3, \"span\", 3);\n      i0.ÉµÉµlistener(\"mousedown\", function NzInputNumberComponent_Template_span_mousedown_3_listener($event) {\n        return ctx.down($event);\n      })(\"mouseup\", function NzInputNumberComponent_Template_span_mouseup_3_listener() {\n        return ctx.stop();\n      })(\"mouseleave\", function NzInputNumberComponent_Template_span_mouseleave_3_listener() {\n        return ctx.stop();\n      });\n      i0.ÉµÉµelement(4, \"i\", 4);\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(5, \"div\", 5);\n      i0.ÉµÉµelementStart(6, \"input\", 6, 7);\n      i0.ÉµÉµlistener(\"ngModelChange\", function NzInputNumberComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.onModelChange($event);\n      });\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ÉµÉµadvance(1);\n      i0.ÉµÉµclassProp(\"ant-input-number-handler-up-disabled\", ctx.disabledUp);\n      i0.ÉµÉµadvance(2);\n      i0.ÉµÉµclassProp(\"ant-input-number-handler-down-disabled\", ctx.disabledDown);\n      i0.ÉµÉµadvance(3);\n      i0.ÉµÉµproperty(\"disabled\", ctx.nzDisabled)(\"placeholder\", ctx.nzPlaceHolder)(\"ngModel\", ctx.displayValue);\n      i0.ÉµÉµattribute(\"id\", ctx.nzId)(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"min\", ctx.nzMin)(\"max\", ctx.nzMax)(\"step\", ctx.nzStep)(\"inputmode\", ctx.nzInputMode);\n    }\n  },\n  directives: [i3.NzIconDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzInputNumberComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzInputNumberComponent.prototype, \"nzAutoFocus\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NzInputNumberComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-input-number',\n      exportAs: 'nzInputNumber',\n      template: `\n    <div class=\"ant-input-number-handler-wrap\">\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-up\"\n        (mousedown)=\"up($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-up-disabled]=\"disabledUp\"\n      >\n        <i nz-icon nzType=\"up\" class=\"ant-input-number-handler-up-inner\"></i>\n      </span>\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-down\"\n        (mousedown)=\"down($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-down-disabled]=\"disabledDown\"\n      >\n        <i nz-icon nzType=\"down\" class=\"ant-input-number-handler-down-inner\"></i>\n      </span>\n    </div>\n    <div class=\"ant-input-number-input-wrap\">\n      <input\n        #inputElement\n        autocomplete=\"off\"\n        class=\"ant-input-number-input\"\n        [attr.id]=\"nzId\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [disabled]=\"nzDisabled\"\n        [attr.min]=\"nzMin\"\n        [attr.max]=\"nzMax\"\n        [placeholder]=\"nzPlaceHolder\"\n        [attr.step]=\"nzStep\"\n        [attr.inputmode]=\"nzInputMode\"\n        [ngModel]=\"displayValue\"\n        (ngModelChange)=\"onModelChange($event)\"\n      />\n    </div>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzInputNumberComponent),\n        multi: true\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'ant-input-number',\n        '[class.ant-input-number-focused]': 'isFocused',\n        '[class.ant-input-number-lg]': `nzSize === 'large'`,\n        '[class.ant-input-number-sm]': `nzSize === 'small'`,\n        '[class.ant-input-number-disabled]': 'nzDisabled',\n        '[class.ant-input-number-rtl]': `dir === 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzBlur: [{\n      type: Output\n    }],\n    nzFocus: [{\n      type: Output\n    }],\n    inputElement: [{\n      type: ViewChild,\n      args: ['inputElement', {\n        static: true\n      }]\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzMin: [{\n      type: Input\n    }],\n    nzMax: [{\n      type: Input\n    }],\n    nzParser: [{\n      type: Input\n    }],\n    nzPrecision: [{\n      type: Input\n    }],\n    nzPrecisionMode: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzStep: [{\n      type: Input\n    }],\n    nzInputMode: [{\n      type: Input\n    }],\n    nzId: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzFormatter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputNumberModule {}\n\nNzInputNumberModule.Éµfac = function NzInputNumberModule_Factory(t) {\n  return new (t || NzInputNumberModule)();\n};\n\nNzInputNumberModule.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n  type: NzInputNumberModule\n});\nNzInputNumberModule.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n  imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NzInputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n      declarations: [NzInputNumberComponent],\n      exports: [NzInputNumberComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzInputNumberComponent, NzInputNumberModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-input-number.mjs"],"names":["__decorate","UP_ARROW","DOWN_ARROW","ENTER","i0","EventEmitter","forwardRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Output","ViewChild","Input","NgModule","i4","NG_VALUE_ACCESSOR","FormsModule","Subject","fromEvent","takeUntil","isNotNil","InputBoolean","i1","i2","BidiModule","i3","NzIconModule","CommonModule","NzInputNumberComponent","constructor","ngZone","elementRef","cdr","focusMonitor","directionality","destroy$","isFocused","disabledUp","disabledDown","dir","onChange","onTouched","nzBlur","nzFocus","nzSize","nzMin","Infinity","nzMax","nzParser","value","trim","replace","nzPrecisionMode","nzPlaceHolder","nzStep","nzInputMode","nzId","nzDisabled","nzAutoFocus","nzFormatter","onModelChange","parsedValue","inputElement","nativeElement","validValue","getCurrentValidValue","setValue","val","isNotCompleteNumber","getValidValue","toNumber","num","isNaN","toString","indexOf","length","parseFloat","numStr","String","nzPrecision","numSplit","split","slice","Number","join","toFixed","getRatio","e","ratio","metaKey","ctrlKey","shiftKey","down","focus","step","up","getPrecision","valueString","parseInt","precision","getMaxPrecision","currentValue","ratioPrecision","stepPrecision","currentValuePrecision","Math","max","getPrecisionFactor","pow","upStep","rat","precisionFactor","abs","result","downStep","type","stop","preventDefault","outOfRange","updateDisplayValue","autoStepTimer","setTimeout","clearTimeout","displayValue","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","focusVia","blur","ngOnInit","monitor","pipe","subscribe","focusOrigin","emit","Promise","resolve","then","change","direction","runOutsideAngular","event","keyCode","run","ngOnChanges","changes","isFirstChange","ngAfterViewInit","ngOnDestroy","stopMonitoring","next","complete","Éµfac","NgZone","ElementRef","ChangeDetectorRef","FocusMonitor","Directionality","Éµcmp","provide","useExisting","multi","NzIconDirective","DefaultValueAccessor","NgControlStatus","NgModel","prototype","args","selector","exportAs","template","providers","changeDetection","OnPush","encapsulation","None","host","class","decorators","static","NzInputNumberModule","Éµmod","Éµinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Output, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { CommonModule } from '@angular/common';\n\nclass NzInputNumberComponent {\n    constructor(ngZone, elementRef, cdr, focusMonitor, directionality) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this.destroy$ = new Subject();\n        this.isFocused = false;\n        this.disabledUp = false;\n        this.disabledDown = false;\n        this.dir = 'ltr';\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzBlur = new EventEmitter();\n        this.nzFocus = new EventEmitter();\n        this.nzSize = 'default';\n        this.nzMin = -Infinity;\n        this.nzMax = Infinity;\n        this.nzParser = (value) => value\n            .trim()\n            .replace(/ã€‚/g, '.')\n            .replace(/[^\\w\\.-]+/g, '');\n        this.nzPrecisionMode = 'toFixed';\n        this.nzPlaceHolder = '';\n        this.nzStep = 1;\n        this.nzInputMode = 'decimal';\n        this.nzId = null;\n        this.nzDisabled = false;\n        this.nzAutoFocus = false;\n        this.nzFormatter = value => value;\n    }\n    onModelChange(value) {\n        this.parsedValue = this.nzParser(value);\n        this.inputElement.nativeElement.value = `${this.parsedValue}`;\n        const validValue = this.getCurrentValidValue(this.parsedValue);\n        this.setValue(validValue);\n    }\n    getCurrentValidValue(value) {\n        let val = value;\n        if (val === '') {\n            val = '';\n        }\n        else if (!this.isNotCompleteNumber(val)) {\n            val = `${this.getValidValue(val)}`;\n        }\n        else {\n            val = this.value;\n        }\n        return this.toNumber(val);\n    }\n    // '1.' '1x' 'xx' '' => are not complete numbers\n    isNotCompleteNumber(num) {\n        return (isNaN(num) ||\n            num === '' ||\n            num === null ||\n            !!(num && num.toString().indexOf('.') === num.toString().length - 1));\n    }\n    getValidValue(value) {\n        let val = parseFloat(value);\n        // https://github.com/ant-design/ant-design/issues/7358\n        if (isNaN(val)) {\n            return value;\n        }\n        if (val < this.nzMin) {\n            val = this.nzMin;\n        }\n        if (val > this.nzMax) {\n            val = this.nzMax;\n        }\n        return val;\n    }\n    toNumber(num) {\n        if (this.isNotCompleteNumber(num)) {\n            return num;\n        }\n        const numStr = String(num);\n        if (numStr.indexOf('.') >= 0 && isNotNil(this.nzPrecision)) {\n            if (typeof this.nzPrecisionMode === 'function') {\n                return this.nzPrecisionMode(num, this.nzPrecision);\n            }\n            else if (this.nzPrecisionMode === 'cut') {\n                const numSplit = numStr.split('.');\n                numSplit[1] = numSplit[1].slice(0, this.nzPrecision);\n                return Number(numSplit.join('.'));\n            }\n            return Number(Number(num).toFixed(this.nzPrecision));\n        }\n        return Number(num);\n    }\n    getRatio(e) {\n        let ratio = 1;\n        if (e.metaKey || e.ctrlKey) {\n            ratio = 0.1;\n        }\n        else if (e.shiftKey) {\n            ratio = 10;\n        }\n        return ratio;\n    }\n    down(e, ratio) {\n        if (!this.isFocused) {\n            this.focus();\n        }\n        this.step('down', e, ratio);\n    }\n    up(e, ratio) {\n        if (!this.isFocused) {\n            this.focus();\n        }\n        this.step('up', e, ratio);\n    }\n    getPrecision(value) {\n        const valueString = value.toString();\n        if (valueString.indexOf('e-') >= 0) {\n            return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n        }\n        let precision = 0;\n        if (valueString.indexOf('.') >= 0) {\n            precision = valueString.length - valueString.indexOf('.') - 1;\n        }\n        return precision;\n    }\n    // step={1.0} value={1.51}\n    // press +\n    // then value should be 2.51, rather than 2.5\n    // if this.props.precision is undefined\n    // https://github.com/react-component/input-number/issues/39\n    getMaxPrecision(currentValue, ratio) {\n        if (isNotNil(this.nzPrecision)) {\n            return this.nzPrecision;\n        }\n        const ratioPrecision = this.getPrecision(ratio);\n        const stepPrecision = this.getPrecision(this.nzStep);\n        const currentValuePrecision = this.getPrecision(currentValue);\n        if (!currentValue) {\n            return ratioPrecision + stepPrecision;\n        }\n        return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n    }\n    getPrecisionFactor(currentValue, ratio) {\n        const precision = this.getMaxPrecision(currentValue, ratio);\n        return Math.pow(10, precision);\n    }\n    upStep(val, rat) {\n        const precisionFactor = this.getPrecisionFactor(val, rat);\n        const precision = Math.abs(this.getMaxPrecision(val, rat));\n        let result;\n        if (typeof val === 'number') {\n            result = ((precisionFactor * val + precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n        }\n        else {\n            result = this.nzMin === -Infinity ? this.nzStep : this.nzMin;\n        }\n        return this.toNumber(result);\n    }\n    downStep(val, rat) {\n        const precisionFactor = this.getPrecisionFactor(val, rat);\n        const precision = Math.abs(this.getMaxPrecision(val, rat));\n        let result;\n        if (typeof val === 'number') {\n            result = ((precisionFactor * val - precisionFactor * this.nzStep * rat) / precisionFactor).toFixed(precision);\n        }\n        else {\n            result = this.nzMin === -Infinity ? -this.nzStep : this.nzMin;\n        }\n        return this.toNumber(result);\n    }\n    step(type, e, ratio = 1) {\n        this.stop();\n        e.preventDefault();\n        if (this.nzDisabled) {\n            return;\n        }\n        const value = this.getCurrentValidValue(this.parsedValue) || 0;\n        let val = 0;\n        if (type === 'up') {\n            val = this.upStep(value, ratio);\n        }\n        else if (type === 'down') {\n            val = this.downStep(value, ratio);\n        }\n        const outOfRange = val > this.nzMax || val < this.nzMin;\n        if (val > this.nzMax) {\n            val = this.nzMax;\n        }\n        else if (val < this.nzMin) {\n            val = this.nzMin;\n        }\n        this.setValue(val);\n        this.updateDisplayValue(val);\n        this.isFocused = true;\n        if (outOfRange) {\n            return;\n        }\n        this.autoStepTimer = setTimeout(() => {\n            this[type](e, ratio);\n        }, 300);\n    }\n    stop() {\n        if (this.autoStepTimer) {\n            clearTimeout(this.autoStepTimer);\n        }\n    }\n    setValue(value) {\n        if (`${this.value}` !== `${value}`) {\n            this.onChange(value);\n        }\n        this.value = value;\n        this.parsedValue = value;\n        this.disabledUp = this.disabledDown = false;\n        if (value || value === 0) {\n            const val = Number(value);\n            if (val >= this.nzMax) {\n                this.disabledUp = true;\n            }\n            if (val <= this.nzMin) {\n                this.disabledDown = true;\n            }\n        }\n    }\n    updateDisplayValue(value) {\n        const displayValue = isNotNil(this.nzFormatter(value)) ? this.nzFormatter(value) : '';\n        this.displayValue = displayValue;\n        this.inputElement.nativeElement.value = `${displayValue}`;\n    }\n    writeValue(value) {\n        this.value = value;\n        this.setValue(value);\n        this.updateDisplayValue(value);\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    ngOnInit() {\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                this.isFocused = false;\n                this.updateDisplayValue(this.value);\n                this.nzBlur.emit();\n                Promise.resolve().then(() => this.onTouched());\n            }\n            else {\n                this.isFocused = true;\n                this.nzFocus.emit();\n            }\n        });\n        this.dir = this.directionality.value;\n        this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.inputElement.nativeElement, 'keyup')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.stop());\n            fromEvent(this.inputElement.nativeElement, 'keydown')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                const { keyCode } = event;\n                if (keyCode !== UP_ARROW && keyCode !== DOWN_ARROW && keyCode !== ENTER) {\n                    return;\n                }\n                this.ngZone.run(() => {\n                    if (keyCode === UP_ARROW) {\n                        const ratio = this.getRatio(event);\n                        this.up(event, ratio);\n                        this.stop();\n                    }\n                    else if (keyCode === DOWN_ARROW) {\n                        const ratio = this.getRatio(event);\n                        this.down(event, ratio);\n                        this.stop();\n                    }\n                    else {\n                        this.updateDisplayValue(this.value);\n                    }\n                    this.cdr.markForCheck();\n                });\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.nzFormatter && !changes.nzFormatter.isFirstChange()) {\n            const validValue = this.getCurrentValidValue(this.parsedValue);\n            this.setValue(validValue);\n            this.updateDisplayValue(validValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzInputNumberComponent.Éµfac = i0.ÉµÉµngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputNumberComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.Directionality, optional: true }], target: i0.ÉµÉµFactoryTarget.Component });\nNzInputNumberComponent.Éµcmp = i0.ÉµÉµngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzInputNumberComponent, selector: \"nz-input-number\", inputs: { nzSize: \"nzSize\", nzMin: \"nzMin\", nzMax: \"nzMax\", nzParser: \"nzParser\", nzPrecision: \"nzPrecision\", nzPrecisionMode: \"nzPrecisionMode\", nzPlaceHolder: \"nzPlaceHolder\", nzStep: \"nzStep\", nzInputMode: \"nzInputMode\", nzId: \"nzId\", nzDisabled: \"nzDisabled\", nzAutoFocus: \"nzAutoFocus\", nzFormatter: \"nzFormatter\" }, outputs: { nzBlur: \"nzBlur\", nzFocus: \"nzFocus\" }, host: { properties: { \"class.ant-input-number-focused\": \"isFocused\", \"class.ant-input-number-lg\": \"nzSize === 'large'\", \"class.ant-input-number-sm\": \"nzSize === 'small'\", \"class.ant-input-number-disabled\": \"nzDisabled\", \"class.ant-input-number-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-input-number\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzInputNumberComponent),\n            multi: true\n        }\n    ], viewQueries: [{ propertyName: \"inputElement\", first: true, predicate: [\"inputElement\"], descendants: true, static: true }], exportAs: [\"nzInputNumber\"], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ant-input-number-handler-wrap\">\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-up\"\n        (mousedown)=\"up($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-up-disabled]=\"disabledUp\"\n      >\n        <i nz-icon nzType=\"up\" class=\"ant-input-number-handler-up-inner\"></i>\n      </span>\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-down\"\n        (mousedown)=\"down($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-down-disabled]=\"disabledDown\"\n      >\n        <i nz-icon nzType=\"down\" class=\"ant-input-number-handler-down-inner\"></i>\n      </span>\n    </div>\n    <div class=\"ant-input-number-input-wrap\">\n      <input\n        #inputElement\n        autocomplete=\"off\"\n        class=\"ant-input-number-input\"\n        [attr.id]=\"nzId\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [disabled]=\"nzDisabled\"\n        [attr.min]=\"nzMin\"\n        [attr.max]=\"nzMax\"\n        [placeholder]=\"nzPlaceHolder\"\n        [attr.step]=\"nzStep\"\n        [attr.inputmode]=\"nzInputMode\"\n        [ngModel]=\"displayValue\"\n        (ngModelChange)=\"onModelChange($event)\"\n      />\n    </div>\n  `, isInline: true, directives: [{ type: i3.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzInputNumberComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzInputNumberComponent.prototype, \"nzAutoFocus\", void 0);\ni0.ÉµÉµngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputNumberComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-input-number',\n                    exportAs: 'nzInputNumber',\n                    template: `\n    <div class=\"ant-input-number-handler-wrap\">\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-up\"\n        (mousedown)=\"up($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-up-disabled]=\"disabledUp\"\n      >\n        <i nz-icon nzType=\"up\" class=\"ant-input-number-handler-up-inner\"></i>\n      </span>\n      <span\n        unselectable=\"unselectable\"\n        class=\"ant-input-number-handler ant-input-number-handler-down\"\n        (mousedown)=\"down($event)\"\n        (mouseup)=\"stop()\"\n        (mouseleave)=\"stop()\"\n        [class.ant-input-number-handler-down-disabled]=\"disabledDown\"\n      >\n        <i nz-icon nzType=\"down\" class=\"ant-input-number-handler-down-inner\"></i>\n      </span>\n    </div>\n    <div class=\"ant-input-number-input-wrap\">\n      <input\n        #inputElement\n        autocomplete=\"off\"\n        class=\"ant-input-number-input\"\n        [attr.id]=\"nzId\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [disabled]=\"nzDisabled\"\n        [attr.min]=\"nzMin\"\n        [attr.max]=\"nzMax\"\n        [placeholder]=\"nzPlaceHolder\"\n        [attr.step]=\"nzStep\"\n        [attr.inputmode]=\"nzInputMode\"\n        [ngModel]=\"displayValue\"\n        (ngModelChange)=\"onModelChange($event)\"\n      />\n    </div>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzInputNumberComponent),\n                            multi: true\n                        }\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'ant-input-number',\n                        '[class.ant-input-number-focused]': 'isFocused',\n                        '[class.ant-input-number-lg]': `nzSize === 'large'`,\n                        '[class.ant-input-number-sm]': `nzSize === 'small'`,\n                        '[class.ant-input-number-disabled]': 'nzDisabled',\n                        '[class.ant-input-number-rtl]': `dir === 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzBlur: [{\n                type: Output\n            }], nzFocus: [{\n                type: Output\n            }], inputElement: [{\n                type: ViewChild,\n                args: ['inputElement', { static: true }]\n            }], nzSize: [{\n                type: Input\n            }], nzMin: [{\n                type: Input\n            }], nzMax: [{\n                type: Input\n            }], nzParser: [{\n                type: Input\n            }], nzPrecision: [{\n                type: Input\n            }], nzPrecisionMode: [{\n                type: Input\n            }], nzPlaceHolder: [{\n                type: Input\n            }], nzStep: [{\n                type: Input\n            }], nzInputMode: [{\n                type: Input\n            }], nzId: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzAutoFocus: [{\n                type: Input\n            }], nzFormatter: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputNumberModule {\n}\nNzInputNumberModule.Éµfac = i0.ÉµÉµngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputNumberModule, deps: [], target: i0.ÉµÉµFactoryTarget.NgModule });\nNzInputNumberModule.Éµmod = i0.ÉµÉµngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputNumberModule, declarations: [NzInputNumberComponent], imports: [BidiModule, CommonModule, FormsModule, NzIconModule], exports: [NzInputNumberComponent] });\nNzInputNumberModule.Éµinj = i0.ÉµÉµngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputNumberModule, imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]] });\ni0.ÉµÉµngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputNumberModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n                    declarations: [NzInputNumberComponent],\n                    exports: [NzInputNumberComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzInputNumberComponent, NzInputNumberModule };\n"]},"metadata":{},"sourceType":"module"}