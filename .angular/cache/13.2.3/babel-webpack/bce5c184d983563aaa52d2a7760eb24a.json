{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ObserversModule } from '@angular/cdk/observers';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r8 = ctx.$implicit;\n    const i_r5 = i0.ɵɵnextContext(2).index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"current\", p_r8 === ctx_r7.countArray[i_r5]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", p_r8, \" \");\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template, 2, 3, \"p\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.countSingleArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"transform\", \"translateY(\" + -ctx_r3.countArray[i_r5] * 100 + \"%)\");\n    i0.ɵɵproperty(\"nzNoAnimation\", ctx_r3.noAnimation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.nzDot && ctx_r3.countArray[i_r5] !== undefined);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_Template, 2, 4, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.maxNumberArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.nzOverflowCount, \"+\");\n  }\n}\n\nfunction NzBadgeComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵtemplate(3, NzBadgeComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"ant-badge-status-dot ant-badge-status-\", ctx_r0.nzStatus || ctx_r0.presetColor, \"\");\n    i0.ɵɵstyleProp(\"background\", !ctx_r0.presetColor && ctx_r0.nzColor);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.nzStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-badge-sup\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzOffset\", ctx_r3.nzOffset)(\"nzTitle\", ctx_r3.nzTitle)(\"nzStyle\", ctx_r3.nzStyle)(\"nzDot\", ctx_r3.nzDot)(\"nzOverflowCount\", ctx_r3.nzOverflowCount)(\"disableAnimation\", !!(ctx_r3.nzStandalone || ctx_r3.nzStatus || ctx_r3.nzColor || (ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)))(\"nzCount\", ctx_r3.nzCount)(\"noAnimation\", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation));\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template, 1, 8, \"nz-badge-sup\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showSup);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction NzRibbonComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.nzText);\n  }\n}\n\nconst badgePresetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nclass NzBadgeSupComponent {\n  constructor() {\n    this.nzStyle = null;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.disableAnimation = false;\n    this.noAnimation = false;\n    this.maxNumberArray = [];\n    this.countArray = [];\n    this.count = 0;\n    this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n\n  generateMaxNumberArray() {\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\n  }\n\n  ngOnInit() {\n    this.generateMaxNumberArray();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzOverflowCount,\n      nzCount\n    } = changes;\n\n    if (nzCount && typeof nzCount.currentValue === 'number') {\n      this.count = Math.max(0, nzCount.currentValue);\n      this.countArray = this.count.toString().split('').map(item => +item);\n    }\n\n    if (nzOverflowCount) {\n      this.generateMaxNumberArray();\n    }\n  }\n\n}\n\nNzBadgeSupComponent.ɵfac = function NzBadgeSupComponent_Factory(t) {\n  return new (t || NzBadgeSupComponent)();\n};\n\nNzBadgeSupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBadgeSupComponent,\n  selectors: [[\"nz-badge-sup\"]],\n  hostAttrs: [1, \"ant-scroll-number\"],\n  hostVars: 15,\n  hostBindings: function NzBadgeSupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"title\", ctx.nzTitle === null ? \"\" : ctx.nzTitle || ctx.nzCount);\n      i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.disableAnimation)(\"@zoomBadgeMotion\", undefined);\n      i0.ɵɵstyleMap(ctx.nzStyle);\n      i0.ɵɵstyleProp(\"right\", ctx.nzOffset && ctx.nzOffset[0] ? -ctx.nzOffset[0] : null, \"px\")(\"margin-top\", ctx.nzOffset && ctx.nzOffset[1] ? ctx.nzOffset[1] : null, \"px\");\n      i0.ɵɵclassProp(\"ant-badge-count\", !ctx.nzDot)(\"ant-badge-dot\", ctx.nzDot)(\"ant-badge-multiple-words\", ctx.countArray.length >= 2);\n    }\n  },\n  inputs: {\n    nzOffset: \"nzOffset\",\n    nzTitle: \"nzTitle\",\n    nzStyle: \"nzStyle\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    disableAnimation: \"disableAnimation\",\n    nzCount: \"nzCount\",\n    noAnimation: \"noAnimation\"\n  },\n  exportAs: [\"nzBadgeSup\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"overflowTemplate\", \"\"], [\"class\", \"ant-scroll-number-only\", 3, \"nzNoAnimation\", \"transform\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only\", 3, \"nzNoAnimation\"], [4, \"ngIf\"], [\"class\", \"ant-scroll-number-only-unit\", 3, \"current\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only-unit\"]],\n  template: function NzBadgeSupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzBadgeSupComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.count <= ctx.nzOverflowCount)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i1.NgIf, i1.NgForOf, i3.NzNoAnimationDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeSupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge-sup',\n      exportAs: 'nzBadgeSup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n      host: {\n        class: 'ant-scroll-number',\n        '[@.disabled]': `disableAnimation`,\n        '[@zoomBadgeMotion]': '',\n        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n        '[style]': `nzStyle`,\n        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n        '[class.ant-badge-count]': `!nzDot`,\n        '[class.ant-badge-dot]': `nzDot`,\n        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzOffset: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    noAnimation: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'badge';\n\nclass NzBadgeComponent {\n  constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.showSup = false;\n    this.presetColor = null;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.nzShowZero = false;\n    this.nzShowDot = true;\n    this.nzStandalone = false;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.nzColor = undefined;\n    this.nzStyle = null;\n    this.nzText = null;\n  }\n\n  ngOnInit() {\n    var _a;\n\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.prepareBadgeForRtl();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.prepareBadgeForRtl();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzColor,\n      nzShowDot,\n      nzDot,\n      nzCount,\n      nzShowZero\n    } = changes;\n\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n\n    if (nzShowDot || nzDot || nzCount || nzShowZero) {\n      this.showSup = this.nzShowDot && this.nzDot || this.nzCount > 0 || this.nzCount <= 0 && this.nzShowZero;\n    }\n  }\n\n  prepareBadgeForRtl() {\n    if (this.isRtlLayout) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    }\n  }\n\n  get isRtlLayout() {\n    return this.dir === 'rtl';\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzBadgeComponent.ɵfac = function NzBadgeComponent_Factory(t) {\n  return new (t || NzBadgeComponent)(i0.ɵɵdirectiveInject(i1$1.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzNoAnimationDirective, 9));\n};\n\nNzBadgeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBadgeComponent,\n  selectors: [[\"nz-badge\"]],\n  hostAttrs: [1, \"ant-badge\"],\n  hostVars: 4,\n  hostBindings: function NzBadgeComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-badge-status\", ctx.nzStatus)(\"ant-badge-not-a-wrapper\", !!(ctx.nzStandalone || ctx.nzStatus || ctx.nzColor));\n    }\n  },\n  inputs: {\n    nzShowZero: \"nzShowZero\",\n    nzShowDot: \"nzShowDot\",\n    nzStandalone: \"nzStandalone\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    nzColor: \"nzColor\",\n    nzStyle: \"nzStyle\",\n    nzText: \"nzText\",\n    nzTitle: \"nzTitle\",\n    nzStatus: \"nzStatus\",\n    nzCount: \"nzCount\",\n    nzOffset: \"nzOffset\"\n  },\n  exportAs: [\"nzBadge\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [3, \"ngStyle\"], [1, \"ant-badge-status-text\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\", 4, \"ngIf\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"]],\n  template: function NzBadgeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzBadgeComponent_ng_container_0_Template, 4, 7, \"ng-container\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, NzBadgeComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzStatus || ctx.nzColor);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzCount);\n    }\n  },\n  directives: [NzBadgeSupComponent, i1.NgIf, i1.NgStyle, i6.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzDot\", void 0);\n\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzColor\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge',\n      exportAs: 'nzBadge',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n      host: {\n        class: 'ant-badge',\n        '[class.ant-badge-status]': 'nzStatus',\n        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.NzConfigService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzShowZero: [{\n      type: Input\n    }],\n    nzShowDot: [{\n      type: Input\n    }],\n    nzStandalone: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzRibbonComponent {\n  constructor() {\n    this.nzPlacement = 'end';\n    this.nzText = null;\n    this.presetColor = null;\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzColor\n    } = changes;\n\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n  }\n\n}\n\nNzRibbonComponent.ɵfac = function NzRibbonComponent_Factory(t) {\n  return new (t || NzRibbonComponent)();\n};\n\nNzRibbonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzRibbonComponent,\n  selectors: [[\"nz-ribbon\"]],\n  hostAttrs: [1, \"ant-ribbon-wrapper\"],\n  inputs: {\n    nzColor: \"nzColor\",\n    nzPlacement: \"nzPlacement\",\n    nzText: \"nzText\"\n  },\n  exportAs: [\"nzRibbon\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 11,\n  consts: [[1, \"ant-ribbon\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-ribbon-corner\"]],\n  template: function NzRibbonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵtemplate(2, NzRibbonComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelement(3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.presetColor && \"ant-ribbon-color-\" + ctx.presetColor);\n      i0.ɵɵstyleProp(\"background-color\", !ctx.presetColor && ctx.nzColor);\n      i0.ɵɵclassProp(\"ant-ribbon-placement-end\", ctx.nzPlacement === \"end\")(\"ant-ribbon-placement-start\", ctx.nzPlacement === \"start\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", !ctx.presetColor && ctx.nzColor);\n    }\n  },\n  directives: [i6.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzRibbonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-ribbon',\n      exportAs: 'nzRibbon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n      host: {\n        class: 'ant-ribbon-wrapper'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzColor: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzBadgeModule {}\n\nNzBadgeModule.ɵfac = function NzBadgeModule_Factory(t) {\n  return new (t || NzBadgeModule)();\n};\n\nNzBadgeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzBadgeModule\n});\nNzBadgeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n      exports: [NzBadgeComponent, NzRibbonComponent],\n      imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-badge.mjs"],"names":["__decorate","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Optional","Host","NgModule","Subject","takeUntil","zoomBadgeMotion","i1$1","WithConfig","InputBoolean","i2","BidiModule","i3","NzNoAnimationModule","i1","CommonModule","i6","NzOutletModule","ObserversModule","badgePresetColors","NzBadgeSupComponent","constructor","nzStyle","nzDot","nzOverflowCount","disableAnimation","noAnimation","maxNumberArray","countArray","count","countSingleArray","generateMaxNumberArray","toString","split","ngOnInit","ngOnChanges","changes","nzCount","currentValue","Math","max","map","item","ɵfac","ɵcmp","NgIf","NgForOf","NzNoAnimationDirective","type","args","selector","exportAs","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","animations","template","host","class","nzOffset","nzTitle","NZ_CONFIG_MODULE_NAME","NzBadgeComponent","nzConfigService","renderer","cdr","elementRef","directionality","_nzModuleName","showSup","presetColor","dir","destroy$","nzShowZero","nzShowDot","nzStandalone","nzColor","undefined","nzText","_a","change","pipe","subscribe","direction","prepareBadgeForRtl","detectChanges","value","indexOf","isRtlLayout","addClass","nativeElement","removeClass","ngOnDestroy","next","complete","NzConfigService","Renderer2","ChangeDetectorRef","ElementRef","Directionality","NgStyle","NzStringTemplateOutletDirective","prototype","decorators","nzStatus","NzRibbonComponent","nzPlacement","NzBadgeModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst badgePresetColors = [\n    'pink',\n    'red',\n    'yellow',\n    'orange',\n    'cyan',\n    'green',\n    'blue',\n    'purple',\n    'geekblue',\n    'magenta',\n    'volcano',\n    'gold',\n    'lime'\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeSupComponent {\n    constructor() {\n        this.nzStyle = null;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.disableAnimation = false;\n        this.noAnimation = false;\n        this.maxNumberArray = [];\n        this.countArray = [];\n        this.count = 0;\n        this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    }\n    generateMaxNumberArray() {\n        this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n    ngOnInit() {\n        this.generateMaxNumberArray();\n    }\n    ngOnChanges(changes) {\n        const { nzOverflowCount, nzCount } = changes;\n        if (nzCount && typeof nzCount.currentValue === 'number') {\n            this.count = Math.max(0, nzCount.currentValue);\n            this.countArray = this.count\n                .toString()\n                .split('')\n                .map(item => +item);\n        }\n        if (nzOverflowCount) {\n            this.generateMaxNumberArray();\n        }\n    }\n}\nNzBadgeSupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeSupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzBadgeSupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: { nzOffset: \"nzOffset\", nzTitle: \"nzTitle\", nzStyle: \"nzStyle\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", disableAnimation: \"disableAnimation\", nzCount: \"nzCount\", noAnimation: \"noAnimation\" }, host: { properties: { \"@.disabled\": \"disableAnimation\", \"@zoomBadgeMotion\": \"\", \"attr.title\": \"nzTitle === null ? '' : nzTitle || nzCount\", \"style\": \"nzStyle\", \"style.right.px\": \"nzOffset && nzOffset[0] ? -nzOffset[0] : null\", \"style.margin-top.px\": \"nzOffset && nzOffset[1] ? nzOffset[1] : null\", \"class.ant-badge-count\": \"!nzDot\", \"class.ant-badge-dot\": \"nzDot\", \"class.ant-badge-multiple-words\": \"countArray.length >= 2\" }, classAttribute: \"ant-scroll-number\" }, exportAs: [\"nzBadgeSup\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeSupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge-sup',\n                    exportAs: 'nzBadgeSup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    template: `\n    <ng-container *ngIf=\"count <= nzOverflowCount; else overflowTemplate\">\n      <span\n        [nzNoAnimation]=\"noAnimation\"\n        *ngFor=\"let n of maxNumberArray; let i = index\"\n        class=\"ant-scroll-number-only\"\n        [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n      >\n        <ng-container *ngIf=\"!nzDot && countArray[i] !== undefined\">\n          <p\n            *ngFor=\"let p of countSingleArray\"\n            class=\"ant-scroll-number-only-unit\"\n            [class.current]=\"p === countArray[i]\"\n          >\n            {{ p }}\n          </p>\n        </ng-container>\n      </span>\n    </ng-container>\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\n  `,\n                    host: {\n                        class: 'ant-scroll-number',\n                        '[@.disabled]': `disableAnimation`,\n                        '[@zoomBadgeMotion]': '',\n                        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n                        '[style]': `nzStyle`,\n                        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n                        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n                        '[class.ant-badge-count]': `!nzDot`,\n                        '[class.ant-badge-dot]': `nzDot`,\n                        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzOffset: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], disableAnimation: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], noAnimation: [{\n                type: Input\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nclass NzBadgeComponent {\n    constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.showSup = false;\n        this.presetColor = null;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.nzShowZero = false;\n        this.nzShowDot = true;\n        this.nzStandalone = false;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.nzColor = undefined;\n        this.nzStyle = null;\n        this.nzText = null;\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareBadgeForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareBadgeForRtl();\n    }\n    ngOnChanges(changes) {\n        const { nzColor, nzShowDot, nzDot, nzCount, nzShowZero } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n        if (nzShowDot || nzDot || nzCount || nzShowZero) {\n            this.showSup = (this.nzShowDot && this.nzDot) || this.nzCount > 0 || (this.nzCount <= 0 && this.nzShowZero);\n        }\n    }\n    prepareBadgeForRtl() {\n        if (this.isRtlLayout) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n    }\n    get isRtlLayout() {\n        return this.dir === 'rtl';\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }, { token: i3.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzBadgeComponent, selector: \"nz-badge\", inputs: { nzShowZero: \"nzShowZero\", nzShowDot: \"nzShowDot\", nzStandalone: \"nzStandalone\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", nzColor: \"nzColor\", nzStyle: \"nzStyle\", nzText: \"nzText\", nzTitle: \"nzTitle\", nzStatus: \"nzStatus\", nzCount: \"nzCount\", nzOffset: \"nzOffset\" }, host: { properties: { \"class.ant-badge-status\": \"nzStatus\", \"class.ant-badge-not-a-wrapper\": \"!!(nzStandalone || nzStatus || nzColor)\" }, classAttribute: \"ant-badge\" }, exportAs: [\"nzBadge\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `, isInline: true, components: [{ type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: [\"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"], exportAs: [\"nzBadgeSup\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzDot\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzColor\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge',\n                    exportAs: 'nzBadge',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    template: `\n    <ng-container *ngIf=\"nzStatus || nzColor\">\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    </ng-container>\n    <ng-content></ng-content>\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      <nz-badge-sup\n        *ngIf=\"showSup\"\n        [nzOffset]=\"nzOffset\"\n        [nzTitle]=\"nzTitle\"\n        [nzStyle]=\"nzStyle\"\n        [nzDot]=\"nzDot\"\n        [nzOverflowCount]=\"nzOverflowCount\"\n        [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n        [nzCount]=\"nzCount\"\n        [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n      ></nz-badge-sup>\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-badge',\n                        '[class.ant-badge-status]': 'nzStatus',\n                        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.NzConfigService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.NzNoAnimationDirective, decorators: [{\n                        type: Host\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzShowZero: [{\n                type: Input\n            }], nzShowDot: [{\n                type: Input\n            }], nzStandalone: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], nzColor: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], nzOffset: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRibbonComponent {\n    constructor() {\n        this.nzPlacement = 'end';\n        this.nzText = null;\n        this.presetColor = null;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n    }\n}\nNzRibbonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzRibbonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzRibbonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzRibbonComponent, selector: \"nz-ribbon\", inputs: { nzColor: \"nzColor\", nzPlacement: \"nzPlacement\", nzText: \"nzText\" }, host: { classAttribute: \"ant-ribbon-wrapper\" }, exportAs: [\"nzRibbon\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `, isInline: true, directives: [{ type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzRibbonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-ribbon',\n                    exportAs: 'nzRibbon',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n                    host: { class: 'ant-ribbon-wrapper' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzColor: [{\n                type: Input\n            }], nzPlacement: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeModule {\n}\nNzBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeModule, declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent], imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule], exports: [NzBadgeComponent, NzRibbonComponent] });\nNzBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeModule, imports: [[BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n                    exports: [NzBadgeComponent, NzRibbonComponent],\n                    imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };\n"]},"metadata":{},"sourceType":"module"}