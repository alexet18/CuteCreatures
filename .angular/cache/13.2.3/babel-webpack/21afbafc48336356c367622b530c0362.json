{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, ChangeDetectionStrategy, NgModule, Injectable } from '@angular/core';\nimport { notificationMotion } from 'ng-zorro-antd/core/animation';\nimport { NzMNComponent, NzMNContainerComponent, NzMNService } from 'ng-zorro-antd/message';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport * as i1$2 from 'ng-zorro-antd/core/services';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzNotificationComponent_div_1_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 16);\n  }\n}\n\nfunction NzNotificationComponent_div_1_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 17);\n  }\n}\n\nfunction NzNotificationComponent_div_1_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 18);\n  }\n}\n\nfunction NzNotificationComponent_div_1_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 19);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"ant-notification-notice-with-icon\": a0\n  };\n};\n\nfunction NzNotificationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementContainerStart(3, 9);\n    i0.ɵɵtemplate(4, NzNotificationComponent_div_1_i_4_Template, 1, 0, \"i\", 10);\n    i0.ɵɵtemplate(5, NzNotificationComponent_div_1_i_5_Template, 1, 0, \"i\", 11);\n    i0.ɵɵtemplate(6, NzNotificationComponent_div_1_i_6_Template, 1, 0, \"i\", 12);\n    i0.ɵɵtemplate(7, NzNotificationComponent_div_1_i_7_Template, 1, 0, \"i\", 13);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelement(8, \"div\", 14);\n    i0.ɵɵelement(9, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r0.instance.type !== \"blank\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ant-notification-notice-with-icon\", ctx_r0.instance.type !== \"blank\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.instance.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.instance.title, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.instance.content, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzNotificationComponent_ng_template_2_Template(rf, ctx) {}\n\nfunction NzNotificationComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const closeIcon_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", closeIcon_r10);\n  }\n}\n\nfunction NzNotificationComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzNotificationComponent_ng_container_5_ng_container_1_Template, 2, 1, \"ng-container\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.instance.options == null ? null : ctx_r2.instance.options.nzCloseIcon);\n  }\n}\n\nfunction NzNotificationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 22);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    data: a1\n  };\n};\n\nfunction NzNotificationContainerComponent_nz_notification_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-notification\", 5);\n    i0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_1_Template_nz_notification_destroyed_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove($event.id, $event.userAction);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const instance_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"instance\", instance_r4)(\"placement\", ctx_r0.config.nzPlacement);\n  }\n}\n\nfunction NzNotificationContainerComponent_nz_notification_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-notification\", 5);\n    i0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_3_Template_nz_notification_destroyed_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.remove($event.id, $event.userAction);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const instance_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"instance\", instance_r7)(\"placement\", ctx_r1.config.nzPlacement);\n  }\n}\n\nfunction NzNotificationContainerComponent_nz_notification_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-notification\", 5);\n    i0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_5_Template_nz_notification_destroyed_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.remove($event.id, $event.userAction);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const instance_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"instance\", instance_r10)(\"placement\", ctx_r2.config.nzPlacement);\n  }\n}\n\nfunction NzNotificationContainerComponent_nz_notification_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-notification\", 5);\n    i0.ɵɵlistener(\"destroyed\", function NzNotificationContainerComponent_nz_notification_7_Template_nz_notification_destroyed_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.remove($event.id, $event.userAction);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const instance_r13 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"instance\", instance_r13)(\"placement\", ctx_r3.config.nzPlacement);\n  }\n}\n\nclass NzNotificationComponent extends NzMNComponent {\n  constructor(cdr) {\n    super(cdr);\n    this.destroyed = new EventEmitter();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.instance.onClick.complete();\n  }\n\n  onClick(event) {\n    this.instance.onClick.next(event);\n  }\n\n  close() {\n    this.destroy(true);\n  }\n\n  get state() {\n    if (this.instance.state === 'enter') {\n      if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\n        return 'enterLeft';\n      } else {\n        return 'enterRight';\n      }\n    } else {\n      return this.instance.state;\n    }\n  }\n\n}\n\nNzNotificationComponent.ɵfac = function NzNotificationComponent_Factory(t) {\n  return new (t || NzNotificationComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzNotificationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzNotificationComponent,\n  selectors: [[\"nz-notification\"]],\n  inputs: {\n    instance: \"instance\",\n    index: \"index\",\n    placement: \"placement\"\n  },\n  outputs: {\n    destroyed: \"destroyed\"\n  },\n  exportAs: [\"nzNotification\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 12,\n  consts: [[1, \"ant-notification-notice\", \"ant-notification-notice-closable\", 3, \"ngStyle\", \"ngClass\", \"click\", \"mouseenter\", \"mouseleave\"], [\"class\", \"ant-notification-notice-content\", 4, \"ngIf\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"tabindex\", \"0\", 1, \"ant-notification-notice-close\", 3, \"click\"], [1, \"ant-notification-notice-close-x\"], [4, \"ngIf\", \"ngIfElse\"], [\"iconTpl\", \"\"], [1, \"ant-notification-notice-content\"], [1, \"ant-notification-notice-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-success\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-info\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-warning\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"class\", \"ant-notification-notice-icon ant-notification-notice-icon-error\", 4, \"ngSwitchCase\"], [1, \"ant-notification-notice-message\", 3, \"innerHTML\"], [1, \"ant-notification-notice-description\", 3, \"innerHTML\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-success\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-info\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-warning\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 1, \"ant-notification-notice-icon\", \"ant-notification-notice-icon-error\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"close\", 1, \"ant-notification-close-icon\"]],\n  template: function NzNotificationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"@notificationMotion.done\", function NzNotificationComponent_Template_div_animation_notificationMotion_done_0_listener($event) {\n        return ctx.animationStateChanged.next($event);\n      })(\"click\", function NzNotificationComponent_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"mouseenter\", function NzNotificationComponent_Template_div_mouseenter_0_listener() {\n        return ctx.onEnter();\n      })(\"mouseleave\", function NzNotificationComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onLeave();\n      });\n      i0.ɵɵtemplate(1, NzNotificationComponent_div_1_Template, 10, 12, \"div\", 1);\n      i0.ɵɵtemplate(2, NzNotificationComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵelementStart(3, \"a\", 3);\n      i0.ɵɵlistener(\"click\", function NzNotificationComponent_Template_a_click_3_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵelementStart(4, \"span\", 4);\n      i0.ɵɵtemplate(5, NzNotificationComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, NzNotificationComponent_ng_template_6_Template, 1, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(7);\n\n      i0.ɵɵproperty(\"ngStyle\", (ctx.instance.options == null ? null : ctx.instance.options.nzStyle) || null)(\"ngClass\", (ctx.instance.options == null ? null : ctx.instance.options.nzClass) || \"\")(\"@notificationMotion\", ctx.state);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.instance.template);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.instance.template)(\"ngTemplateOutlet\", ctx.instance.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(9, _c1, ctx, ctx.instance.options == null ? null : ctx.instance.options.nzData));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.instance.options == null ? null : ctx.instance.options.nzCloseIcon)(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [i1.NgStyle, i1.NgClass, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i2.NzIconDirective, i1.NgTemplateOutlet, i3.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [notificationMotion]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzNotificationComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-notification',\n      exportAs: 'nzNotification',\n      preserveWhitespaces: false,\n      animations: [notificationMotion],\n      template: `\n    <div\n      class=\"ant-notification-notice ant-notification-notice-closable\"\n      [ngStyle]=\"instance.options?.nzStyle || null\"\n      [ngClass]=\"instance.options?.nzClass || ''\"\n      [@notificationMotion]=\"state\"\n      (@notificationMotion.done)=\"animationStateChanged.next($event)\"\n      (click)=\"onClick($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div *ngIf=\"!instance.template\" class=\"ant-notification-notice-content\">\n        <div\n          class=\"ant-notification-notice-content\"\n          [ngClass]=\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\"\n        >\n          <div [class.ant-notification-notice-with-icon]=\"instance.type !== 'blank'\">\n            <ng-container [ngSwitch]=\"instance.type\">\n              <i\n                *ngSwitchCase=\"'success'\"\n                nz-icon\n                nzType=\"check-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'info'\"\n                nz-icon\n                nzType=\"info-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'warning'\"\n                nz-icon\n                nzType=\"exclamation-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'error'\"\n                nz-icon\n                nzType=\"close-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\n              ></i>\n            </ng-container>\n            <div class=\"ant-notification-notice-message\" [innerHTML]=\"instance.title\"></div>\n            <div class=\"ant-notification-notice-description\" [innerHTML]=\"instance.content\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-template\n        [ngIf]=\"instance.template\"\n        [ngTemplateOutlet]=\"instance.template!\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options?.nzData }\"\n      ></ng-template>\n      <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\n        <span class=\"ant-notification-notice-close-x\">\n          <ng-container *ngIf=\"instance.options?.nzCloseIcon; else iconTpl\">\n            <ng-container *nzStringTemplateOutlet=\"instance.options?.nzCloseIcon; let closeIcon\">\n              <i nz-icon [nzType]=\"closeIcon\"></i>\n            </ng-container>\n          </ng-container>\n          <ng-template #iconTpl>\n            <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\n          </ng-template>\n        </span>\n      </a>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    instance: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    destroyed: [{\n      type: Output\n    }]\n  });\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'notification';\nconst NZ_NOTIFICATION_DEFAULT_CONFIG = {\n  nzTop: '24px',\n  nzBottom: '24px',\n  nzPlacement: 'topRight',\n  nzDuration: 4500,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzAnimate: true,\n  nzDirection: 'ltr'\n};\n\nclass NzNotificationContainerComponent extends NzMNContainerComponent {\n  constructor(cdr, nzConfigService) {\n    super(cdr, nzConfigService);\n    this.dir = 'ltr';\n    this.instances = [];\n    this.topLeftInstances = [];\n    this.topRightInstances = [];\n    this.bottomLeftInstances = [];\n    this.bottomRightInstances = [];\n    const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n    this.dir = (config === null || config === void 0 ? void 0 : config.nzDirection) || 'ltr';\n  }\n\n  create(notification) {\n    const noti = this.onCreate(notification);\n    const key = noti.options.nzKey;\n    const notificationWithSameKey = this.instances.find(msg => msg.options.nzKey === notification.options.nzKey);\n\n    if (key && notificationWithSameKey) {\n      this.replaceNotification(notificationWithSameKey, noti);\n    } else {\n      if (this.instances.length >= this.config.nzMaxStack) {\n        this.instances = this.instances.slice(1);\n      }\n\n      this.instances = [...this.instances, noti];\n    }\n\n    this.readyInstances();\n    return noti;\n  }\n\n  onCreate(instance) {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject();\n    instance.onClick = new Subject();\n    return instance;\n  }\n\n  subscribeConfigChange() {\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateConfig();\n      const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n\n      if (config) {\n        const {\n          nzDirection\n        } = config;\n        this.dir = nzDirection || this.dir;\n      }\n    });\n  }\n\n  updateConfig() {\n    this.config = Object.assign(Object.assign(Object.assign({}, NZ_NOTIFICATION_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME));\n    this.top = toCssPixel(this.config.nzTop);\n    this.bottom = toCssPixel(this.config.nzBottom);\n    this.cdr.markForCheck();\n  }\n\n  replaceNotification(old, _new) {\n    old.title = _new.title;\n    old.content = _new.content;\n    old.template = _new.template;\n    old.type = _new.type;\n    old.options = _new.options;\n  }\n\n  readyInstances() {\n    this.topLeftInstances = this.instances.filter(m => m.options.nzPlacement === 'topLeft');\n    this.topRightInstances = this.instances.filter(m => m.options.nzPlacement === 'topRight' || !m.options.nzPlacement);\n    this.bottomLeftInstances = this.instances.filter(m => m.options.nzPlacement === 'bottomLeft');\n    this.bottomRightInstances = this.instances.filter(m => m.options.nzPlacement === 'bottomRight');\n    this.cdr.detectChanges();\n  }\n\n  mergeOptions(options) {\n    const {\n      nzDuration,\n      nzAnimate,\n      nzPauseOnHover,\n      nzPlacement\n    } = this.config;\n    return Object.assign({\n      nzDuration,\n      nzAnimate,\n      nzPauseOnHover,\n      nzPlacement\n    }, options);\n  }\n\n}\n\nNzNotificationContainerComponent.ɵfac = function NzNotificationContainerComponent_Factory(t) {\n  return new (t || NzNotificationContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.NzConfigService));\n};\n\nNzNotificationContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzNotificationContainerComponent,\n  selectors: [[\"nz-notification-container\"]],\n  exportAs: [\"nzNotificationContainer\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 28,\n  consts: [[1, \"ant-notification\", \"ant-notification-topLeft\"], [3, \"instance\", \"placement\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-notification\", \"ant-notification-topRight\"], [1, \"ant-notification\", \"ant-notification-bottomLeft\"], [1, \"ant-notification\", \"ant-notification-bottomRight\"], [3, \"instance\", \"placement\", \"destroyed\"]],\n  template: function NzNotificationContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzNotificationContainerComponent_nz_notification_1_Template, 1, 2, \"nz-notification\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, NzNotificationContainerComponent_nz_notification_3_Template, 1, 2, \"nz-notification\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, NzNotificationContainerComponent_nz_notification_5_Template, 1, 2, \"nz-notification\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵtemplate(7, NzNotificationContainerComponent_nz_notification_7_Template, 1, 2, \"nz-notification\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"top\", ctx.top)(\"left\", \"0px\");\n      i0.ɵɵclassProp(\"ant-notification-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.topLeftInstances);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"top\", ctx.top)(\"right\", \"0px\");\n      i0.ɵɵclassProp(\"ant-notification-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.topRightInstances);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"bottom\", ctx.bottom)(\"left\", \"0px\");\n      i0.ɵɵclassProp(\"ant-notification-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bottomLeftInstances);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"bottom\", ctx.bottom)(\"right\", \"0px\");\n      i0.ɵɵclassProp(\"ant-notification-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bottomRightInstances);\n    }\n  },\n  directives: [NzNotificationComponent, i1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzNotificationContainerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-notification-container',\n      exportAs: 'nzNotificationContainer',\n      preserveWhitespaces: false,\n      template: `\n    <div\n      class=\"ant-notification ant-notification-topLeft\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.top]=\"top\"\n      [style.left]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of topLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-topRight\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.top]=\"top\"\n      [style.right]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of topRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-bottomLeft\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.bottom]=\"bottom\"\n      [style.left]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of bottomLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-bottomRight\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.bottom]=\"bottom\"\n      [style.right]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of bottomRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.NzConfigService\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzNotificationServiceModule {}\n\nNzNotificationServiceModule.ɵfac = function NzNotificationServiceModule_Factory(t) {\n  return new (t || NzNotificationServiceModule)();\n};\n\nNzNotificationServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzNotificationServiceModule\n});\nNzNotificationServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzNotificationServiceModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzNotificationModule {}\n\nNzNotificationModule.ɵfac = function NzNotificationModule_Factory(t) {\n  return new (t || NzNotificationModule)();\n};\n\nNzNotificationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzNotificationModule\n});\nNzNotificationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzNotificationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule],\n      declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n      entryComponents: [NzNotificationContainerComponent]\n    }]\n  }], null, null);\n})();\n\nlet notificationId = 0;\n\nclass NzNotificationService extends NzMNService {\n  constructor(nzSingletonService, overlay, injector) {\n    super(nzSingletonService, overlay, injector);\n    this.componentPrefix = 'notification-';\n  }\n\n  success(title, content, options) {\n    return this.createInstance({\n      type: 'success',\n      title,\n      content\n    }, options);\n  }\n\n  error(title, content, options) {\n    return this.createInstance({\n      type: 'error',\n      title,\n      content\n    }, options);\n  }\n\n  info(title, content, options) {\n    return this.createInstance({\n      type: 'info',\n      title,\n      content\n    }, options);\n  }\n\n  warning(title, content, options) {\n    return this.createInstance({\n      type: 'warning',\n      title,\n      content\n    }, options);\n  }\n\n  blank(title, content, options) {\n    return this.createInstance({\n      type: 'blank',\n      title,\n      content\n    }, options);\n  }\n\n  create(type, title, content, options) {\n    return this.createInstance({\n      type,\n      title,\n      content\n    }, options);\n  }\n\n  template(template, options) {\n    return this.createInstance({\n      template\n    }, options);\n  }\n\n  generateMessageId() {\n    return `${this.componentPrefix}-${notificationId++}`;\n  }\n\n  createInstance(message, options) {\n    this.container = this.withContainer(NzNotificationContainerComponent);\n    return this.container.create(Object.assign(Object.assign({}, message), {\n      createdAt: new Date(),\n      messageId: this.generateMessageId(),\n      options\n    }));\n  }\n\n}\n\nNzNotificationService.ɵfac = function NzNotificationService_Factory(t) {\n  return new (t || NzNotificationService)(i0.ɵɵinject(i1$2.NzSingletonService), i0.ɵɵinject(i2$1.Overlay), i0.ɵɵinject(i0.Injector));\n};\n\nNzNotificationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzNotificationService,\n  factory: NzNotificationService.ɵfac,\n  providedIn: NzNotificationServiceModule\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzNotificationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: NzNotificationServiceModule\n    }]\n  }], function () {\n    return [{\n      type: i1$2.NzSingletonService\n    }, {\n      type: i2$1.Overlay\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzNotificationComponent, NzNotificationContainerComponent, NzNotificationModule, NzNotificationService, NzNotificationServiceModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-notification.mjs"],"names":["i0","EventEmitter","Component","ViewEncapsulation","Input","Output","ChangeDetectionStrategy","NgModule","Injectable","notificationMotion","NzMNComponent","NzMNContainerComponent","NzMNService","i1","CommonModule","i2","NzIconModule","i3","NzOutletModule","BidiModule","i2$1","OverlayModule","Subject","takeUntil","toCssPixel","i1$1","i1$2","NzNotificationComponent","constructor","cdr","destroyed","ngOnDestroy","instance","onClick","complete","event","next","close","destroy","state","placement","ɵfac","ChangeDetectorRef","ɵcmp","NgStyle","NgClass","NgIf","NgSwitch","NgSwitchCase","NzIconDirective","NgTemplateOutlet","NzStringTemplateOutletDirective","type","args","encapsulation","None","selector","exportAs","preserveWhitespaces","animations","template","index","NZ_CONFIG_MODULE_NAME","NZ_NOTIFICATION_DEFAULT_CONFIG","nzTop","nzBottom","nzPlacement","nzDuration","nzMaxStack","nzPauseOnHover","nzAnimate","nzDirection","NzNotificationContainerComponent","nzConfigService","dir","instances","topLeftInstances","topRightInstances","bottomLeftInstances","bottomRightInstances","config","getConfigForComponent","create","notification","noti","onCreate","key","options","nzKey","notificationWithSameKey","find","msg","replaceNotification","length","slice","readyInstances","mergeOptions","onClose","subscribeConfigChange","getConfigChangeEventForComponent","pipe","destroy$","subscribe","updateConfig","Object","assign","top","bottom","markForCheck","old","_new","title","content","filter","m","detectChanges","NzConfigService","NgForOf","changeDetection","OnPush","NzNotificationServiceModule","ɵmod","ɵinj","NzNotificationModule","imports","declarations","entryComponents","notificationId","NzNotificationService","nzSingletonService","overlay","injector","componentPrefix","success","createInstance","error","info","warning","blank","generateMessageId","message","container","withContainer","createdAt","Date","messageId","NzSingletonService","Overlay","Injector","ɵprov","providedIn"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, ChangeDetectionStrategy, NgModule, Injectable } from '@angular/core';\nimport { notificationMotion } from 'ng-zorro-antd/core/animation';\nimport { NzMNComponent, NzMNContainerComponent, NzMNService } from 'ng-zorro-antd/message';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport * as i1$2 from 'ng-zorro-antd/core/services';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzNotificationComponent extends NzMNComponent {\n    constructor(cdr) {\n        super(cdr);\n        this.destroyed = new EventEmitter();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.instance.onClick.complete();\n    }\n    onClick(event) {\n        this.instance.onClick.next(event);\n    }\n    close() {\n        this.destroy(true);\n    }\n    get state() {\n        if (this.instance.state === 'enter') {\n            if (this.placement === 'topLeft' || this.placement === 'bottomLeft') {\n                return 'enterLeft';\n            }\n            else {\n                return 'enterRight';\n            }\n        }\n        else {\n            return this.instance.state;\n        }\n    }\n}\nNzNotificationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzNotificationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzNotificationComponent, selector: \"nz-notification\", inputs: { instance: \"instance\", index: \"index\", placement: \"placement\" }, outputs: { destroyed: \"destroyed\" }, exportAs: [\"nzNotification\"], usesInheritance: true, ngImport: i0, template: `\n    <div\n      class=\"ant-notification-notice ant-notification-notice-closable\"\n      [ngStyle]=\"instance.options?.nzStyle || null\"\n      [ngClass]=\"instance.options?.nzClass || ''\"\n      [@notificationMotion]=\"state\"\n      (@notificationMotion.done)=\"animationStateChanged.next($event)\"\n      (click)=\"onClick($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div *ngIf=\"!instance.template\" class=\"ant-notification-notice-content\">\n        <div\n          class=\"ant-notification-notice-content\"\n          [ngClass]=\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\"\n        >\n          <div [class.ant-notification-notice-with-icon]=\"instance.type !== 'blank'\">\n            <ng-container [ngSwitch]=\"instance.type\">\n              <i\n                *ngSwitchCase=\"'success'\"\n                nz-icon\n                nzType=\"check-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'info'\"\n                nz-icon\n                nzType=\"info-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'warning'\"\n                nz-icon\n                nzType=\"exclamation-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'error'\"\n                nz-icon\n                nzType=\"close-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\n              ></i>\n            </ng-container>\n            <div class=\"ant-notification-notice-message\" [innerHTML]=\"instance.title\"></div>\n            <div class=\"ant-notification-notice-description\" [innerHTML]=\"instance.content\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-template\n        [ngIf]=\"instance.template\"\n        [ngTemplateOutlet]=\"instance.template!\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options?.nzData }\"\n      ></ng-template>\n      <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\n        <span class=\"ant-notification-notice-close-x\">\n          <ng-container *ngIf=\"instance.options?.nzCloseIcon; else iconTpl\">\n            <ng-container *nzStringTemplateOutlet=\"instance.options?.nzCloseIcon; let closeIcon\">\n              <i nz-icon [nzType]=\"closeIcon\"></i>\n            </ng-container>\n          </ng-container>\n          <ng-template #iconTpl>\n            <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\n          </ng-template>\n        </span>\n      </a>\n    </div>\n  `, isInline: true, directives: [{ type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [notificationMotion], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-notification',\n                    exportAs: 'nzNotification',\n                    preserveWhitespaces: false,\n                    animations: [notificationMotion],\n                    template: `\n    <div\n      class=\"ant-notification-notice ant-notification-notice-closable\"\n      [ngStyle]=\"instance.options?.nzStyle || null\"\n      [ngClass]=\"instance.options?.nzClass || ''\"\n      [@notificationMotion]=\"state\"\n      (@notificationMotion.done)=\"animationStateChanged.next($event)\"\n      (click)=\"onClick($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div *ngIf=\"!instance.template\" class=\"ant-notification-notice-content\">\n        <div\n          class=\"ant-notification-notice-content\"\n          [ngClass]=\"{ 'ant-notification-notice-with-icon': instance.type !== 'blank' }\"\n        >\n          <div [class.ant-notification-notice-with-icon]=\"instance.type !== 'blank'\">\n            <ng-container [ngSwitch]=\"instance.type\">\n              <i\n                *ngSwitchCase=\"'success'\"\n                nz-icon\n                nzType=\"check-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'info'\"\n                nz-icon\n                nzType=\"info-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'warning'\"\n                nz-icon\n                nzType=\"exclamation-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\n              ></i>\n              <i\n                *ngSwitchCase=\"'error'\"\n                nz-icon\n                nzType=\"close-circle\"\n                class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\n              ></i>\n            </ng-container>\n            <div class=\"ant-notification-notice-message\" [innerHTML]=\"instance.title\"></div>\n            <div class=\"ant-notification-notice-description\" [innerHTML]=\"instance.content\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-template\n        [ngIf]=\"instance.template\"\n        [ngTemplateOutlet]=\"instance.template!\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, data: instance.options?.nzData }\"\n      ></ng-template>\n      <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\n        <span class=\"ant-notification-notice-close-x\">\n          <ng-container *ngIf=\"instance.options?.nzCloseIcon; else iconTpl\">\n            <ng-container *nzStringTemplateOutlet=\"instance.options?.nzCloseIcon; let closeIcon\">\n              <i nz-icon [nzType]=\"closeIcon\"></i>\n            </ng-container>\n          </ng-container>\n          <ng-template #iconTpl>\n            <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\n          </ng-template>\n        </span>\n      </a>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { instance: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], destroyed: [{\n                type: Output\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'notification';\nconst NZ_NOTIFICATION_DEFAULT_CONFIG = {\n    nzTop: '24px',\n    nzBottom: '24px',\n    nzPlacement: 'topRight',\n    nzDuration: 4500,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzAnimate: true,\n    nzDirection: 'ltr'\n};\nclass NzNotificationContainerComponent extends NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        super(cdr, nzConfigService);\n        this.dir = 'ltr';\n        this.instances = [];\n        this.topLeftInstances = [];\n        this.topRightInstances = [];\n        this.bottomLeftInstances = [];\n        this.bottomRightInstances = [];\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n        this.dir = (config === null || config === void 0 ? void 0 : config.nzDirection) || 'ltr';\n    }\n    create(notification) {\n        const noti = this.onCreate(notification);\n        const key = noti.options.nzKey;\n        const notificationWithSameKey = this.instances.find(msg => msg.options.nzKey === notification.options.nzKey);\n        if (key && notificationWithSameKey) {\n            this.replaceNotification(notificationWithSameKey, noti);\n        }\n        else {\n            if (this.instances.length >= this.config.nzMaxStack) {\n                this.instances = this.instances.slice(1);\n            }\n            this.instances = [...this.instances, noti];\n        }\n        this.readyInstances();\n        return noti;\n    }\n    onCreate(instance) {\n        instance.options = this.mergeOptions(instance.options);\n        instance.onClose = new Subject();\n        instance.onClick = new Subject();\n        return instance;\n    }\n    subscribeConfigChange() {\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateConfig();\n            const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME);\n            if (config) {\n                const { nzDirection } = config;\n                this.dir = nzDirection || this.dir;\n            }\n        });\n    }\n    updateConfig() {\n        this.config = Object.assign(Object.assign(Object.assign({}, NZ_NOTIFICATION_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME));\n        this.top = toCssPixel(this.config.nzTop);\n        this.bottom = toCssPixel(this.config.nzBottom);\n        this.cdr.markForCheck();\n    }\n    replaceNotification(old, _new) {\n        old.title = _new.title;\n        old.content = _new.content;\n        old.template = _new.template;\n        old.type = _new.type;\n        old.options = _new.options;\n    }\n    readyInstances() {\n        this.topLeftInstances = this.instances.filter(m => m.options.nzPlacement === 'topLeft');\n        this.topRightInstances = this.instances.filter(m => m.options.nzPlacement === 'topRight' || !m.options.nzPlacement);\n        this.bottomLeftInstances = this.instances.filter(m => m.options.nzPlacement === 'bottomLeft');\n        this.bottomRightInstances = this.instances.filter(m => m.options.nzPlacement === 'bottomRight');\n        this.cdr.detectChanges();\n    }\n    mergeOptions(options) {\n        const { nzDuration, nzAnimate, nzPauseOnHover, nzPlacement } = this.config;\n        return Object.assign({ nzDuration, nzAnimate, nzPauseOnHover, nzPlacement }, options);\n    }\n}\nNzNotificationContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.NzConfigService }], target: i0.ɵɵFactoryTarget.Component });\nNzNotificationContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzNotificationContainerComponent, selector: \"nz-notification-container\", exportAs: [\"nzNotificationContainer\"], usesInheritance: true, ngImport: i0, template: `\n    <div\n      class=\"ant-notification ant-notification-topLeft\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.top]=\"top\"\n      [style.left]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of topLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-topRight\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.top]=\"top\"\n      [style.right]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of topRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-bottomLeft\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.bottom]=\"bottom\"\n      [style.left]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of bottomLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-bottomRight\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.bottom]=\"bottom\"\n      [style.right]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of bottomRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n  `, isInline: true, components: [{ type: NzNotificationComponent, selector: \"nz-notification\", inputs: [\"instance\", \"index\", \"placement\"], outputs: [\"destroyed\"], exportAs: [\"nzNotification\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-notification-container',\n                    exportAs: 'nzNotificationContainer',\n                    preserveWhitespaces: false,\n                    template: `\n    <div\n      class=\"ant-notification ant-notification-topLeft\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.top]=\"top\"\n      [style.left]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of topLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-topRight\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.top]=\"top\"\n      [style.right]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of topRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-bottomLeft\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.bottom]=\"bottom\"\n      [style.left]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of bottomLeftInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n    <div\n      class=\"ant-notification ant-notification-bottomRight\"\n      [class.ant-notification-rtl]=\"dir === 'rtl'\"\n      [style.bottom]=\"bottom\"\n      [style.right]=\"'0px'\"\n    >\n      <nz-notification\n        *ngFor=\"let instance of bottomRightInstances\"\n        [instance]=\"instance\"\n        [placement]=\"config.nzPlacement\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-notification>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.NzConfigService }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzNotificationServiceModule {\n}\nNzNotificationServiceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationServiceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzNotificationServiceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationServiceModule });\nNzNotificationServiceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationServiceModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationServiceModule, decorators: [{\n            type: NgModule\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzNotificationModule {\n}\nNzNotificationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzNotificationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationModule, declarations: [NzNotificationComponent, NzNotificationContainerComponent], imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule] });\nNzNotificationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationModule, imports: [[BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzNotificationServiceModule],\n                    declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n                    entryComponents: [NzNotificationContainerComponent]\n                }]\n        }] });\n\nlet notificationId = 0;\nclass NzNotificationService extends NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        super(nzSingletonService, overlay, injector);\n        this.componentPrefix = 'notification-';\n    }\n    success(title, content, options) {\n        return this.createInstance({ type: 'success', title, content }, options);\n    }\n    error(title, content, options) {\n        return this.createInstance({ type: 'error', title, content }, options);\n    }\n    info(title, content, options) {\n        return this.createInstance({ type: 'info', title, content }, options);\n    }\n    warning(title, content, options) {\n        return this.createInstance({ type: 'warning', title, content }, options);\n    }\n    blank(title, content, options) {\n        return this.createInstance({ type: 'blank', title, content }, options);\n    }\n    create(type, title, content, options) {\n        return this.createInstance({ type, title, content }, options);\n    }\n    template(template, options) {\n        return this.createInstance({ template }, options);\n    }\n    generateMessageId() {\n        return `${this.componentPrefix}-${notificationId++}`;\n    }\n    createInstance(message, options) {\n        this.container = this.withContainer(NzNotificationContainerComponent);\n        return this.container.create(Object.assign(Object.assign({}, message), {\n            createdAt: new Date(),\n            messageId: this.generateMessageId(),\n            options\n        }));\n    }\n}\nNzNotificationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationService, deps: [{ token: i1$2.NzSingletonService }, { token: i2$1.Overlay }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nNzNotificationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationService, providedIn: NzNotificationServiceModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzNotificationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: NzNotificationServiceModule\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.NzSingletonService }, { type: i2$1.Overlay }, { type: i0.Injector }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzNotificationComponent, NzNotificationContainerComponent, NzNotificationModule, NzNotificationService, NzNotificationServiceModule };\n"]},"metadata":{},"sourceType":"module"}