{"ast":null,"code":"import * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Directive, Optional, Input, Host, ContentChild, SkipSelf, NgModule } from '@angular/core';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { AbstractControl, NgModel, FormControlName, FormControlDirective, NgControl } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, filter, map, tap, startWith } from 'rxjs/operators';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2$1 from 'ng-zorro-antd/i18n';\nimport { __decorate } from 'tslib';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n\nconst _c0 = [\"*\"];\n\nfunction NzFormControlComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.iconType);\n  }\n}\n\nfunction NzFormControlComponent_div_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.innerTip);\n  }\n}\n\nconst _c1 = function (a0) {\n  return [a0];\n};\n\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzFormControlComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtemplate(2, NzFormControlComponent_div_5_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@helpMotion\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, \"ant-form-item-explain-\" + ctx_r1.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.innerTip)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c2, ctx_r1.validateControl));\n  }\n}\n\nfunction NzFormControlComponent_div_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.nzExtra);\n  }\n}\n\nfunction NzFormControlComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, NzFormControlComponent_div_6_ng_container_1_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzExtra);\n  }\n}\n\nfunction NzFormLabelComponent_span_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const tooltipIconType_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", tooltipIconType_r2)(\"nzTheme\", ctx_r1.tooltipIcon.theme);\n  }\n}\n\nfunction NzFormLabelComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵtemplate(1, NzFormLabelComponent_span_2_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzTooltipTitle\", ctx_r0.nzTooltipTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.tooltipIcon.type);\n  }\n}\n\nclass NzFormItemComponent {\n  constructor(elementRef, renderer, cdr) {\n    this.cdr = cdr;\n    this.status = null;\n    this.hasFeedback = false;\n    this.withHelpClass = false;\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n  }\n\n  setWithHelpViaTips(value) {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status) {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback) {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzFormItemComponent.ɵfac = function NzFormItemComponent_Factory(t) {\n  return new (t || NzFormItemComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzFormItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormItemComponent,\n  selectors: [[\"nz-form-item\"]],\n  hostVars: 12,\n  hostBindings: function NzFormItemComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-form-item-has-success\", ctx.status === \"success\")(\"ant-form-item-has-warning\", ctx.status === \"warning\")(\"ant-form-item-has-error\", ctx.status === \"error\")(\"ant-form-item-is-validating\", ctx.status === \"validating\")(\"ant-form-item-has-feedback\", ctx.hasFeedback && ctx.status)(\"ant-form-item-with-help\", ctx.withHelpClass);\n    }\n  },\n  exportAs: [\"nzFormItem\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzFormItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-item',\n      exportAs: 'nzFormItem',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.ant-form-item-has-success]': 'status === \"success\"',\n        '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n        '[class.ant-form-item-has-error]': 'status === \"error\"',\n        '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n        '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n        '[class.ant-form-item-with-help]': 'withHelpClass'\n      },\n      template: ` <ng-content></ng-content> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'form';\nconst DefaultTooltipIcon = {\n  type: 'question-circle',\n  theme: 'outline'\n};\n\nclass NzFormDirective {\n  constructor(nzConfigService, elementRef, renderer, directionality) {\n    var _a;\n\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzLayout = 'horizontal';\n    this.nzNoColon = false;\n    this.nzAutoTips = {};\n    this.nzDisableAutoTips = false;\n    this.nzTooltipIcon = DefaultTooltipIcon;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.inputChanges$ = new Subject();\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n    this.dir = this.directionality.value;\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  getInputObservable(changeType) {\n    return this.inputChanges$.pipe(filter(changes => changeType in changes), map(value => value[changeType]));\n  }\n\n  ngOnChanges(changes) {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy() {\n    this.inputChanges$.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzFormDirective.ɵfac = function NzFormDirective_Factory(t) {\n  return new (t || NzFormDirective)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n};\n\nNzFormDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzFormDirective,\n  selectors: [[\"\", \"nz-form\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NzFormDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-form-horizontal\", ctx.nzLayout === \"horizontal\")(\"ant-form-vertical\", ctx.nzLayout === \"vertical\")(\"ant-form-inline\", ctx.nzLayout === \"inline\")(\"ant-form-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzLayout: \"nzLayout\",\n    nzNoColon: \"nzNoColon\",\n    nzAutoTips: \"nzAutoTips\",\n    nzDisableAutoTips: \"nzDisableAutoTips\",\n    nzTooltipIcon: \"nzTooltipIcon\"\n  },\n  exportAs: [\"nzForm\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([WithConfig(), InputBoolean()], NzFormDirective.prototype, \"nzNoColon\", void 0);\n\n__decorate([WithConfig()], NzFormDirective.prototype, \"nzAutoTips\", void 0);\n\n__decorate([InputBoolean()], NzFormDirective.prototype, \"nzDisableAutoTips\", void 0);\n\n__decorate([WithConfig()], NzFormDirective.prototype, \"nzTooltipIcon\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-form]',\n      exportAs: 'nzForm',\n      host: {\n        '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n        '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n        '[class.ant-form-inline]': `nzLayout === 'inline'`,\n        '[class.ant-form-rtl]': `dir === 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzLayout: [{\n      type: Input\n    }],\n    nzNoColon: [{\n      type: Input\n    }],\n    nzAutoTips: [{\n      type: Input\n    }],\n    nzDisableAutoTips: [{\n      type: Input\n    }],\n    nzTooltipIcon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n};\n\nclass NzFormControlComponent {\n  constructor(elementRef, nzFormItemComponent, cdr, renderer, i18n, nzFormDirective) {\n    var _a, _b;\n\n    this.nzFormItemComponent = nzFormItemComponent;\n    this.cdr = cdr;\n    this.nzFormDirective = nzFormDirective;\n    this._hasFeedback = false;\n    this.validateChanges = Subscription.EMPTY;\n    this.validateString = null;\n    this.destroyed$ = new Subject();\n    this.status = null;\n    this.validateControl = null;\n    this.iconType = null;\n    this.innerTip = null;\n    this.nzAutoTips = {};\n    this.nzDisableAutoTips = 'default';\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => this.localeId = locale.locale)));\n    this.subscribeAutoTips((_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips((_b = this.nzFormDirective) === null || _b === void 0 ? void 0 : _b.getInputObservable('nzDisableAutoTips').pipe(filter(() => this.nzDisableAutoTips === 'default')));\n  }\n\n  get disableAutoTips() {\n    var _a;\n\n    return this.nzDisableAutoTips !== 'default' ? toBoolean(this.nzDisableAutoTips) : (_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzDisableAutoTips;\n  }\n\n  set nzHasFeedback(value) {\n    this._hasFeedback = toBoolean(value);\n\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback() {\n    return this._hasFeedback;\n  }\n\n  set nzValidateStatus(value) {\n    if (value instanceof AbstractControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  watchControl() {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null), takeUntil(this.destroyed$)).subscribe(_ => {\n        if (!this.disableAutoTips) {\n          this.updateAutoErrorTip();\n        }\n\n        this.setStatus();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  setStatus() {\n    this.status = this.getControlStatus(this.validateString);\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.innerTip = this.getInnerTip(this.status);\n\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  getControlStatus(validateString) {\n    let status;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (validateString === 'validating' || validateString === 'pending' || this.validateControlStatus('PENDING')) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = null;\n    }\n\n    return status;\n  }\n\n  validateControlStatus(validStatus, statusType) {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const {\n        dirty,\n        touched,\n        status\n      } = this.validateControl;\n      return (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus);\n    }\n  }\n\n  getInnerTip(status) {\n    switch (status) {\n      case 'error':\n        return !this.disableAutoTips && this.autoErrorTip || this.nzErrorTip || null;\n\n      case 'validating':\n        return this.nzValidatingTip || null;\n\n      case 'success':\n        return this.nzSuccessTip || null;\n\n      case 'warning':\n        return this.nzWarningTip || null;\n\n      default:\n        return null;\n    }\n  }\n\n  updateAutoErrorTip() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip = (_l = (_g = (_e = (_b = (_a = errors[key]) === null || _a === void 0 ? void 0 : _a[this.localeId]) !== null && _b !== void 0 ? _b : (_d = (_c = this.nzAutoTips) === null || _c === void 0 ? void 0 : _c[this.localeId]) === null || _d === void 0 ? void 0 : _d[key]) !== null && _e !== void 0 ? _e : (_f = this.nzAutoTips.default) === null || _f === void 0 ? void 0 : _f[key]) !== null && _g !== void 0 ? _g : (_k = (_j = (_h = this.nzFormDirective) === null || _h === void 0 ? void 0 : _h.nzAutoTips) === null || _j === void 0 ? void 0 : _j[this.localeId]) === null || _k === void 0 ? void 0 : _k[key]) !== null && _l !== void 0 ? _l : (_o = (_m = this.nzFormDirective) === null || _m === void 0 ? void 0 : _m.nzAutoTips.default) === null || _o === void 0 ? void 0 : _o[key];\n        }\n\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  subscribeAutoTips(observable) {\n    observable === null || observable === void 0 ? void 0 : observable.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzDisableAutoTips,\n      nzAutoTips,\n      nzSuccessTip,\n      nzWarningTip,\n      nzErrorTip,\n      nzValidatingTip\n    } = changes;\n\n    if (nzDisableAutoTips || nzAutoTips) {\n      this.updateAutoErrorTip();\n      this.setStatus();\n    } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n      this.setStatus();\n    }\n  }\n\n  ngOnInit() {\n    this.setStatus();\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit() {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl;\n      }\n    }\n  }\n\n}\n\nNzFormControlComponent.ɵfac = function NzFormControlComponent_Factory(t) {\n  return new (t || NzFormControlComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzFormItemComponent, 9), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2$1.NzI18nService), i0.ɵɵdirectiveInject(NzFormDirective, 8));\n};\n\nNzFormControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormControlComponent,\n  selectors: [[\"nz-form-control\"]],\n  contentQueries: function NzFormControlComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultValidateControl = _t.first);\n    }\n  },\n  inputs: {\n    nzSuccessTip: \"nzSuccessTip\",\n    nzWarningTip: \"nzWarningTip\",\n    nzErrorTip: \"nzErrorTip\",\n    nzValidatingTip: \"nzValidatingTip\",\n    nzExtra: \"nzExtra\",\n    nzAutoTips: \"nzAutoTips\",\n    nzDisableAutoTips: \"nzDisableAutoTips\",\n    nzHasFeedback: \"nzHasFeedback\",\n    nzValidateStatus: \"nzValidateStatus\"\n  },\n  exportAs: [\"nzFormControl\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"ant-form-item-control-input\"], [1, \"ant-form-item-control-input-content\"], [1, \"ant-form-item-children-icon\"], [\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"class\", \"ant-form-item-explain ant-form-item-explain-connected\", 4, \"ngIf\"], [\"class\", \"ant-form-item-extra\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-form-item-explain\", \"ant-form-item-explain-connected\"], [\"role\", \"alert\", 3, \"ngClass\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [1, \"ant-form-item-extra\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzFormControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"span\", 2);\n      i0.ɵɵtemplate(4, NzFormControlComponent_i_4_Template, 1, 1, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, NzFormControlComponent_div_5_Template, 3, 8, \"div\", 4);\n      i0.ɵɵtemplate(6, NzFormControlComponent_div_6_Template, 2, 1, \"div\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzHasFeedback && ctx.iconType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.innerTip);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzExtra);\n    }\n  },\n  directives: [i4.NgIf, i5.NzIconDirective, i4.NgClass, i6.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [helpMotion]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-control',\n      exportAs: 'nzFormControl',\n      preserveWhitespaces: false,\n      animations: [helpMotion],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div @helpMotion class=\"ant-form-item-explain ant-form-item-explain-connected\" *ngIf=\"innerTip\">\n      <div role=\"alert\" [ngClass]=\"['ant-form-item-explain-' + status]\">\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{\n          innerTip\n        }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NzFormItemComponent,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2$1.NzI18nService\n    }, {\n      type: NzFormDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    defaultValidateControl: [{\n      type: ContentChild,\n      args: [NgControl, {\n        static: false\n      }]\n    }],\n    nzSuccessTip: [{\n      type: Input\n    }],\n    nzWarningTip: [{\n      type: Input\n    }],\n    nzErrorTip: [{\n      type: Input\n    }],\n    nzValidatingTip: [{\n      type: Input\n    }],\n    nzExtra: [{\n      type: Input\n    }],\n    nzAutoTips: [{\n      type: Input\n    }],\n    nzDisableAutoTips: [{\n      type: Input\n    }],\n    nzHasFeedback: [{\n      type: Input\n    }],\n    nzValidateStatus: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction toTooltipIcon(value) {\n  const icon = typeof value === 'string' ? {\n    type: value\n  } : value;\n  return Object.assign(Object.assign({}, DefaultTooltipIcon), icon);\n}\n\nclass NzFormLabelComponent {\n  constructor(elementRef, renderer, cdr, nzFormDirective) {\n    this.cdr = cdr;\n    this.nzFormDirective = nzFormDirective;\n    this.nzRequired = false;\n    this.noColon = 'default';\n    this._tooltipIcon = 'default';\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n\n    if (this.nzFormDirective) {\n      this.nzFormDirective.getInputObservable('nzNoColon').pipe(filter(() => this.noColon === 'default'), takeUntil(this.destroy$)).subscribe(() => this.cdr.markForCheck());\n      this.nzFormDirective.getInputObservable('nzTooltipIcon').pipe(filter(() => this._tooltipIcon === 'default'), takeUntil(this.destroy$)).subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  set nzNoColon(value) {\n    this.noColon = toBoolean(value);\n  }\n\n  get nzNoColon() {\n    var _a;\n\n    return this.noColon !== 'default' ? this.noColon : (_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzNoColon;\n  }\n\n  set nzTooltipIcon(value) {\n    this._tooltipIcon = toTooltipIcon(value);\n  } // due to 'get' and 'set' accessor must have the same type, so it was renamed to `tooltipIcon`\n\n\n  get tooltipIcon() {\n    var _a;\n\n    return this._tooltipIcon !== 'default' ? this._tooltipIcon : toTooltipIcon(((_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzTooltipIcon) || DefaultTooltipIcon);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzFormLabelComponent.ɵfac = function NzFormLabelComponent_Factory(t) {\n  return new (t || NzFormLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzFormDirective, 12));\n};\n\nNzFormLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormLabelComponent,\n  selectors: [[\"nz-form-label\"]],\n  inputs: {\n    nzFor: \"nzFor\",\n    nzRequired: \"nzRequired\",\n    nzNoColon: \"nzNoColon\",\n    nzTooltipTitle: \"nzTooltipTitle\",\n    nzTooltipIcon: \"nzTooltipIcon\"\n  },\n  exportAs: [\"nzFormLabel\"],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 6,\n  consts: [[\"class\", \"ant-form-item-tooltip\", \"nz-tooltip\", \"\", 3, \"nzTooltipTitle\", 4, \"ngIf\"], [\"nz-tooltip\", \"\", 1, \"ant-form-item-tooltip\", 3, \"nzTooltipTitle\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\", \"nzTheme\"]],\n  template: function NzFormLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, NzFormLabelComponent_span_2_Template, 2, 2, \"span\", 0);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-form-item-no-colon\", ctx.nzNoColon)(\"ant-form-item-required\", ctx.nzRequired);\n      i0.ɵɵattribute(\"for\", ctx.nzFor);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzTooltipTitle);\n    }\n  },\n  directives: [i4.NgIf, i3.NzTooltipDirective, i6.NzStringTemplateOutletDirective, i5.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzFormLabelComponent.prototype, \"nzRequired\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-label',\n      exportAs: 'nzFormLabel',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n      <span *ngIf=\"nzTooltipTitle\" class=\"ant-form-item-tooltip\" nz-tooltip [nzTooltipTitle]=\"nzTooltipTitle\">\n        <ng-container *nzStringTemplateOutlet=\"tooltipIcon.type; let tooltipIconType\">\n          <i nz-icon [nzType]=\"tooltipIconType\" [nzTheme]=\"tooltipIcon.theme\"></i>\n        </ng-container>\n      </span>\n    </label>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NzFormDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    nzFor: [{\n      type: Input\n    }],\n    nzRequired: [{\n      type: Input\n    }],\n    nzNoColon: [{\n      type: Input\n    }],\n    nzTooltipTitle: [{\n      type: Input\n    }],\n    nzTooltipIcon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzFormSplitComponent {\n  constructor(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n  }\n\n}\n\nNzFormSplitComponent.ɵfac = function NzFormSplitComponent_Factory(t) {\n  return new (t || NzFormSplitComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNzFormSplitComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormSplitComponent,\n  selectors: [[\"nz-form-split\"]],\n  exportAs: [\"nzFormSplit\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzFormSplitComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormSplitComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-split',\n      exportAs: 'nzFormSplit',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: ` <ng-content></ng-content> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzFormTextComponent {\n  constructor(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n  }\n\n}\n\nNzFormTextComponent.ɵfac = function NzFormTextComponent_Factory(t) {\n  return new (t || NzFormTextComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNzFormTextComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFormTextComponent,\n  selectors: [[\"nz-form-text\"]],\n  exportAs: [\"nzFormText\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzFormTextComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormTextComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-text',\n      exportAs: 'nzFormText',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: ` <ng-content></ng-content> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzFormModule {}\n\nNzFormModule.ɵfac = function NzFormModule_Factory(t) {\n  return new (t || NzFormModule)();\n};\n\nNzFormModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzFormModule\n});\nNzFormModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzGridModule, NzIconModule, NzToolTipModule, LayoutModule, PlatformModule, NzOutletModule], NzGridModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFormModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormControlComponent, NzFormTextComponent, NzFormSplitComponent],\n      exports: [NzGridModule, NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormControlComponent, NzFormTextComponent, NzFormSplitComponent],\n      imports: [BidiModule, CommonModule, NzGridModule, NzIconModule, NzToolTipModule, LayoutModule, PlatformModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DefaultTooltipIcon, NzFormControlComponent, NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormModule, NzFormSplitComponent, NzFormTextComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-form.mjs"],"names":["i2","BidiModule","LayoutModule","PlatformModule","i4","CommonModule","i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Directive","Optional","Input","Host","ContentChild","SkipSelf","NgModule","i6","NzOutletModule","NzGridModule","i5","NzIconModule","i3","NzToolTipModule","AbstractControl","NgModel","FormControlName","FormControlDirective","NgControl","Subject","Subscription","takeUntil","filter","map","tap","startWith","helpMotion","InputBoolean","toBoolean","i2$1","__decorate","i1","WithConfig","NzFormItemComponent","constructor","elementRef","renderer","cdr","status","hasFeedback","withHelpClass","destroy$","addClass","nativeElement","setWithHelpViaTips","value","markForCheck","setStatus","setHasFeedback","ngOnDestroy","next","complete","ɵfac","ElementRef","Renderer2","ChangeDetectorRef","ɵcmp","type","args","selector","exportAs","preserveWhitespaces","changeDetection","OnPush","encapsulation","None","host","template","NZ_CONFIG_MODULE_NAME","DefaultTooltipIcon","theme","NzFormDirective","nzConfigService","directionality","_a","_nzModuleName","nzLayout","nzNoColon","nzAutoTips","nzDisableAutoTips","nzTooltipIcon","dir","inputChanges$","change","pipe","subscribe","direction","getInputObservable","changeType","changes","ngOnChanges","NzConfigService","Directionality","ɵdir","prototype","decorators","iconTypeMap","error","validating","success","warning","NzFormControlComponent","nzFormItemComponent","i18n","nzFormDirective","_b","_hasFeedback","validateChanges","EMPTY","validateString","destroyed$","validateControl","iconType","innerTip","subscribeAutoTips","localeChange","locale","localeId","disableAutoTips","nzHasFeedback","nzValidateStatus","watchControl","control","unsubscribe","statusChanges","_","updateAutoErrorTip","getControlStatus","getInnerTip","validateControlStatus","validStatus","statusType","dirty","touched","hasError","autoErrorTip","nzErrorTip","nzValidatingTip","nzSuccessTip","nzWarningTip","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","errors","key","hasOwnProperty","default","observable","ngOnInit","ngAfterContentInit","defaultValidateControl","NzI18nService","NgIf","NzIconDirective","NgClass","NzStringTemplateOutletDirective","animations","static","nzExtra","toTooltipIcon","icon","Object","assign","NzFormLabelComponent","nzRequired","noColon","_tooltipIcon","tooltipIcon","NzTooltipDirective","nzFor","nzTooltipTitle","NzFormSplitComponent","NzFormTextComponent","NzFormModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Directive, Optional, Input, Host, ContentChild, SkipSelf, NgModule } from '@angular/core';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { AbstractControl, NgModel, FormControlName, FormControlDirective, NgControl } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, filter, map, tap, startWith } from 'rxjs/operators';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2$1 from 'ng-zorro-antd/i18n';\nimport { __decorate } from 'tslib';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\nclass NzFormItemComponent {\n    constructor(elementRef, renderer, cdr) {\n        this.cdr = cdr;\n        this.status = null;\n        this.hasFeedback = false;\n        this.withHelpClass = false;\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n    }\n    setWithHelpViaTips(value) {\n        this.withHelpClass = value;\n        this.cdr.markForCheck();\n    }\n    setStatus(status) {\n        this.status = status;\n        this.cdr.markForCheck();\n    }\n    setHasFeedback(hasFeedback) {\n        this.hasFeedback = hasFeedback;\n        this.cdr.markForCheck();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzFormItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormItemComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzFormItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFormItemComponent, selector: \"nz-form-item\", host: { properties: { \"class.ant-form-item-has-success\": \"status === \\\"success\\\"\", \"class.ant-form-item-has-warning\": \"status === \\\"warning\\\"\", \"class.ant-form-item-has-error\": \"status === \\\"error\\\"\", \"class.ant-form-item-is-validating\": \"status === \\\"validating\\\"\", \"class.ant-form-item-has-feedback\": \"hasFeedback && status\", \"class.ant-form-item-with-help\": \"withHelpClass\" } }, exportAs: [\"nzFormItem\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-item',\n                    exportAs: 'nzFormItem',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class.ant-form-item-has-success]': 'status === \"success\"',\n                        '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n                        '[class.ant-form-item-has-error]': 'status === \"error\"',\n                        '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n                        '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n                        '[class.ant-form-item-with-help]': 'withHelpClass'\n                    },\n                    template: ` <ng-content></ng-content> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; } });\n\nconst NZ_CONFIG_MODULE_NAME = 'form';\nconst DefaultTooltipIcon = {\n    type: 'question-circle',\n    theme: 'outline'\n};\nclass NzFormDirective {\n    constructor(nzConfigService, elementRef, renderer, directionality) {\n        var _a;\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzLayout = 'horizontal';\n        this.nzNoColon = false;\n        this.nzAutoTips = {};\n        this.nzDisableAutoTips = false;\n        this.nzTooltipIcon = DefaultTooltipIcon;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.inputChanges$ = new Subject();\n        this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    getInputObservable(changeType) {\n        return this.inputChanges$.pipe(filter(changes => changeType in changes), map(value => value[changeType]));\n    }\n    ngOnChanges(changes) {\n        this.inputChanges$.next(changes);\n    }\n    ngOnDestroy() {\n        this.inputChanges$.complete();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzFormDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormDirective, deps: [{ token: i1.NzConfigService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzFormDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFormDirective, selector: \"[nz-form]\", inputs: { nzLayout: \"nzLayout\", nzNoColon: \"nzNoColon\", nzAutoTips: \"nzAutoTips\", nzDisableAutoTips: \"nzDisableAutoTips\", nzTooltipIcon: \"nzTooltipIcon\" }, host: { properties: { \"class.ant-form-horizontal\": \"nzLayout === 'horizontal'\", \"class.ant-form-vertical\": \"nzLayout === 'vertical'\", \"class.ant-form-inline\": \"nzLayout === 'inline'\", \"class.ant-form-rtl\": \"dir === 'rtl'\" } }, exportAs: [\"nzForm\"], usesOnChanges: true, ngImport: i0 });\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzFormDirective.prototype, \"nzNoColon\", void 0);\n__decorate([\n    WithConfig()\n], NzFormDirective.prototype, \"nzAutoTips\", void 0);\n__decorate([\n    InputBoolean()\n], NzFormDirective.prototype, \"nzDisableAutoTips\", void 0);\n__decorate([\n    WithConfig()\n], NzFormDirective.prototype, \"nzTooltipIcon\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-form]',\n                    exportAs: 'nzForm',\n                    host: {\n                        '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n                        '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n                        '[class.ant-form-inline]': `nzLayout === 'inline'`,\n                        '[class.ant-form-rtl]': `dir === 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.NzConfigService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzLayout: [{\n                type: Input\n            }], nzNoColon: [{\n                type: Input\n            }], nzAutoTips: [{\n                type: Input\n            }], nzDisableAutoTips: [{\n                type: Input\n            }], nzTooltipIcon: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst iconTypeMap = {\n    error: 'close-circle-fill',\n    validating: 'loading',\n    success: 'check-circle-fill',\n    warning: 'exclamation-circle-fill'\n};\nclass NzFormControlComponent {\n    constructor(elementRef, nzFormItemComponent, cdr, renderer, i18n, nzFormDirective) {\n        var _a, _b;\n        this.nzFormItemComponent = nzFormItemComponent;\n        this.cdr = cdr;\n        this.nzFormDirective = nzFormDirective;\n        this._hasFeedback = false;\n        this.validateChanges = Subscription.EMPTY;\n        this.validateString = null;\n        this.destroyed$ = new Subject();\n        this.status = null;\n        this.validateControl = null;\n        this.iconType = null;\n        this.innerTip = null;\n        this.nzAutoTips = {};\n        this.nzDisableAutoTips = 'default';\n        renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n        this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n        this.subscribeAutoTips((_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.getInputObservable('nzAutoTips'));\n        this.subscribeAutoTips((_b = this.nzFormDirective) === null || _b === void 0 ? void 0 : _b.getInputObservable('nzDisableAutoTips').pipe(filter(() => this.nzDisableAutoTips === 'default')));\n    }\n    get disableAutoTips() {\n        var _a;\n        return this.nzDisableAutoTips !== 'default'\n            ? toBoolean(this.nzDisableAutoTips)\n            : (_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzDisableAutoTips;\n    }\n    set nzHasFeedback(value) {\n        this._hasFeedback = toBoolean(value);\n        if (this.nzFormItemComponent) {\n            this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n        }\n    }\n    get nzHasFeedback() {\n        return this._hasFeedback;\n    }\n    set nzValidateStatus(value) {\n        if (value instanceof AbstractControl || value instanceof NgModel) {\n            this.validateControl = value;\n            this.validateString = null;\n            this.watchControl();\n        }\n        else if (value instanceof FormControlName) {\n            this.validateControl = value.control;\n            this.validateString = null;\n            this.watchControl();\n        }\n        else {\n            this.validateString = value;\n            this.validateControl = null;\n            this.setStatus();\n        }\n    }\n    watchControl() {\n        this.validateChanges.unsubscribe();\n        /** miss detect https://github.com/angular/angular/issues/10887 **/\n        if (this.validateControl && this.validateControl.statusChanges) {\n            this.validateChanges = this.validateControl.statusChanges\n                .pipe(startWith(null), takeUntil(this.destroyed$))\n                .subscribe(_ => {\n                if (!this.disableAutoTips) {\n                    this.updateAutoErrorTip();\n                }\n                this.setStatus();\n                this.cdr.markForCheck();\n            });\n        }\n    }\n    setStatus() {\n        this.status = this.getControlStatus(this.validateString);\n        this.iconType = this.status ? iconTypeMap[this.status] : null;\n        this.innerTip = this.getInnerTip(this.status);\n        if (this.nzFormItemComponent) {\n            this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n            this.nzFormItemComponent.setStatus(this.status);\n        }\n    }\n    getControlStatus(validateString) {\n        let status;\n        if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n            status = 'warning';\n        }\n        else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n            status = 'error';\n        }\n        else if (validateString === 'validating' ||\n            validateString === 'pending' ||\n            this.validateControlStatus('PENDING')) {\n            status = 'validating';\n        }\n        else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n            status = 'success';\n        }\n        else {\n            status = null;\n        }\n        return status;\n    }\n    validateControlStatus(validStatus, statusType) {\n        if (!this.validateControl) {\n            return false;\n        }\n        else {\n            const { dirty, touched, status } = this.validateControl;\n            return ((!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus));\n        }\n    }\n    getInnerTip(status) {\n        switch (status) {\n            case 'error':\n                return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip || null;\n            case 'validating':\n                return this.nzValidatingTip || null;\n            case 'success':\n                return this.nzSuccessTip || null;\n            case 'warning':\n                return this.nzWarningTip || null;\n            default:\n                return null;\n        }\n    }\n    updateAutoErrorTip() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        if (this.validateControl) {\n            const errors = this.validateControl.errors || {};\n            let autoErrorTip = '';\n            for (const key in errors) {\n                if (errors.hasOwnProperty(key)) {\n                    autoErrorTip =\n                        (_l = (_g = (_e = (_b = (_a = errors[key]) === null || _a === void 0 ? void 0 : _a[this.localeId]) !== null && _b !== void 0 ? _b : (_d = (_c = this.nzAutoTips) === null || _c === void 0 ? void 0 : _c[this.localeId]) === null || _d === void 0 ? void 0 : _d[key]) !== null && _e !== void 0 ? _e : (_f = this.nzAutoTips.default) === null || _f === void 0 ? void 0 : _f[key]) !== null && _g !== void 0 ? _g : (_k = (_j = (_h = this.nzFormDirective) === null || _h === void 0 ? void 0 : _h.nzAutoTips) === null || _j === void 0 ? void 0 : _j[this.localeId]) === null || _k === void 0 ? void 0 : _k[key]) !== null && _l !== void 0 ? _l : (_o = (_m = this.nzFormDirective) === null || _m === void 0 ? void 0 : _m.nzAutoTips.default) === null || _o === void 0 ? void 0 : _o[key];\n                }\n                if (!!autoErrorTip) {\n                    break;\n                }\n            }\n            this.autoErrorTip = autoErrorTip;\n        }\n    }\n    subscribeAutoTips(observable) {\n        observable === null || observable === void 0 ? void 0 : observable.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n            if (!this.disableAutoTips) {\n                this.updateAutoErrorTip();\n                this.setStatus();\n                this.cdr.markForCheck();\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const { nzDisableAutoTips, nzAutoTips, nzSuccessTip, nzWarningTip, nzErrorTip, nzValidatingTip } = changes;\n        if (nzDisableAutoTips || nzAutoTips) {\n            this.updateAutoErrorTip();\n            this.setStatus();\n        }\n        else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n            this.setStatus();\n        }\n    }\n    ngOnInit() {\n        this.setStatus();\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    ngAfterContentInit() {\n        if (!this.validateControl && !this.validateString) {\n            if (this.defaultValidateControl instanceof FormControlDirective) {\n                this.nzValidateStatus = this.defaultValidateControl.control;\n            }\n            else {\n                this.nzValidateStatus = this.defaultValidateControl;\n            }\n        }\n    }\n}\nNzFormControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormControlComponent, deps: [{ token: i0.ElementRef }, { token: NzFormItemComponent, host: true, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i2$1.NzI18nService }, { token: NzFormDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzFormControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFormControlComponent, selector: \"nz-form-control\", inputs: { nzSuccessTip: \"nzSuccessTip\", nzWarningTip: \"nzWarningTip\", nzErrorTip: \"nzErrorTip\", nzValidatingTip: \"nzValidatingTip\", nzExtra: \"nzExtra\", nzAutoTips: \"nzAutoTips\", nzDisableAutoTips: \"nzDisableAutoTips\", nzHasFeedback: \"nzHasFeedback\", nzValidateStatus: \"nzValidateStatus\" }, queries: [{ propertyName: \"defaultValidateControl\", first: true, predicate: NgControl, descendants: true }], exportAs: [\"nzFormControl\"], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div @helpMotion class=\"ant-form-item-explain ant-form-item-explain-connected\" *ngIf=\"innerTip\">\n      <div role=\"alert\" [ngClass]=\"['ant-form-item-explain-' + status]\">\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{\n          innerTip\n        }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [helpMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-control',\n                    exportAs: 'nzFormControl',\n                    preserveWhitespaces: false,\n                    animations: [helpMotion],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div @helpMotion class=\"ant-form-item-explain ant-form-item-explain-connected\" *ngIf=\"innerTip\">\n      <div role=\"alert\" [ngClass]=\"['ant-form-item-explain-' + status]\">\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{\n          innerTip\n        }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: NzFormItemComponent, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i2$1.NzI18nService }, { type: NzFormDirective, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { defaultValidateControl: [{\n                type: ContentChild,\n                args: [NgControl, { static: false }]\n            }], nzSuccessTip: [{\n                type: Input\n            }], nzWarningTip: [{\n                type: Input\n            }], nzErrorTip: [{\n                type: Input\n            }], nzValidatingTip: [{\n                type: Input\n            }], nzExtra: [{\n                type: Input\n            }], nzAutoTips: [{\n                type: Input\n            }], nzDisableAutoTips: [{\n                type: Input\n            }], nzHasFeedback: [{\n                type: Input\n            }], nzValidateStatus: [{\n                type: Input\n            }] } });\n\nfunction toTooltipIcon(value) {\n    const icon = typeof value === 'string' ? { type: value } : value;\n    return Object.assign(Object.assign({}, DefaultTooltipIcon), icon);\n}\nclass NzFormLabelComponent {\n    constructor(elementRef, renderer, cdr, nzFormDirective) {\n        this.cdr = cdr;\n        this.nzFormDirective = nzFormDirective;\n        this.nzRequired = false;\n        this.noColon = 'default';\n        this._tooltipIcon = 'default';\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n        if (this.nzFormDirective) {\n            this.nzFormDirective\n                .getInputObservable('nzNoColon')\n                .pipe(filter(() => this.noColon === 'default'), takeUntil(this.destroy$))\n                .subscribe(() => this.cdr.markForCheck());\n            this.nzFormDirective\n                .getInputObservable('nzTooltipIcon')\n                .pipe(filter(() => this._tooltipIcon === 'default'), takeUntil(this.destroy$))\n                .subscribe(() => this.cdr.markForCheck());\n        }\n    }\n    set nzNoColon(value) {\n        this.noColon = toBoolean(value);\n    }\n    get nzNoColon() {\n        var _a;\n        return this.noColon !== 'default' ? this.noColon : (_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzNoColon;\n    }\n    set nzTooltipIcon(value) {\n        this._tooltipIcon = toTooltipIcon(value);\n    }\n    // due to 'get' and 'set' accessor must have the same type, so it was renamed to `tooltipIcon`\n    get tooltipIcon() {\n        var _a;\n        return this._tooltipIcon !== 'default'\n            ? this._tooltipIcon\n            : toTooltipIcon(((_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzTooltipIcon) || DefaultTooltipIcon);\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzFormLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormLabelComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: NzFormDirective, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nNzFormLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFormLabelComponent, selector: \"nz-form-label\", inputs: { nzFor: \"nzFor\", nzRequired: \"nzRequired\", nzNoColon: \"nzNoColon\", nzTooltipTitle: \"nzTooltipTitle\", nzTooltipIcon: \"nzTooltipIcon\" }, exportAs: [\"nzFormLabel\"], ngImport: i0, template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n      <span *ngIf=\"nzTooltipTitle\" class=\"ant-form-item-tooltip\" nz-tooltip [nzTooltipTitle]=\"nzTooltipTitle\">\n        <ng-container *nzStringTemplateOutlet=\"tooltipIcon.type; let tooltipIconType\">\n          <i nz-icon [nzType]=\"tooltipIconType\" [nzTheme]=\"tooltipIcon.theme\"></i>\n        </ng-container>\n      </span>\n    </label>\n  `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i5.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzFormLabelComponent.prototype, \"nzRequired\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-label',\n                    exportAs: 'nzFormLabel',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n      <span *ngIf=\"nzTooltipTitle\" class=\"ant-form-item-tooltip\" nz-tooltip [nzTooltipTitle]=\"nzTooltipTitle\">\n        <ng-container *nzStringTemplateOutlet=\"tooltipIcon.type; let tooltipIconType\">\n          <i nz-icon [nzType]=\"tooltipIconType\" [nzTheme]=\"tooltipIcon.theme\"></i>\n        </ng-container>\n      </span>\n    </label>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: NzFormDirective, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }];\n    }, propDecorators: { nzFor: [{\n                type: Input\n            }], nzRequired: [{\n                type: Input\n            }], nzNoColon: [{\n                type: Input\n            }], nzTooltipTitle: [{\n                type: Input\n            }], nzTooltipIcon: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormSplitComponent {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n    }\n}\nNzFormSplitComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormSplitComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNzFormSplitComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFormSplitComponent, selector: \"nz-form-split\", exportAs: [\"nzFormSplit\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormSplitComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-split',\n                    exportAs: 'nzFormSplit',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: ` <ng-content></ng-content> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormTextComponent {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n    }\n}\nNzFormTextComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormTextComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNzFormTextComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFormTextComponent, selector: \"nz-form-text\", exportAs: [\"nzFormText\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormTextComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-form-text',\n                    exportAs: 'nzFormText',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: ` <ng-content></ng-content> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzFormModule {\n}\nNzFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormModule, declarations: [NzFormDirective,\n        NzFormItemComponent,\n        NzFormLabelComponent,\n        NzFormControlComponent,\n        NzFormTextComponent,\n        NzFormSplitComponent], imports: [BidiModule,\n        CommonModule,\n        NzGridModule,\n        NzIconModule,\n        NzToolTipModule,\n        LayoutModule,\n        PlatformModule,\n        NzOutletModule], exports: [NzGridModule,\n        NzFormDirective,\n        NzFormItemComponent,\n        NzFormLabelComponent,\n        NzFormControlComponent,\n        NzFormTextComponent,\n        NzFormSplitComponent] });\nNzFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormModule, imports: [[\n            BidiModule,\n            CommonModule,\n            NzGridModule,\n            NzIconModule,\n            NzToolTipModule,\n            LayoutModule,\n            PlatformModule,\n            NzOutletModule\n        ], NzGridModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFormModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzFormDirective,\n                        NzFormItemComponent,\n                        NzFormLabelComponent,\n                        NzFormControlComponent,\n                        NzFormTextComponent,\n                        NzFormSplitComponent\n                    ],\n                    exports: [\n                        NzGridModule,\n                        NzFormDirective,\n                        NzFormItemComponent,\n                        NzFormLabelComponent,\n                        NzFormControlComponent,\n                        NzFormTextComponent,\n                        NzFormSplitComponent\n                    ],\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        NzGridModule,\n                        NzIconModule,\n                        NzToolTipModule,\n                        LayoutModule,\n                        PlatformModule,\n                        NzOutletModule\n                    ]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultTooltipIcon, NzFormControlComponent, NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormModule, NzFormSplitComponent, NzFormTextComponent };\n"]},"metadata":{},"sourceType":"module"}