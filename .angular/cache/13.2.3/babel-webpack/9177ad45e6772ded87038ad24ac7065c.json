{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, Self, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, isDevMode, ContentChild, NgModule } from '@angular/core';\nimport { Subject, merge, EMPTY } from 'rxjs';\nimport { filter, takeUntil, startWith, switchMap, mergeMap, map } from 'rxjs/operators';\nimport { InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/forms';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i2$2 from 'ng-zorro-antd/core/services';\nconst _c0 = [\"nz-input-group-slot\", \"\"];\n\nfunction NzInputGroupSlotComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.icon);\n  }\n}\n\nfunction NzInputGroupSlotComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.template);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r7.nzAddOnBeforeIcon)(\"template\", ctx_r7.nzAddOnBefore);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_span_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵclassProp(\"ant-input-affix-wrapper-sm\", ctx_r8.isSmall)(\"ant-input-affix-wrapper-lg\", ctx_r8.isLarge);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r9.nzAddOnAfterIcon)(\"template\", ctx_r9.nzAddOnAfter);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_1_Template, 1, 2, \"span\", 5);\n    i0.ɵɵtemplate(2, NzInputGroupComponent_span_0_span_2_Template, 2, 5, \"span\", 6);\n    i0.ɵɵtemplate(3, NzInputGroupComponent_span_0_span_3_Template, 1, 2, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnBefore || ctx_r0.nzAddOnBeforeIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isAffix)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnAfter || ctx_r0.nzAddOnAfterIcon);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_Template, 1, 1, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAffix)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r13.nzPrefixIcon)(\"template\", ctx_r13.nzPrefix);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r15.nzSuffixIcon)(\"template\", ctx_r15.nzSuffix);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_3_span_0_Template, 1, 2, \"span\", 11);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_3_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵtemplate(2, NzInputGroupComponent_ng_template_3_span_2_Template, 1, 2, \"span\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.nzPrefix || ctx_r4.nzPrefixIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.nzSuffix || ctx_r4.nzSuffixIcon);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c1 = [\"*\"];\nconst _c2 = [[[\"textarea\", \"nz-input\", \"\"]]];\nconst _c3 = [\"textarea[nz-input]\"];\n\nclass NzInputDirective {\n  constructor(ngControl, renderer, elementRef, directionality) {\n    this.ngControl = ngControl;\n    this.directionality = directionality;\n    this.nzBorderless = false;\n    this.nzSize = 'default';\n    this._disabled = false;\n    this.disabled$ = new Subject();\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = value != null && `${value}` !== 'false';\n  }\n\n  ngOnInit() {\n    var _a, _b;\n\n    if (this.ngControl) {\n      (_a = this.ngControl.statusChanges) === null || _a === void 0 ? void 0 : _a.pipe(filter(() => this.ngControl.disabled !== null), takeUntil(this.destroy$)).subscribe(() => {\n        this.disabled$.next(this.ngControl.disabled);\n      });\n    }\n\n    this.dir = this.directionality.value;\n    (_b = this.directionality.change) === null || _b === void 0 ? void 0 : _b.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      disabled\n    } = changes;\n\n    if (disabled) {\n      this.disabled$.next(this.disabled);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzInputDirective.ɵfac = function NzInputDirective_Factory(t) {\n  return new (t || NzInputDirective)(i0.ɵɵdirectiveInject(i1.NgControl, 10), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n};\n\nNzInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzInputDirective,\n  selectors: [[\"input\", \"nz-input\", \"\"], [\"textarea\", \"nz-input\", \"\"]],\n  hostVars: 11,\n  hostBindings: function NzInputDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n      i0.ɵɵclassProp(\"ant-input-disabled\", ctx.disabled)(\"ant-input-borderless\", ctx.nzBorderless)(\"ant-input-lg\", ctx.nzSize === \"large\")(\"ant-input-sm\", ctx.nzSize === \"small\")(\"ant-input-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzBorderless: \"nzBorderless\",\n    nzSize: \"nzSize\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"nzInput\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([InputBoolean()], NzInputDirective.prototype, \"nzBorderless\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[nz-input],textarea[nz-input]',\n      exportAs: 'nzInput',\n      host: {\n        '[class.ant-input-disabled]': 'disabled',\n        '[class.ant-input-borderless]': 'nzBorderless',\n        '[class.ant-input-lg]': `nzSize === 'large'`,\n        '[class.ant-input-sm]': `nzSize === 'small'`,\n        '[attr.disabled]': 'disabled || null',\n        '[class.ant-input-rtl]': `dir=== 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzBorderless: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputGroupSlotComponent {\n  constructor() {\n    this.icon = null;\n    this.type = null;\n    this.template = null;\n  }\n\n}\n\nNzInputGroupSlotComponent.ɵfac = function NzInputGroupSlotComponent_Factory(t) {\n  return new (t || NzInputGroupSlotComponent)();\n};\n\nNzInputGroupSlotComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzInputGroupSlotComponent,\n  selectors: [[\"\", \"nz-input-group-slot\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzInputGroupSlotComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-input-group-addon\", ctx.type === \"addon\")(\"ant-input-prefix\", ctx.type === \"prefix\")(\"ant-input-suffix\", ctx.type === \"suffix\");\n    }\n  },\n  inputs: {\n    icon: \"icon\",\n    type: \"type\",\n    template: \"template\"\n  },\n  attrs: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzInputGroupSlotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzInputGroupSlotComponent_i_0_Template, 1, 1, \"i\", 0);\n      i0.ɵɵtemplate(1, NzInputGroupSlotComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.template);\n    }\n  },\n  directives: [i4.NgIf, i2$1.NzIconDirective, i3.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupSlotComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-input-group-slot]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  `,\n      host: {\n        '[class.ant-input-group-addon]': `type === 'addon'`,\n        '[class.ant-input-prefix]': `type === 'prefix'`,\n        '[class.ant-input-suffix]': `type === 'suffix'`\n      }\n    }]\n  }], null, {\n    icon: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzInputGroupWhitSuffixOrPrefixDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n\n}\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = function NzInputGroupWhitSuffixOrPrefixDirective_Factory(t) {\n  return new (t || NzInputGroupWhitSuffixOrPrefixDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzInputGroupWhitSuffixOrPrefixDirective,\n  selectors: [[\"nz-input-group\", \"nzSuffix\", \"\"], [\"nz-input-group\", \"nzPrefix\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupWhitSuffixOrPrefixDirective, [{\n    type: Directive,\n    args: [{\n      selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nclass NzInputGroupComponent {\n  constructor(focusMonitor, elementRef, cdr, directionality) {\n    this.focusMonitor = focusMonitor;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzAddOnBeforeIcon = null;\n    this.nzAddOnAfterIcon = null;\n    this.nzPrefixIcon = null;\n    this.nzSuffixIcon = null;\n    this.nzSize = 'default';\n    this.nzSearch = false;\n    this.nzCompact = false;\n    this.isLarge = false;\n    this.isSmall = false;\n    this.isAffix = false;\n    this.isAddOn = false;\n    this.focused = false;\n    this.disabled = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  updateChildrenInputSize() {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => item.nzSize = this.nzSize);\n    }\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      this.focused = !!focusOrigin;\n      this.cdr.markForCheck();\n    });\n    this.dir = this.directionality.value;\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  ngAfterContentInit() {\n    this.updateChildrenInputSize();\n    const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n    listOfInputChange$.pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map(input => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some(input => input.disabled)), takeUntil(this.destroy$)).subscribe(disabled => {\n      this.disabled = disabled;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzSize,\n      nzSuffix,\n      nzPrefix,\n      nzPrefixIcon,\n      nzSuffixIcon,\n      nzAddOnAfter,\n      nzAddOnBefore,\n      nzAddOnAfterIcon,\n      nzAddOnBeforeIcon\n    } = changes;\n\n    if (nzSize) {\n      this.updateChildrenInputSize();\n      this.isLarge = this.nzSize === 'large';\n      this.isSmall = this.nzSize === 'small';\n    }\n\n    if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n      this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    }\n\n    if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n      this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n    }\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzInputGroupComponent.ɵfac = function NzInputGroupComponent_Factory(t) {\n  return new (t || NzInputGroupComponent)(i0.ɵɵdirectiveInject(i1$1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n};\n\nNzInputGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzInputGroupComponent,\n  selectors: [[\"nz-input-group\"]],\n  contentQueries: function NzInputGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzInputDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzInputDirective = _t);\n    }\n  },\n  hostVars: 40,\n  hostBindings: function NzInputGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-input-group-compact\", ctx.nzCompact)(\"ant-input-search-enter-button\", ctx.nzSearch)(\"ant-input-search\", ctx.nzSearch)(\"ant-input-search-rtl\", ctx.dir === \"rtl\")(\"ant-input-search-sm\", ctx.nzSearch && ctx.isSmall)(\"ant-input-search-large\", ctx.nzSearch && ctx.isLarge)(\"ant-input-group-wrapper\", ctx.isAddOn)(\"ant-input-group-wrapper-rtl\", ctx.dir === \"rtl\")(\"ant-input-group-wrapper-lg\", ctx.isAddOn && ctx.isLarge)(\"ant-input-group-wrapper-sm\", ctx.isAddOn && ctx.isSmall)(\"ant-input-affix-wrapper\", ctx.isAffix && !ctx.isAddOn)(\"ant-input-affix-wrapper-rtl\", ctx.dir === \"rtl\")(\"ant-input-affix-wrapper-focused\", ctx.isAffix && ctx.focused)(\"ant-input-affix-wrapper-disabled\", ctx.isAffix && ctx.disabled)(\"ant-input-affix-wrapper-lg\", ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-affix-wrapper-sm\", ctx.isAffix && !ctx.isAddOn && ctx.isSmall)(\"ant-input-group\", !ctx.isAffix && !ctx.isAddOn)(\"ant-input-group-rtl\", ctx.dir === \"rtl\")(\"ant-input-group-lg\", !ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-group-sm\", !ctx.isAffix && !ctx.isAddOn && ctx.isSmall);\n    }\n  },\n  inputs: {\n    nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\",\n    nzAddOnAfterIcon: \"nzAddOnAfterIcon\",\n    nzPrefixIcon: \"nzPrefixIcon\",\n    nzSuffixIcon: \"nzSuffixIcon\",\n    nzAddOnBefore: \"nzAddOnBefore\",\n    nzAddOnAfter: \"nzAddOnAfter\",\n    nzPrefix: \"nzPrefix\",\n    nzSuffix: \"nzSuffix\",\n    nzSize: \"nzSize\",\n    nzSearch: \"nzSearch\",\n    nzCompact: \"nzCompact\"\n  },\n  exportAs: [\"nzInputGroup\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 7,\n  vars: 2,\n  consts: [[\"class\", \"ant-input-wrapper ant-input-group\", 4, \"ngIf\", \"ngIfElse\"], [\"noAddOnTemplate\", \"\"], [\"affixTemplate\", \"\"], [\"contentTemplate\", \"\"], [1, \"ant-input-wrapper\", \"ant-input-group\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"class\", \"ant-input-affix-wrapper\", 3, \"ant-input-affix-wrapper-sm\", \"ant-input-affix-wrapper-lg\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\"], [1, \"ant-input-affix-wrapper\"], [3, \"ngTemplateOutlet\"], [3, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\"]],\n  template: function NzInputGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzInputGroupComponent_span_0_Template, 4, 4, \"span\", 0);\n      i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_1_Template, 1, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzInputGroupComponent_ng_template_3_Template, 3, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, NzInputGroupComponent_ng_template_5_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.isAddOn)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [NzInputGroupSlotComponent, i4.NgIf, i4.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n\n__decorate([InputBoolean()], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-input-group',\n      exportAs: 'nzInputGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      ></span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n      host: {\n        '[class.ant-input-group-compact]': `nzCompact`,\n        '[class.ant-input-search-enter-button]': `nzSearch`,\n        '[class.ant-input-search]': `nzSearch`,\n        '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n        '[class.ant-input-search-large]': `nzSearch && isLarge`,\n        '[class.ant-input-group-wrapper]': `isAddOn`,\n        '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n        '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n        '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n        '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n        '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n        '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n        '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n        '[class.ant-input-group]': `!isAffix && !isAddOn`,\n        '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n        '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.FocusMonitor\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    listOfNzInputDirective: [{\n      type: ContentChildren,\n      args: [NzInputDirective]\n    }],\n    nzAddOnBeforeIcon: [{\n      type: Input\n    }],\n    nzAddOnAfterIcon: [{\n      type: Input\n    }],\n    nzPrefixIcon: [{\n      type: Input\n    }],\n    nzSuffixIcon: [{\n      type: Input\n    }],\n    nzAddOnBefore: [{\n      type: Input\n    }],\n    nzAddOnAfter: [{\n      type: Input\n    }],\n    nzPrefix: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzSearch: [{\n      type: Input\n    }],\n    nzCompact: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzAutosizeDirective {\n  constructor(elementRef, ngZone, platform, resizeService) {\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.autosize = false;\n    this.el = this.elementRef.nativeElement;\n    this.maxHeight = null;\n    this.minHeight = null;\n    this.destroy$ = new Subject();\n    this.inputGap = 10;\n  }\n\n  set nzAutosize(value) {\n    const isAutoSizeType = data => typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n\n    if (typeof value === 'string' || value === true) {\n      this.autosize = true;\n    } else if (isAutoSizeType(value)) {\n      this.autosize = true;\n      this.minRows = value.minRows;\n      this.maxRows = value.maxRows;\n      this.maxHeight = this.setMaxHeight();\n      this.minHeight = this.setMinHeight();\n    }\n  }\n\n  resizeToFitContent(force = false) {\n    this.cacheTextareaLineHeight(); // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n\n    if (!this.cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this.el;\n    const value = textarea.value; // Only resize if the value or minRows have changed since these calculations can be expensive.\n\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n      return;\n    }\n\n    const placeholderText = textarea.placeholder; // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n\n    textarea.classList.add('nz-textarea-autosize-measuring');\n    textarea.placeholder = '';\n    let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight + this.inputGap;\n\n    if (this.maxHeight !== null && height > this.maxHeight) {\n      height = this.maxHeight;\n    }\n\n    if (this.minHeight !== null && height < this.minHeight) {\n      height = this.minHeight;\n    } // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n\n\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove('nz-textarea-autosize-measuring');\n    textarea.placeholder = placeholderText; // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n    // We need to re-set the selection in order for it to scroll to the proper position.\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this.ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n        const {\n          selectionStart,\n          selectionEnd\n        } = textarea; // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n\n        if (!this.destroy$.isStopped && document.activeElement === textarea) {\n          textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n      }));\n    }\n\n    this.previousValue = value;\n    this.previousMinRows = this.minRows;\n  }\n\n  cacheTextareaLineHeight() {\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n      return;\n    } // Use a clone element because we have to override some styles.\n\n\n    const textareaClone = this.el.cloneNode(false);\n    textareaClone.rows = 1; // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = ''; // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n\n    textareaClone.style.overflow = 'hidden';\n    this.el.parentNode.appendChild(textareaClone);\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n    this.el.parentNode.removeChild(textareaClone); // Min and max heights have to be re-calculated if the cached line height changes\n\n    this.maxHeight = this.setMaxHeight();\n    this.minHeight = this.setMinHeight();\n  }\n\n  setMinHeight() {\n    const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (minHeight !== null) {\n      this.el.style.minHeight = `${minHeight}px`;\n    }\n\n    return minHeight;\n  }\n\n  setMaxHeight() {\n    const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (maxHeight !== null) {\n      this.el.style.maxHeight = `${maxHeight}px`;\n    }\n\n    return maxHeight;\n  }\n\n  noopInputHandler() {// no-op handler that ensures we're running change detection on input events.\n  }\n\n  ngAfterViewInit() {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n      this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(() => this.resizeToFitContent(true));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngDoCheck() {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n\n}\n\nNzAutosizeDirective.ɵfac = function NzAutosizeDirective_Factory(t) {\n  return new (t || NzAutosizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$2.Platform), i0.ɵɵdirectiveInject(i2$2.NzResizeService));\n};\n\nNzAutosizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzAutosizeDirective,\n  selectors: [[\"textarea\", \"nzAutosize\", \"\"]],\n  hostAttrs: [\"rows\", \"1\"],\n  hostBindings: function NzAutosizeDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function NzAutosizeDirective_input_HostBindingHandler() {\n        return ctx.noopInputHandler();\n      });\n    }\n  },\n  inputs: {\n    nzAutosize: \"nzAutosize\"\n  },\n  exportAs: [\"nzAutosize\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutosizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'textarea[nzAutosize]',\n      exportAs: 'nzAutosize',\n      host: {\n        // Textarea elements that have the directive applied should have a single row by default.\n        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n        rows: '1',\n        '(input)': 'noopInputHandler()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$2.Platform\n    }, {\n      type: i2$2.NzResizeService\n    }];\n  }, {\n    nzAutosize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTextareaCountComponent {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nzMaxCharacterCount = 0;\n\n    this.nzComputeCharacterCount = v => v.length;\n\n    this.nzFormatter = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\n\n    this.configChange$ = new Subject();\n    this.destroy$ = new Subject();\n  }\n\n  ngAfterContentInit() {\n    if (!this.nzInputDirective && isDevMode()) {\n      throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\n    }\n\n    if (this.nzInputDirective.ngControl) {\n      const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\n      merge(valueChanges, this.configChange$).pipe(takeUntil(this.destroy$), map(() => this.nzInputDirective.ngControl.value), startWith(this.nzInputDirective.ngControl.value)).subscribe(value => {\n        this.setDataCount(value);\n      });\n    }\n  }\n\n  setDataCount(value) {\n    const inputValue = isNotNil(value) ? String(value) : '';\n    const currentCount = this.nzComputeCharacterCount(inputValue);\n    const dataCount = this.nzFormatter(currentCount, this.nzMaxCharacterCount);\n    this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\n  }\n\n  ngOnDestroy() {\n    this.configChange$.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTextareaCountComponent.ɵfac = function NzTextareaCountComponent_Factory(t) {\n  return new (t || NzTextareaCountComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTextareaCountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTextareaCountComponent,\n  selectors: [[\"nz-textarea-count\"]],\n  contentQueries: function NzTextareaCountComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzInputDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzInputDirective = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-input-textarea-show-count\"],\n  inputs: {\n    nzMaxCharacterCount: \"nzMaxCharacterCount\",\n    nzComputeCharacterCount: \"nzComputeCharacterCount\",\n    nzFormatter: \"nzFormatter\"\n  },\n  ngContentSelectors: _c3,\n  decls: 1,\n  vars: 0,\n  template: function NzTextareaCountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextareaCountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-textarea-count',\n      template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `,\n      host: {\n        class: 'ant-input-textarea-show-count'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzInputDirective: [{\n      type: ContentChild,\n      args: [NzInputDirective, {\n        static: true\n      }]\n    }],\n    nzMaxCharacterCount: [{\n      type: Input\n    }],\n    nzComputeCharacterCount: [{\n      type: Input\n    }],\n    nzFormatter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputModule {}\n\nNzInputModule.ɵfac = function NzInputModule_Factory(t) {\n  return new (t || NzInputModule)();\n};\n\nNzInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzInputModule\n});\nNzInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzTextareaCountComponent, NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective],\n      exports: [NzTextareaCountComponent, NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupWhitSuffixOrPrefixDirective],\n      imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule, NzTextareaCountComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-input.mjs"],"names":["__decorate","i0","Directive","Optional","Self","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","isDevMode","ContentChild","NgModule","Subject","merge","EMPTY","filter","takeUntil","startWith","switchMap","mergeMap","map","InputBoolean","isNotNil","i1","i2","BidiModule","i1$1","i4","CommonModule","i2$1","NzIconModule","i3","NzOutletModule","i1$2","PlatformModule","i2$2","NzInputDirective","constructor","ngControl","renderer","elementRef","directionality","nzBorderless","nzSize","_disabled","disabled$","dir","destroy$","addClass","nativeElement","disabled","value","ngOnInit","_a","_b","statusChanges","pipe","subscribe","next","change","direction","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","NgControl","Renderer2","ElementRef","Directionality","ɵdir","prototype","type","args","selector","exportAs","host","decorators","NzInputGroupSlotComponent","icon","template","ɵcmp","NgIf","NzIconDirective","NzStringTemplateOutletDirective","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","NzInputGroupWhitSuffixOrPrefixDirective","NzInputGroupComponent","focusMonitor","cdr","nzAddOnBeforeIcon","nzAddOnAfterIcon","nzPrefixIcon","nzSuffixIcon","nzSearch","nzCompact","isLarge","isSmall","isAffix","isAddOn","focused","updateChildrenInputSize","listOfNzInputDirective","forEach","item","monitor","focusOrigin","markForCheck","ngAfterContentInit","listOfInputChange$","list","input","some","nzSuffix","nzPrefix","nzAddOnAfter","nzAddOnBefore","stopMonitoring","FocusMonitor","ChangeDetectorRef","NgTemplateOutlet","NzAutosizeDirective","ngZone","platform","resizeService","autosize","el","maxHeight","minHeight","inputGap","nzAutosize","isAutoSizeType","data","maxRows","minRows","setMaxHeight","setMinHeight","resizeToFitContent","force","cacheTextareaLineHeight","cachedLineHeight","textarea","previousMinRows","previousValue","placeholderText","placeholder","classList","add","height","Math","round","scrollHeight","style","remove","requestAnimationFrame","runOutsideAngular","selectionStart","selectionEnd","isStopped","document","activeElement","setSelectionRange","parentNode","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","appendChild","clientHeight","removeChild","noopInputHandler","ngAfterViewInit","isBrowser","ngDoCheck","NgZone","Platform","NzResizeService","NzTextareaCountComponent","nzMaxCharacterCount","nzComputeCharacterCount","v","length","nzFormatter","c","m","configChange$","nzInputDirective","Error","valueChanges","setDataCount","inputValue","String","currentCount","dataCount","setAttribute","class","static","NzInputModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, Self, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, isDevMode, ContentChild, NgModule } from '@angular/core';\nimport { Subject, merge, EMPTY } from 'rxjs';\nimport { filter, takeUntil, startWith, switchMap, mergeMap, map } from 'rxjs/operators';\nimport { InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/forms';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i2$2 from 'ng-zorro-antd/core/services';\n\nclass NzInputDirective {\n    constructor(ngControl, renderer, elementRef, directionality) {\n        this.ngControl = ngControl;\n        this.directionality = directionality;\n        this.nzBorderless = false;\n        this.nzSize = 'default';\n        this._disabled = false;\n        this.disabled$ = new Subject();\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-input');\n    }\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value != null && `${value}` !== 'false';\n    }\n    ngOnInit() {\n        var _a, _b;\n        if (this.ngControl) {\n            (_a = this.ngControl.statusChanges) === null || _a === void 0 ? void 0 : _a.pipe(filter(() => this.ngControl.disabled !== null), takeUntil(this.destroy$)).subscribe(() => {\n                this.disabled$.next(this.ngControl.disabled);\n            });\n        }\n        this.dir = this.directionality.value;\n        (_b = this.directionality.change) === null || _b === void 0 ? void 0 : _b.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngOnChanges(changes) {\n        const { disabled } = changes;\n        if (disabled) {\n            this.disabled$.next(this.disabled);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputDirective, deps: [{ token: i1.NgControl, optional: true, self: true }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: { nzBorderless: \"nzBorderless\", nzSize: \"nzSize\", disabled: \"disabled\" }, host: { properties: { \"class.ant-input-disabled\": \"disabled\", \"class.ant-input-borderless\": \"nzBorderless\", \"class.ant-input-lg\": \"nzSize === 'large'\", \"class.ant-input-sm\": \"nzSize === 'small'\", \"attr.disabled\": \"disabled || null\", \"class.ant-input-rtl\": \"dir=== 'rtl'\" } }, exportAs: [\"nzInput\"], usesOnChanges: true, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzInputDirective.prototype, \"nzBorderless\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[nz-input],textarea[nz-input]',\n                    exportAs: 'nzInput',\n                    host: {\n                        '[class.ant-input-disabled]': 'disabled',\n                        '[class.ant-input-borderless]': 'nzBorderless',\n                        '[class.ant-input-lg]': `nzSize === 'large'`,\n                        '[class.ant-input-sm]': `nzSize === 'small'`,\n                        '[attr.disabled]': 'disabled || null',\n                        '[class.ant-input-rtl]': `dir=== 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzBorderless: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputGroupSlotComponent {\n    constructor() {\n        this.icon = null;\n        this.type = null;\n        this.template = null;\n    }\n}\nNzInputGroupSlotComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputGroupSlotComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzInputGroupSlotComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzInputGroupSlotComponent, selector: \"[nz-input-group-slot]\", inputs: { icon: \"icon\", type: \"type\", template: \"template\" }, host: { properties: { \"class.ant-input-group-addon\": \"type === 'addon'\", \"class.ant-input-prefix\": \"type === 'prefix'\", \"class.ant-input-suffix\": \"type === 'suffix'\" } }, ngImport: i0, template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputGroupSlotComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-input-group-slot]',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  `,\n                    host: {\n                        '[class.ant-input-group-addon]': `type === 'addon'`,\n                        '[class.ant-input-prefix]': `type === 'prefix'`,\n                        '[class.ant-input-suffix]': `type === 'suffix'`\n                    }\n                }]\n        }], propDecorators: { icon: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }] } });\n\nclass NzInputGroupWhitSuffixOrPrefixDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputGroupWhitSuffixOrPrefixDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzInputGroupWhitSuffixOrPrefixDirective, selector: \"nz-input-group[nzSuffix], nz-input-group[nzPrefix]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\nclass NzInputGroupComponent {\n    constructor(focusMonitor, elementRef, cdr, directionality) {\n        this.focusMonitor = focusMonitor;\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.nzAddOnBeforeIcon = null;\n        this.nzAddOnAfterIcon = null;\n        this.nzPrefixIcon = null;\n        this.nzSuffixIcon = null;\n        this.nzSize = 'default';\n        this.nzSearch = false;\n        this.nzCompact = false;\n        this.isLarge = false;\n        this.isSmall = false;\n        this.isAffix = false;\n        this.isAddOn = false;\n        this.focused = false;\n        this.disabled = false;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    updateChildrenInputSize() {\n        if (this.listOfNzInputDirective) {\n            this.listOfNzInputDirective.forEach(item => (item.nzSize = this.nzSize));\n        }\n    }\n    ngOnInit() {\n        var _a;\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            this.focused = !!focusOrigin;\n            this.cdr.markForCheck();\n        });\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngAfterContentInit() {\n        this.updateChildrenInputSize();\n        const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n        listOfInputChange$\n            .pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map((input) => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some((input) => input.disabled)), takeUntil(this.destroy$))\n            .subscribe(disabled => {\n            this.disabled = disabled;\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { nzSize, nzSuffix, nzPrefix, nzPrefixIcon, nzSuffixIcon, nzAddOnAfter, nzAddOnBefore, nzAddOnAfterIcon, nzAddOnBeforeIcon } = changes;\n        if (nzSize) {\n            this.updateChildrenInputSize();\n            this.isLarge = this.nzSize === 'large';\n            this.isSmall = this.nzSize === 'small';\n        }\n        if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n            this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n        }\n        if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n            this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzInputGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputGroupComponent, deps: [{ token: i1$1.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzInputGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzInputGroupComponent, selector: \"nz-input-group\", inputs: { nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\", nzAddOnAfterIcon: \"nzAddOnAfterIcon\", nzPrefixIcon: \"nzPrefixIcon\", nzSuffixIcon: \"nzSuffixIcon\", nzAddOnBefore: \"nzAddOnBefore\", nzAddOnAfter: \"nzAddOnAfter\", nzPrefix: \"nzPrefix\", nzSuffix: \"nzSuffix\", nzSize: \"nzSize\", nzSearch: \"nzSearch\", nzCompact: \"nzCompact\" }, host: { properties: { \"class.ant-input-group-compact\": \"nzCompact\", \"class.ant-input-search-enter-button\": \"nzSearch\", \"class.ant-input-search\": \"nzSearch\", \"class.ant-input-search-rtl\": \"dir === 'rtl'\", \"class.ant-input-search-sm\": \"nzSearch && isSmall\", \"class.ant-input-search-large\": \"nzSearch && isLarge\", \"class.ant-input-group-wrapper\": \"isAddOn\", \"class.ant-input-group-wrapper-rtl\": \"dir === 'rtl'\", \"class.ant-input-group-wrapper-lg\": \"isAddOn && isLarge\", \"class.ant-input-group-wrapper-sm\": \"isAddOn && isSmall\", \"class.ant-input-affix-wrapper\": \"isAffix && !isAddOn\", \"class.ant-input-affix-wrapper-rtl\": \"dir === 'rtl'\", \"class.ant-input-affix-wrapper-focused\": \"isAffix && focused\", \"class.ant-input-affix-wrapper-disabled\": \"isAffix && disabled\", \"class.ant-input-affix-wrapper-lg\": \"isAffix && !isAddOn && isLarge\", \"class.ant-input-affix-wrapper-sm\": \"isAffix && !isAddOn && isSmall\", \"class.ant-input-group\": \"!isAffix && !isAddOn\", \"class.ant-input-group-rtl\": \"dir === 'rtl'\", \"class.ant-input-group-lg\": \"!isAffix && !isAddOn && isLarge\", \"class.ant-input-group-sm\": \"!isAffix && !isAddOn && isSmall\" } }, queries: [{ propertyName: \"listOfNzInputDirective\", predicate: NzInputDirective }], exportAs: [\"nzInputGroup\"], usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      ></span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `, isInline: true, components: [{ type: NzInputGroupSlotComponent, selector: \"[nz-input-group-slot]\", inputs: [\"icon\", \"type\", \"template\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n__decorate([\n    InputBoolean()\n], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-input-group',\n                    exportAs: 'nzInputGroup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      ></span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n                    host: {\n                        '[class.ant-input-group-compact]': `nzCompact`,\n                        '[class.ant-input-search-enter-button]': `nzSearch`,\n                        '[class.ant-input-search]': `nzSearch`,\n                        '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n                        '[class.ant-input-search-large]': `nzSearch && isLarge`,\n                        '[class.ant-input-group-wrapper]': `isAddOn`,\n                        '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n                        '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n                        '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n                        '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n                        '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n                        '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n                        '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n                        '[class.ant-input-group]': `!isAffix && !isAddOn`,\n                        '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n                        '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { listOfNzInputDirective: [{\n                type: ContentChildren,\n                args: [NzInputDirective]\n            }], nzAddOnBeforeIcon: [{\n                type: Input\n            }], nzAddOnAfterIcon: [{\n                type: Input\n            }], nzPrefixIcon: [{\n                type: Input\n            }], nzSuffixIcon: [{\n                type: Input\n            }], nzAddOnBefore: [{\n                type: Input\n            }], nzAddOnAfter: [{\n                type: Input\n            }], nzPrefix: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzSearch: [{\n                type: Input\n            }], nzCompact: [{\n                type: Input\n            }] } });\n\nclass NzAutosizeDirective {\n    constructor(elementRef, ngZone, platform, resizeService) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.platform = platform;\n        this.resizeService = resizeService;\n        this.autosize = false;\n        this.el = this.elementRef.nativeElement;\n        this.maxHeight = null;\n        this.minHeight = null;\n        this.destroy$ = new Subject();\n        this.inputGap = 10;\n    }\n    set nzAutosize(value) {\n        const isAutoSizeType = (data) => typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n        if (typeof value === 'string' || value === true) {\n            this.autosize = true;\n        }\n        else if (isAutoSizeType(value)) {\n            this.autosize = true;\n            this.minRows = value.minRows;\n            this.maxRows = value.maxRows;\n            this.maxHeight = this.setMaxHeight();\n            this.minHeight = this.setMinHeight();\n        }\n    }\n    resizeToFitContent(force = false) {\n        this.cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this.cachedLineHeight) {\n            return;\n        }\n        const textarea = this.el;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('nz-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight +\n            this.inputGap;\n        if (this.maxHeight !== null && height > this.maxHeight) {\n            height = this.maxHeight;\n        }\n        if (this.minHeight !== null && height < this.minHeight) {\n            height = this.minHeight;\n        }\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('nz-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n        // We need to re-set the selection in order for it to scroll to the proper position.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this.ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n                const { selectionStart, selectionEnd } = textarea;\n                // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n                // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n                // between the time we requested the animation frame and when it was executed.\n                // Also note that we have to assert that the textarea is focused before we set the\n                // selection range. Setting the selection range on a non-focused textarea will cause\n                // it to receive focus on IE and Edge.\n                if (!this.destroy$.isStopped && document.activeElement === textarea) {\n                    textarea.setSelectionRange(selectionStart, selectionEnd);\n                }\n            }));\n        }\n        this.previousValue = value;\n        this.previousMinRows = this.minRows;\n    }\n    cacheTextareaLineHeight() {\n        if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        const textareaClone = this.el.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this.el.parentNode.appendChild(textareaClone);\n        this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n        this.el.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this.maxHeight = this.setMaxHeight();\n        this.minHeight = this.setMinHeight();\n    }\n    setMinHeight() {\n        const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n        if (minHeight !== null) {\n            this.el.style.minHeight = `${minHeight}px`;\n        }\n        return minHeight;\n    }\n    setMaxHeight() {\n        const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n        if (maxHeight !== null) {\n            this.el.style.maxHeight = `${maxHeight}px`;\n        }\n        return maxHeight;\n    }\n    noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    ngAfterViewInit() {\n        if (this.autosize && this.platform.isBrowser) {\n            this.resizeToFitContent();\n            this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.resizeToFitContent(true));\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    ngDoCheck() {\n        if (this.autosize && this.platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n}\nNzAutosizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutosizeDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$2.Platform }, { token: i2$2.NzResizeService }], target: i0.ɵɵFactoryTarget.Directive });\nNzAutosizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: { nzAutosize: \"nzAutosize\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"noopInputHandler()\" } }, exportAs: [\"nzAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutosizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[nzAutosize]',\n                    exportAs: 'nzAutosize',\n                    host: {\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        rows: '1',\n                        '(input)': 'noopInputHandler()'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$2.Platform }, { type: i2$2.NzResizeService }]; }, propDecorators: { nzAutosize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextareaCountComponent {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nzMaxCharacterCount = 0;\n        this.nzComputeCharacterCount = v => v.length;\n        this.nzFormatter = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\n        this.configChange$ = new Subject();\n        this.destroy$ = new Subject();\n    }\n    ngAfterContentInit() {\n        if (!this.nzInputDirective && isDevMode()) {\n            throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\n        }\n        if (this.nzInputDirective.ngControl) {\n            const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\n            merge(valueChanges, this.configChange$)\n                .pipe(takeUntil(this.destroy$), map(() => this.nzInputDirective.ngControl.value), startWith(this.nzInputDirective.ngControl.value))\n                .subscribe(value => {\n                this.setDataCount(value);\n            });\n        }\n    }\n    setDataCount(value) {\n        const inputValue = isNotNil(value) ? String(value) : '';\n        const currentCount = this.nzComputeCharacterCount(inputValue);\n        const dataCount = this.nzFormatter(currentCount, this.nzMaxCharacterCount);\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\n    }\n    ngOnDestroy() {\n        this.configChange$.complete();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTextareaCountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTextareaCountComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNzTextareaCountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTextareaCountComponent, selector: \"nz-textarea-count\", inputs: { nzMaxCharacterCount: \"nzMaxCharacterCount\", nzComputeCharacterCount: \"nzComputeCharacterCount\", nzFormatter: \"nzFormatter\" }, host: { classAttribute: \"ant-input-textarea-show-count\" }, queries: [{ propertyName: \"nzInputDirective\", first: true, predicate: NzInputDirective, descendants: true, static: true }], ngImport: i0, template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTextareaCountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-textarea-count',\n                    template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `,\n                    host: {\n                        class: 'ant-input-textarea-show-count'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzInputDirective: [{\n                type: ContentChild,\n                args: [NzInputDirective, { static: true }]\n            }], nzMaxCharacterCount: [{\n                type: Input\n            }], nzComputeCharacterCount: [{\n                type: Input\n            }], nzFormatter: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputModule {\n}\nNzInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputModule, declarations: [NzTextareaCountComponent,\n        NzInputDirective,\n        NzInputGroupComponent,\n        NzAutosizeDirective,\n        NzInputGroupSlotComponent,\n        NzInputGroupWhitSuffixOrPrefixDirective], imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule], exports: [NzTextareaCountComponent,\n        NzInputDirective,\n        NzInputGroupComponent,\n        NzAutosizeDirective,\n        NzInputGroupWhitSuffixOrPrefixDirective] });\nNzInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputModule, imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzTextareaCountComponent,\n                        NzInputDirective,\n                        NzInputGroupComponent,\n                        NzAutosizeDirective,\n                        NzInputGroupSlotComponent,\n                        NzInputGroupWhitSuffixOrPrefixDirective\n                    ],\n                    exports: [\n                        NzTextareaCountComponent,\n                        NzInputDirective,\n                        NzInputGroupComponent,\n                        NzAutosizeDirective,\n                        NzInputGroupWhitSuffixOrPrefixDirective\n                    ],\n                    imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule, NzTextareaCountComponent };\n"]},"metadata":{},"sourceType":"module"}