{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, forwardRef, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"inputElement\"];\nconst _c2 = [\"nz-checkbox\", \"\"];\n\nfunction NzCheckboxGroupComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 1);\n    i0.ɵɵlistener(\"nzCheckedChange\", function NzCheckboxGroupComponent_label_0_Template_label_nzCheckedChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const o_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onCheckedChange(o_r1, $event);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const o_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzDisabled\", o_r1.disabled || ctx_r0.nzDisabled)(\"nzChecked\", o_r1.checked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(o_r1.label);\n  }\n}\n\nclass NzCheckboxWrapperComponent {\n  constructor(renderer, elementRef) {\n    this.nzOnChange = new EventEmitter();\n    this.checkboxList = [];\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n\n  addCheckbox(value) {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value) {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  onChange() {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n\n}\n\nNzCheckboxWrapperComponent.ɵfac = function NzCheckboxWrapperComponent_Factory(t) {\n  return new (t || NzCheckboxWrapperComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzCheckboxWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCheckboxWrapperComponent,\n  selectors: [[\"nz-checkbox-wrapper\"]],\n  outputs: {\n    nzOnChange: \"nzOnChange\"\n  },\n  exportAs: [\"nzCheckboxWrapper\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzCheckboxWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-wrapper',\n      exportAs: 'nzCheckboxWrapper',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: ` <ng-content></ng-content> `\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzOnChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NzCheckboxComponent {\n  constructor(ngZone, elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.nzCheckedChange = new EventEmitter();\n    this.nzValue = null;\n    this.nzAutoFocus = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzChecked = false;\n    this.nzId = null;\n  }\n\n  innerCheckedChange(checked) {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n\n  writeValue(value) {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus() {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur() {\n    this.inputElement.nativeElement.blur();\n  }\n\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.elementRef.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        event.preventDefault();\n        this.focus();\n\n        if (this.nzDisabled) {\n          return;\n        }\n\n        this.ngZone.run(() => {\n          this.innerCheckedChange(!this.nzChecked);\n          this.cdr.markForCheck();\n        });\n      });\n      fromEvent(this.inputElement.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => event.stopPropagation());\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzCheckboxComponent.ɵfac = function NzCheckboxComponent_Factory(t) {\n  return new (t || NzCheckboxComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzCheckboxWrapperComponent, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\n\nNzCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCheckboxComponent,\n  selectors: [[\"\", \"nz-checkbox\", \"\"]],\n  viewQuery: function NzCheckboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-checkbox-wrapper\"],\n  hostVars: 4,\n  hostBindings: function NzCheckboxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-checkbox-wrapper-checked\", ctx.nzChecked)(\"ant-checkbox-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzValue: \"nzValue\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzChecked: \"nzChecked\",\n    nzId: \"nzId\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  exportAs: [\"nzCheckbox\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzCheckboxComponent),\n    multi: true\n  }])],\n  attrs: _c2,\n  ngContentSelectors: _c0,\n  decls: 6,\n  vars: 11,\n  consts: [[1, \"ant-checkbox\"], [\"type\", \"checkbox\", 1, \"ant-checkbox-input\", 3, \"checked\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"inputElement\", \"\"], [1, \"ant-checkbox-inner\"]],\n  template: function NzCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵelementStart(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"ngModelChange\", function NzCheckboxComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.innerCheckedChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"span\");\n      i0.ɵɵprojection(5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-checkbox-checked\", ctx.nzChecked && !ctx.nzIndeterminate)(\"ant-checkbox-disabled\", ctx.nzDisabled)(\"ant-checkbox-indeterminate\", ctx.nzIndeterminate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"ngModel\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled);\n      i0.ɵɵattribute(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"id\", ctx.nzId);\n    }\n  },\n  directives: [i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-checkbox]',\n      exportAs: 'nzCheckbox',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-checkbox-wrapper',\n        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n        '[class.ant-checkbox-rtl]': `dir === 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NzCheckboxWrapperComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.FocusMonitor\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    inputElement: [{\n      type: ViewChild,\n      args: ['inputElement', {\n        static: true\n      }]\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzId: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzCheckboxGroupComponent {\n  constructor(elementRef, focusMonitor, cdr, directionality) {\n    this.elementRef = elementRef;\n    this.focusMonitor = focusMonitor;\n    this.cdr = cdr;\n    this.directionality = directionality;\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.options = [];\n    this.nzDisabled = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  trackByOption(_, option) {\n    return option.value;\n  }\n\n  onCheckedChange(option, checked) {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value) {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzCheckboxGroupComponent.ɵfac = function NzCheckboxGroupComponent_Factory(t) {\n  return new (t || NzCheckboxGroupComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\n\nNzCheckboxGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCheckboxGroupComponent,\n  selectors: [[\"nz-checkbox-group\"]],\n  hostAttrs: [1, \"ant-checkbox-group\"],\n  hostVars: 2,\n  hostBindings: function NzCheckboxGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-checkbox-group-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\"\n  },\n  exportAs: [\"nzCheckboxGroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzCheckboxGroupComponent),\n    multi: true\n  }])],\n  decls: 1,\n  vars: 2,\n  consts: [[\"nz-checkbox\", \"\", \"class\", \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"nz-checkbox\", \"\", 1, \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\"]],\n  template: function NzCheckboxGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzCheckboxGroupComponent_label_0_Template, 3, 3, \"label\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.options)(\"ngForTrackBy\", ctx.trackByOption);\n    }\n  },\n  directives: [NzCheckboxComponent, i4$1.NgForOf],\n  encapsulation: 2\n});\n\n__decorate([InputBoolean()], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-group',\n      exportAs: 'nzCheckboxGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxGroupComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-checkbox-group',\n        '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i2.FocusMonitor\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzDisabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzCheckboxModule {}\n\nNzCheckboxModule.ɵfac = function NzCheckboxModule_Factory(t) {\n  return new (t || NzCheckboxModule)();\n};\n\nNzCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzCheckboxModule\n});\nNzCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, FormsModule, A11yModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n      declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n      exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-checkbox.mjs"],"names":["__decorate","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Output","forwardRef","Optional","ViewChild","Input","NgModule","i4","NG_VALUE_ACCESSOR","FormsModule","Subject","fromEvent","takeUntil","InputBoolean","i2","A11yModule","i3","BidiModule","i4$1","CommonModule","NzCheckboxWrapperComponent","constructor","renderer","elementRef","nzOnChange","checkboxList","addClass","nativeElement","addCheckbox","value","push","removeCheckbox","splice","indexOf","onChange","listOfCheckedValue","filter","item","nzChecked","map","nzValue","emit","ɵfac","Renderer2","ElementRef","ɵcmp","type","args","selector","exportAs","preserveWhitespaces","changeDetection","OnPush","encapsulation","None","template","NzCheckboxComponent","ngZone","nzCheckboxWrapperComponent","cdr","focusMonitor","directionality","dir","destroy$","onTouched","nzCheckedChange","nzAutoFocus","nzDisabled","nzIndeterminate","nzId","innerCheckedChange","checked","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","focus","focusVia","inputElement","blur","ngOnInit","monitor","pipe","subscribe","focusOrigin","Promise","resolve","then","change","direction","detectChanges","runOutsideAngular","event","preventDefault","run","stopPropagation","ngAfterViewInit","ngOnDestroy","stopMonitoring","next","complete","NgZone","ChangeDetectorRef","FocusMonitor","Directionality","provide","useExisting","multi","CheckboxControlValueAccessor","NgControlStatus","NgModel","prototype","providers","host","class","decorators","static","NzCheckboxGroupComponent","options","trackByOption","_","option","onCheckedChange","_a","NgForOf","NzCheckboxModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, forwardRef, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxWrapperComponent {\n    constructor(renderer, elementRef) {\n        this.nzOnChange = new EventEmitter();\n        this.checkboxList = [];\n        renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n    }\n    addCheckbox(value) {\n        this.checkboxList.push(value);\n    }\n    removeCheckbox(value) {\n        this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n    }\n    onChange() {\n        const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n        this.nzOnChange.emit(listOfCheckedValue);\n    }\n}\nNzCheckboxWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxWrapperComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNzCheckboxWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCheckboxWrapperComponent, selector: \"nz-checkbox-wrapper\", outputs: { nzOnChange: \"nzOnChange\" }, exportAs: [\"nzCheckboxWrapper\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxWrapperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-checkbox-wrapper',\n                    exportAs: 'nzCheckboxWrapper',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: ` <ng-content></ng-content> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzOnChange: [{\n                type: Output\n            }] } });\n\nclass NzCheckboxComponent {\n    constructor(ngZone, elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzCheckedChange = new EventEmitter();\n        this.nzValue = null;\n        this.nzAutoFocus = false;\n        this.nzDisabled = false;\n        this.nzIndeterminate = false;\n        this.nzChecked = false;\n        this.nzId = null;\n    }\n    innerCheckedChange(checked) {\n        if (!this.nzDisabled) {\n            this.nzChecked = checked;\n            this.onChange(this.nzChecked);\n            this.nzCheckedChange.emit(this.nzChecked);\n            if (this.nzCheckboxWrapperComponent) {\n                this.nzCheckboxWrapperComponent.onChange();\n            }\n        }\n    }\n    writeValue(value) {\n        this.nzChecked = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    ngOnInit() {\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.addCheckbox(this);\n        }\n        this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.elementRef.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                event.preventDefault();\n                this.focus();\n                if (this.nzDisabled) {\n                    return;\n                }\n                this.ngZone.run(() => {\n                    this.innerCheckedChange(!this.nzChecked);\n                    this.cdr.markForCheck();\n                });\n            });\n            fromEvent(this.inputElement.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => event.stopPropagation());\n        });\n    }\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.removeCheckbox(this);\n        }\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: NzCheckboxWrapperComponent, optional: true }, { token: i0.ChangeDetectorRef }, { token: i2.FocusMonitor }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: { nzValue: \"nzValue\", nzAutoFocus: \"nzAutoFocus\", nzDisabled: \"nzDisabled\", nzIndeterminate: \"nzIndeterminate\", nzChecked: \"nzChecked\", nzId: \"nzId\" }, outputs: { nzCheckedChange: \"nzCheckedChange\" }, host: { properties: { \"class.ant-checkbox-wrapper-checked\": \"nzChecked\", \"class.ant-checkbox-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-checkbox-wrapper\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzCheckboxComponent),\n            multi: true\n        }\n    ], viewQueries: [{ propertyName: \"inputElement\", first: true, predicate: [\"inputElement\"], descendants: true, static: true }], exportAs: [\"nzCheckbox\"], ngImport: i0, template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `, isInline: true, directives: [{ type: i4.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-checkbox]',\n                    exportAs: 'nzCheckbox',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCheckboxComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-checkbox-wrapper',\n                        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n                        '[class.ant-checkbox-rtl]': `dir === 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: NzCheckboxWrapperComponent, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i2.FocusMonitor }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { inputElement: [{\n                type: ViewChild,\n                args: ['inputElement', { static: true }]\n            }], nzCheckedChange: [{\n                type: Output\n            }], nzValue: [{\n                type: Input\n            }], nzAutoFocus: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzIndeterminate: [{\n                type: Input\n            }], nzChecked: [{\n                type: Input\n            }], nzId: [{\n                type: Input\n            }] } });\n\nclass NzCheckboxGroupComponent {\n    constructor(elementRef, focusMonitor, cdr, directionality) {\n        this.elementRef = elementRef;\n        this.focusMonitor = focusMonitor;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.options = [];\n        this.nzDisabled = false;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    trackByOption(_, option) {\n        return option.value;\n    }\n    onCheckedChange(option, checked) {\n        option.checked = checked;\n        this.onChange(this.options);\n    }\n    ngOnInit() {\n        var _a;\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(value) {\n        this.options = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n}\nNzCheckboxGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxGroupComponent, deps: [{ token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzCheckboxGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCheckboxGroupComponent, selector: \"nz-checkbox-group\", inputs: { nzDisabled: \"nzDisabled\" }, host: { properties: { \"class.ant-checkbox-group-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-checkbox-group\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzCheckboxGroupComponent),\n            multi: true\n        }\n    ], exportAs: [\"nzCheckboxGroup\"], ngImport: i0, template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `, isInline: true, components: [{ type: NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: [\"nzValue\", \"nzAutoFocus\", \"nzDisabled\", \"nzIndeterminate\", \"nzChecked\", \"nzId\"], outputs: [\"nzCheckedChange\"], exportAs: [\"nzCheckbox\"] }], directives: [{ type: i4$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-checkbox-group',\n                    exportAs: 'nzCheckboxGroup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-checkbox-group',\n                        '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzDisabled: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxModule {\n}\nNzCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxModule, declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent], imports: [BidiModule, CommonModule, FormsModule, A11yModule], exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent] });\nNzCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxModule, imports: [[BidiModule, CommonModule, FormsModule, A11yModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n                    declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n                    exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };\n"]},"metadata":{},"sourceType":"module"}