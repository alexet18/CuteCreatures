{"ast":null,"code":"import * as i5$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport * as i2$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i8 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Inject, Optional, NgModule } from '@angular/core';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i3 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport * as i4 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { __decorate } from 'tslib';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i4$1 from 'ng-zorro-antd/core/services';\n\nfunction NzTextCopyComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const icon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", icon_r1);\n  }\n}\n\nconst _c0 = [\"textarea\"];\n\nfunction NzTextEditComponent_button_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const icon_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", icon_r3);\n  }\n}\n\nfunction NzTextEditComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function NzTextEditComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onClick();\n    });\n    i0.ɵɵtemplate(1, NzTextEditComponent_button_0_ng_container_1_Template, 2, 1, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzTooltipTitle\", ctx_r0.tooltip === null ? null : ctx_r0.tooltip || (ctx_r0.locale == null ? null : ctx_r0.locale.edit));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.icon);\n  }\n}\n\nfunction NzTextEditComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"textarea\", 5, 6);\n    i0.ɵɵlistener(\"input\", function NzTextEditComponent_ng_container_1_Template_textarea_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onInput($event);\n    })(\"blur\", function NzTextEditComponent_ng_container_1_Template_textarea_blur_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.confirm();\n    })(\"keydown.esc\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_esc_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onCancel();\n    })(\"keydown.enter\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onEnter($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NzTextEditComponent_ng_container_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.confirm();\n    });\n    i0.ɵɵelement(4, \"i\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c1 = [\"ellipsisContainer\"];\nconst _c2 = [\"expandable\"];\nconst _c3 = [\"contentTemplate\"];\n\nfunction NzTypographyComponent_ng_template_0_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!content\"]);\n  }\n}\n\nfunction NzTypographyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_ng_content_0_Template, 1, 0, \"ng-content\", 1);\n    i0.ɵɵtext(1);\n  }\n\n  if (rf & 2) {\n    const content_r5 = ctx.content;\n    i0.ɵɵproperty(\"ngIf\", !content_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", content_r5, \" \");\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.nzSuffix);\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    content: a0\n  };\n};\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c4, ctx_r7.nzContent));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.nzSuffix);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.ellipsisStr);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.nzSuffix);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 9, 10);\n    i0.ɵɵlistener(\"click\", function NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return ctx_r17.onExpand();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.locale == null ? null : ctx_r15.locale.expand, \" \");\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", null, 7);\n    i0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵtemplate(3, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵtemplate(4, NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template, 3, 1, \"a\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.isEllipsis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.nzSuffix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.nzExpandable && ctx_r9.isEllipsis);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_Template, 3, 5, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_Template, 5, 3, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(3);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.expanded || !ctx_r2.hasOperationsWithEllipsis && ctx_r2.nzEllipsisRows === 1 && !ctx_r2.hasEllipsisObservers || ctx_r2.canCssEllipsis || ctx_r2.nzSuffix && ctx_r2.expanded)(\"ngIfElse\", _r8);\n  }\n}\n\nfunction NzTypographyComponent_nz_text_edit_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-text-edit\", 11);\n    i0.ɵɵlistener(\"endEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onEndEditing($event);\n    })(\"startEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onStartEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r3.nzContent)(\"icon\", ctx_r3.nzEditIcon)(\"tooltip\", ctx_r3.nzEditTooltip);\n  }\n}\n\nfunction NzTypographyComponent_nz_text_copy_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-text-copy\", 12);\n    i0.ɵɵlistener(\"textCopy\", function NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.onTextCopy($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r4.copyText)(\"tooltips\", ctx_r4.nzCopyTooltips)(\"icons\", ctx_r4.nzCopyIcons);\n  }\n}\n\nconst _c5 = [\"*\"];\n\nclass NzTextCopyComponent {\n  constructor(host, cdr, clipboard, i18n) {\n    this.host = host;\n    this.cdr = cdr;\n    this.clipboard = clipboard;\n    this.i18n = i18n;\n    this.copied = false;\n    this.copyId = -1;\n    this.nativeElement = this.host.nativeElement;\n    this.copyTooltip = null;\n    this.copedTooltip = null;\n    this.copyIcon = 'copy';\n    this.copedIcon = 'check';\n    this.destroy$ = new Subject();\n    this.icons = ['copy', 'check'];\n    this.textCopy = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.updateTooltips();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      tooltips,\n      icons\n    } = changes;\n\n    if (tooltips) {\n      this.updateTooltips();\n    }\n\n    if (icons) {\n      this.updateIcons();\n    }\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.copyId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onClick() {\n    if (this.copied) {\n      return;\n    }\n\n    this.copied = true;\n    this.cdr.detectChanges();\n    const text = this.text;\n    this.textCopy.emit(text);\n    this.clipboard.copy(text);\n    this.onCopied();\n  }\n\n  onCopied() {\n    clearTimeout(this.copyId);\n    this.copyId = setTimeout(() => {\n      this.copied = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n\n  updateTooltips() {\n    var _a, _b, _c, _d;\n\n    if (this.tooltips === null) {\n      this.copedTooltip = null;\n      this.copyTooltip = null;\n    } else if (Array.isArray(this.tooltips)) {\n      const [copyTooltip, copedTooltip] = this.tooltips;\n      this.copyTooltip = copyTooltip || ((_a = this.locale) === null || _a === void 0 ? void 0 : _a.copy);\n      this.copedTooltip = copedTooltip || ((_b = this.locale) === null || _b === void 0 ? void 0 : _b.copied);\n    } else {\n      this.copyTooltip = (_c = this.locale) === null || _c === void 0 ? void 0 : _c.copy;\n      this.copedTooltip = (_d = this.locale) === null || _d === void 0 ? void 0 : _d.copied;\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  updateIcons() {\n    const [copyIcon, copedIcon] = this.icons;\n    this.copyIcon = copyIcon;\n    this.copedIcon = copedIcon;\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzTextCopyComponent.ɵfac = function NzTextCopyComponent_Factory(t) {\n  return new (t || NzTextCopyComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Clipboard), i0.ɵɵdirectiveInject(i2.NzI18nService));\n};\n\nNzTextCopyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTextCopyComponent,\n  selectors: [[\"nz-text-copy\"]],\n  inputs: {\n    text: \"text\",\n    tooltips: \"tooltips\",\n    icons: \"icons\"\n  },\n  outputs: {\n    textCopy: \"textCopy\"\n  },\n  exportAs: [\"nzTextCopy\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[\"type\", \"button\", \"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-copy\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzTextCopyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function NzTextCopyComponent_Template_button_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵtemplate(1, NzTextCopyComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-typography-copy-success\", ctx.copied);\n      i0.ɵɵproperty(\"nzTooltipTitle\", ctx.copied ? ctx.copedTooltip : ctx.copyTooltip);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.copied ? ctx.copedIcon : ctx.copyIcon);\n    }\n  },\n  directives: [i3.NzTransButtonDirective, i4.NzTooltipDirective, i5.NzStringTemplateOutletDirective, i6.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextCopyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-copy',\n      exportAs: 'nzTextCopy',\n      template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Clipboard\n    }, {\n      type: i2.NzI18nService\n    }];\n  }, {\n    text: [{\n      type: Input\n    }],\n    tooltips: [{\n      type: Input\n    }],\n    icons: [{\n      type: Input\n    }],\n    textCopy: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTextEditComponent {\n  constructor(zone, host, cdr, i18n) {\n    this.zone = zone;\n    this.host = host;\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.editing = false;\n    this.destroy$ = new Subject();\n    this.icon = 'edit';\n    this.startEditing = new EventEmitter();\n    this.endEditing = new EventEmitter(true);\n    this.nativeElement = this.host.nativeElement;\n  }\n\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onClick() {\n    this.beforeText = this.text;\n    this.currentText = this.beforeText;\n    this.editing = true;\n    this.startEditing.emit();\n    this.focusAndSetValue();\n  }\n\n  confirm() {\n    this.editing = false;\n    this.endEditing.emit(this.currentText);\n  }\n\n  onInput(event) {\n    const target = event.target;\n    this.currentText = target.value;\n  }\n\n  onEnter(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.confirm();\n  }\n\n  onCancel() {\n    this.currentText = this.beforeText;\n    this.confirm();\n  }\n\n  focusAndSetValue() {\n    this.zone.onStable.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n      var _a;\n\n      if ((_a = this.textarea) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n        this.textarea.nativeElement.focus();\n        this.textarea.nativeElement.value = this.currentText || '';\n        this.autosizeDirective.resizeToFitContent();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n}\n\nNzTextEditComponent.ɵfac = function NzTextEditComponent_Factory(t) {\n  return new (t || NzTextEditComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NzI18nService));\n};\n\nNzTextEditComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTextEditComponent,\n  selectors: [[\"nz-text-edit\"]],\n  viewQuery: function NzTextEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(NzAutosizeDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autosizeDirective = _t.first);\n    }\n  },\n  inputs: {\n    text: \"text\",\n    icon: \"icon\",\n    tooltip: \"tooltip\"\n  },\n  outputs: {\n    startEditing: \"startEditing\",\n    endEditing: \"endEditing\"\n  },\n  exportAs: [\"nzTextEdit\"],\n  decls: 2,\n  vars: 2,\n  consts: [[\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", \"class\", \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-input\", \"\", \"nzAutosize\", \"\", 3, \"input\", \"blur\", \"keydown.esc\", \"keydown.enter\"], [\"textarea\", \"\"], [\"nz-trans-button\", \"\", 1, \"ant-typography-edit-content-confirm\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"enter\"]],\n  template: function NzTextEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTextEditComponent_button_0_Template, 2, 2, \"button\", 0);\n      i0.ɵɵtemplate(1, NzTextEditComponent_ng_container_1_Template, 5, 0, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editing);\n    }\n  },\n  directives: [i8.NgIf, i3.NzTransButtonDirective, i4.NzTooltipDirective, i5.NzStringTemplateOutletDirective, i6.NzIconDirective, i7.NzInputDirective, i7.NzAutosizeDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-edit',\n      exportAs: 'nzTextEdit',\n      template: `\n    <button\n      *ngIf=\"!editing\"\n      nz-tooltip\n      nz-trans-button\n      class=\"ant-typography-edit\"\n      [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      ></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.NzI18nService\n    }];\n  }, {\n    text: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    startEditing: [{\n      type: Output\n    }],\n    endEditing: [{\n      type: Output\n    }],\n    textarea: [{\n      type: ViewChild,\n      args: ['textarea', {\n        static: false\n      }]\n    }],\n    autosizeDirective: [{\n      type: ViewChild,\n      args: [NzAutosizeDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\n\nclass NzTypographyComponent {\n  constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n    this.nzConfigService = nzConfigService;\n    this.host = host;\n    this.cdr = cdr;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.platform = platform;\n    this.i18n = i18n;\n    this.resizeService = resizeService;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzCopyable = false;\n    this.nzEditable = false;\n    this.nzDisabled = false;\n    this.nzExpandable = false;\n    this.nzEllipsis = false;\n    this.nzCopyTooltips = undefined;\n    this.nzCopyIcons = ['copy', 'check'];\n    this.nzEditTooltip = undefined;\n    this.nzEditIcon = 'edit';\n    this.nzEllipsisRows = 1;\n    this.nzContentChange = new EventEmitter();\n    this.nzCopy = new EventEmitter();\n    this.nzExpandChange = new EventEmitter(); // This is not a two-way binding output with {@link nzEllipsis}\n\n    this.nzOnEllipsis = new EventEmitter();\n    this.expandableBtnElementCache = null;\n    this.editing = false;\n    this.cssEllipsis = false;\n    this.isEllipsis = true;\n    this.expanded = false;\n    this.ellipsisStr = '...';\n    this.dir = 'ltr';\n    this.viewInit = false;\n    this.rfaId = -1;\n    this.destroy$ = new Subject();\n    this.windowResizeSubscription = Subscription.EMPTY;\n    this.document = document;\n  }\n\n  get hasEllipsisObservers() {\n    return this.nzOnEllipsis.observers.length > 0;\n  }\n\n  get canCssEllipsis() {\n    return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n  }\n\n  get hasOperationsWithEllipsis() {\n    return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n  }\n\n  get copyText() {\n    return typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent;\n  }\n\n  onTextCopy(text) {\n    this.nzCopy.emit(text);\n  }\n\n  onStartEditing() {\n    this.editing = true;\n  }\n\n  onEndEditing(text) {\n    this.editing = false;\n    this.nzContentChange.emit(text);\n\n    if (this.nzContent === text) {\n      this.renderOnNextFrame();\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  onExpand() {\n    this.isEllipsis = false;\n    this.expanded = true;\n    this.nzExpandChange.emit();\n    this.nzOnEllipsis.emit(false);\n  }\n\n  canUseCSSEllipsis() {\n    if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n      return false;\n    } // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n\n\n    if (this.hasEllipsisObservers) {\n      return false;\n    }\n\n    if (this.nzEllipsisRows === 1) {\n      return isStyleSupport('textOverflow');\n    } else {\n      return isStyleSupport('webkitLineClamp');\n    }\n  }\n\n  renderOnNextFrame() {\n    cancelRequestAnimationFrame(this.rfaId);\n\n    if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n      return;\n    }\n\n    this.rfaId = reqAnimFrame(() => {\n      this.syncEllipsis();\n    });\n  }\n\n  getOriginContentViewRef() {\n    const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n      content: this.nzContent\n    });\n    viewRef.detectChanges();\n    return {\n      viewRef,\n      removeView: () => {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n      }\n    };\n  }\n\n  syncEllipsis() {\n    if (this.cssEllipsis) {\n      return;\n    }\n\n    const {\n      viewRef,\n      removeView\n    } = this.getOriginContentViewRef();\n    const fixedNodes = [this.textCopyRef, this.textEditRef].filter(e => e && e.nativeElement).map(e => e.nativeElement);\n    const expandableBtnElement = this.getExpandableBtnElement();\n\n    if (expandableBtnElement) {\n      fixedNodes.push(expandableBtnElement);\n    }\n\n    const {\n      contentNodes,\n      text,\n      ellipsis\n    } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n    removeView();\n    this.ellipsisText = text;\n\n    if (ellipsis !== this.isEllipsis) {\n      this.isEllipsis = ellipsis;\n      this.nzOnEllipsis.emit(ellipsis);\n    }\n\n    const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n\n    while (ellipsisContainerNativeElement.firstChild) {\n      this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n    }\n\n    contentNodes.forEach(n => {\n      this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n    });\n    this.cdr.markForCheck();\n  } // Need to create the element for calculation size before view init\n\n\n  getExpandableBtnElement() {\n    if (this.nzExpandable) {\n      const expandText = this.locale ? this.locale.expand : '';\n      const cache = this.expandableBtnElementCache;\n\n      if (!cache || cache.innerText === expandText) {\n        const el = this.document.createElement('a');\n        el.className = EXPAND_ELEMENT_CLASSNAME;\n        el.innerText = expandText;\n        this.expandableBtnElementCache = el;\n      }\n\n      return this.expandableBtnElementCache;\n    } else {\n      this.expandableBtnElementCache = null;\n      return null;\n    }\n  }\n\n  renderAndSubscribeWindowResize() {\n    if (this.platform.isBrowser) {\n      this.windowResizeSubscription.unsubscribe();\n      this.cssEllipsis = this.canUseCSSEllipsis();\n      this.renderOnNextFrame();\n      this.windowResizeSubscription = this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(() => this.renderOnNextFrame());\n    }\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterViewInit() {\n    this.viewInit = true;\n    this.renderAndSubscribeWindowResize();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzCopyable,\n      nzEditable,\n      nzExpandable,\n      nzEllipsis,\n      nzContent,\n      nzEllipsisRows,\n      nzSuffix\n    } = changes;\n\n    if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n      if (this.nzEllipsis) {\n        if (this.expanded) {\n          this.windowResizeSubscription.unsubscribe();\n        } else {\n          this.renderAndSubscribeWindowResize();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.expandableBtnElementCache = null;\n    this.windowResizeSubscription.unsubscribe();\n  }\n\n}\n\nNzTypographyComponent.ɵfac = function NzTypographyComponent_Factory(t) {\n  return new (t || NzTypographyComponent)(i0.ɵɵdirectiveInject(i1$1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2$1.Platform), i0.ɵɵdirectiveInject(i2.NzI18nService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i4$1.NzResizeService), i0.ɵɵdirectiveInject(i5$1.Directionality, 8));\n};\n\nNzTypographyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTypographyComponent,\n  selectors: [[\"nz-typography\"], [\"\", \"nz-typography\", \"\"], [\"p\", \"nz-paragraph\", \"\"], [\"span\", \"nz-text\", \"\"], [\"h1\", \"nz-title\", \"\"], [\"h2\", \"nz-title\", \"\"], [\"h3\", \"nz-title\", \"\"], [\"h4\", \"nz-title\", \"\"]],\n  viewQuery: function NzTypographyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NzTextEditComponent, 5);\n      i0.ɵɵviewQuery(NzTextCopyComponent, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEditRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textCopyRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ellipsisContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandableBtn = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  hostVars: 26,\n  hostBindings: function NzTypographyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1 ? ctx.nzEllipsisRows : null);\n      i0.ɵɵclassProp(\"ant-typography\", !ctx.editing)(\"ant-typography-rtl\", ctx.dir === \"rtl\")(\"ant-typography-edit-content\", ctx.editing)(\"ant-typography-secondary\", ctx.nzType === \"secondary\")(\"ant-typography-warning\", ctx.nzType === \"warning\")(\"ant-typography-danger\", ctx.nzType === \"danger\")(\"ant-typography-success\", ctx.nzType === \"success\")(\"ant-typography-disabled\", ctx.nzDisabled)(\"ant-typography-ellipsis\", ctx.nzEllipsis && !ctx.expanded)(\"ant-typography-single-line\", ctx.nzEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-single-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-multiple-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1);\n    }\n  },\n  inputs: {\n    nzCopyable: \"nzCopyable\",\n    nzEditable: \"nzEditable\",\n    nzDisabled: \"nzDisabled\",\n    nzExpandable: \"nzExpandable\",\n    nzEllipsis: \"nzEllipsis\",\n    nzCopyTooltips: \"nzCopyTooltips\",\n    nzCopyIcons: \"nzCopyIcons\",\n    nzEditTooltip: \"nzEditTooltip\",\n    nzEditIcon: \"nzEditIcon\",\n    nzContent: \"nzContent\",\n    nzEllipsisRows: \"nzEllipsisRows\",\n    nzType: \"nzType\",\n    nzCopyText: \"nzCopyText\",\n    nzSuffix: \"nzSuffix\"\n  },\n  outputs: {\n    nzContentChange: \"nzContentChange\",\n    nzCopy: \"nzCopy\",\n    nzExpandChange: \"nzExpandChange\",\n    nzOnEllipsis: \"nzOnEllipsis\"\n  },\n  exportAs: [\"nzTypography\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c5,\n  decls: 5,\n  vars: 3,\n  consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\", 4, \"ngIf\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"jsEllipsis\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ellipsisContainer\", \"\"], [\"class\", \"ant-typography-expand\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-typography-expand\", 3, \"click\"], [\"expandable\", \"\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\"]],\n  template: function NzTypographyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_Template, 4, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(3, NzTypographyComponent_nz_text_edit_3_Template, 1, 3, \"nz-text-edit\", 2);\n      i0.ɵɵtemplate(4, NzTypographyComponent_nz_text_copy_4_Template, 1, 3, \"nz-text-copy\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzEditable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzCopyable && !ctx.editing);\n    }\n  },\n  directives: [NzTextEditComponent, NzTextCopyComponent, i8.NgIf, i8.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n\n__decorate([WithConfig(), InputNumber()], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTypographyComponent, [{\n    type: Component,\n    args: [{\n      selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n      exportAs: 'nzTypography',\n      template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-typography]': '!editing',\n        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n        '[class.ant-typography-edit-content]': 'editing',\n        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n        '[class.ant-typography-success]': 'nzType === \"success\"',\n        '[class.ant-typography-disabled]': 'nzDisabled',\n        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.NzConfigService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2$1.Platform\n    }, {\n      type: i2.NzI18nService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i4$1.NzResizeService\n    }, {\n      type: i5$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzCopyable: [{\n      type: Input\n    }],\n    nzEditable: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzExpandable: [{\n      type: Input\n    }],\n    nzEllipsis: [{\n      type: Input\n    }],\n    nzCopyTooltips: [{\n      type: Input\n    }],\n    nzCopyIcons: [{\n      type: Input\n    }],\n    nzEditTooltip: [{\n      type: Input\n    }],\n    nzEditIcon: [{\n      type: Input\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzEllipsisRows: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzCopyText: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzContentChange: [{\n      type: Output\n    }],\n    nzCopy: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnEllipsis: [{\n      type: Output\n    }],\n    textEditRef: [{\n      type: ViewChild,\n      args: [NzTextEditComponent, {\n        static: false\n      }]\n    }],\n    textCopyRef: [{\n      type: ViewChild,\n      args: [NzTextCopyComponent, {\n        static: false\n      }]\n    }],\n    ellipsisContainer: [{\n      type: ViewChild,\n      args: ['ellipsisContainer', {\n        static: false\n      }]\n    }],\n    expandableBtn: [{\n      type: ViewChild,\n      args: ['expandable', {\n        static: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTypographyModule {}\n\nNzTypographyModule.ɵfac = function NzTypographyModule_Factory(t) {\n  return new (t || NzTypographyModule)();\n};\n\nNzTypographyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTypographyModule\n});\nNzTypographyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule, NzOutletModule], PlatformModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTypographyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule, NzOutletModule],\n      exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n      declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-typography.mjs"],"names":["i5$1","BidiModule","i1","ClipboardModule","i2$1","PlatformModule","i8","DOCUMENT","CommonModule","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","Inject","Optional","NgModule","i5","NzOutletModule","i3","NzTransButtonModule","i2","NzI18nModule","i6","NzIconModule","i7","NzAutosizeDirective","NzInputModule","i4","NzToolTipModule","Subject","Subscription","takeUntil","take","__decorate","i1$1","WithConfig","cancelRequestAnimationFrame","reqAnimFrame","isStyleSupport","measure","InputBoolean","InputNumber","i4$1","NzTextCopyComponent","constructor","host","cdr","clipboard","i18n","copied","copyId","nativeElement","copyTooltip","copedTooltip","copyIcon","copedIcon","destroy$","icons","textCopy","ngOnInit","localeChange","pipe","subscribe","locale","getLocaleData","updateTooltips","markForCheck","ngOnChanges","changes","tooltips","updateIcons","ngOnDestroy","clearTimeout","next","complete","onClick","detectChanges","text","emit","copy","onCopied","setTimeout","_a","_b","_c","_d","Array","isArray","ɵfac","ElementRef","ChangeDetectorRef","Clipboard","NzI18nService","ɵcmp","NzTransButtonDirective","NzTooltipDirective","NzStringTemplateOutletDirective","NzIconDirective","type","args","selector","exportAs","template","changeDetection","OnPush","encapsulation","None","preserveWhitespaces","NzTextEditComponent","zone","editing","icon","startEditing","endEditing","beforeText","currentText","focusAndSetValue","confirm","onInput","event","target","value","onEnter","stopPropagation","preventDefault","onCancel","onStable","textarea","focus","autosizeDirective","resizeToFitContent","NgZone","NgIf","NzInputDirective","tooltip","static","NZ_CONFIG_MODULE_NAME","EXPAND_ELEMENT_CLASSNAME","NzTypographyComponent","nzConfigService","viewContainerRef","renderer","platform","document","resizeService","directionality","_nzModuleName","nzCopyable","nzEditable","nzDisabled","nzExpandable","nzEllipsis","nzCopyTooltips","undefined","nzCopyIcons","nzEditTooltip","nzEditIcon","nzEllipsisRows","nzContentChange","nzCopy","nzExpandChange","nzOnEllipsis","expandableBtnElementCache","cssEllipsis","isEllipsis","expanded","ellipsisStr","dir","viewInit","rfaId","windowResizeSubscription","EMPTY","hasEllipsisObservers","observers","length","canCssEllipsis","hasOperationsWithEllipsis","copyText","nzCopyText","nzContent","onTextCopy","onStartEditing","onEndEditing","renderOnNextFrame","onExpand","canUseCSSEllipsis","nzSuffix","isBrowser","syncEllipsis","getOriginContentViewRef","viewRef","createEmbeddedView","contentTemplate","content","removeView","remove","indexOf","fixedNodes","textCopyRef","textEditRef","filter","e","map","expandableBtnElement","getExpandableBtnElement","push","contentNodes","ellipsis","rootNodes","ellipsisText","ellipsisContainerNativeElement","ellipsisContainer","firstChild","removeChild","forEach","n","appendChild","cloneNode","expandText","expand","cache","innerText","el","createElement","className","renderAndSubscribeWindowResize","unsubscribe","change","direction","ngAfterViewInit","NzConfigService","ViewContainerRef","Renderer2","Platform","NzResizeService","Directionality","NgTemplateOutlet","prototype","decorators","nzType","expandableBtn","NzTypographyModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i5$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport * as i2$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i8 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Inject, Optional, NgModule } from '@angular/core';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i3 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport * as i4 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { __decorate } from 'tslib';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i4$1 from 'ng-zorro-antd/core/services';\n\nclass NzTextCopyComponent {\n    constructor(host, cdr, clipboard, i18n) {\n        this.host = host;\n        this.cdr = cdr;\n        this.clipboard = clipboard;\n        this.i18n = i18n;\n        this.copied = false;\n        this.copyId = -1;\n        this.nativeElement = this.host.nativeElement;\n        this.copyTooltip = null;\n        this.copedTooltip = null;\n        this.copyIcon = 'copy';\n        this.copedIcon = 'check';\n        this.destroy$ = new Subject();\n        this.icons = ['copy', 'check'];\n        this.textCopy = new EventEmitter();\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.updateTooltips();\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tooltips, icons } = changes;\n        if (tooltips) {\n            this.updateTooltips();\n        }\n        if (icons) {\n            this.updateIcons();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.copyId);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onClick() {\n        if (this.copied) {\n            return;\n        }\n        this.copied = true;\n        this.cdr.detectChanges();\n        const text = this.text;\n        this.textCopy.emit(text);\n        this.clipboard.copy(text);\n        this.onCopied();\n    }\n    onCopied() {\n        clearTimeout(this.copyId);\n        this.copyId = setTimeout(() => {\n            this.copied = false;\n            this.cdr.detectChanges();\n        }, 3000);\n    }\n    updateTooltips() {\n        var _a, _b, _c, _d;\n        if (this.tooltips === null) {\n            this.copedTooltip = null;\n            this.copyTooltip = null;\n        }\n        else if (Array.isArray(this.tooltips)) {\n            const [copyTooltip, copedTooltip] = this.tooltips;\n            this.copyTooltip = copyTooltip || ((_a = this.locale) === null || _a === void 0 ? void 0 : _a.copy);\n            this.copedTooltip = copedTooltip || ((_b = this.locale) === null || _b === void 0 ? void 0 : _b.copied);\n        }\n        else {\n            this.copyTooltip = (_c = this.locale) === null || _c === void 0 ? void 0 : _c.copy;\n            this.copedTooltip = (_d = this.locale) === null || _d === void 0 ? void 0 : _d.copied;\n        }\n        this.cdr.markForCheck();\n    }\n    updateIcons() {\n        const [copyIcon, copedIcon] = this.icons;\n        this.copyIcon = copyIcon;\n        this.copedIcon = copedIcon;\n        this.cdr.markForCheck();\n    }\n}\nNzTextCopyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTextCopyComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Clipboard }, { token: i2.NzI18nService }], target: i0.ɵɵFactoryTarget.Component });\nNzTextCopyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: { text: \"text\", tooltips: \"tooltips\", icons: \"icons\" }, outputs: { textCopy: \"textCopy\" }, exportAs: [\"nzTextCopy\"], usesOnChanges: true, ngImport: i0, template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n  `, isInline: true, directives: [{ type: i3.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { type: i4.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i6.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTextCopyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-copy',\n                    exportAs: 'nzTextCopy',\n                    template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Clipboard }, { type: i2.NzI18nService }]; }, propDecorators: { text: [{\n                type: Input\n            }], tooltips: [{\n                type: Input\n            }], icons: [{\n                type: Input\n            }], textCopy: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n    constructor(zone, host, cdr, i18n) {\n        this.zone = zone;\n        this.host = host;\n        this.cdr = cdr;\n        this.i18n = i18n;\n        this.editing = false;\n        this.destroy$ = new Subject();\n        this.icon = 'edit';\n        this.startEditing = new EventEmitter();\n        this.endEditing = new EventEmitter(true);\n        this.nativeElement = this.host.nativeElement;\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onClick() {\n        this.beforeText = this.text;\n        this.currentText = this.beforeText;\n        this.editing = true;\n        this.startEditing.emit();\n        this.focusAndSetValue();\n    }\n    confirm() {\n        this.editing = false;\n        this.endEditing.emit(this.currentText);\n    }\n    onInput(event) {\n        const target = event.target;\n        this.currentText = target.value;\n    }\n    onEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.confirm();\n    }\n    onCancel() {\n        this.currentText = this.beforeText;\n        this.confirm();\n    }\n    focusAndSetValue() {\n        this.zone.onStable.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n            var _a;\n            if ((_a = this.textarea) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n                this.textarea.nativeElement.focus();\n                this.textarea.nativeElement.value = this.currentText || '';\n                this.autosizeDirective.resizeToFitContent();\n                this.cdr.markForCheck();\n            }\n        });\n    }\n}\nNzTextEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTextEditComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.NzI18nService }], target: i0.ɵɵFactoryTarget.Component });\nNzTextEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: { text: \"text\", icon: \"icon\", tooltip: \"tooltip\" }, outputs: { startEditing: \"startEditing\", endEditing: \"endEditing\" }, viewQueries: [{ propertyName: \"textarea\", first: true, predicate: [\"textarea\"], descendants: true }, { propertyName: \"autosizeDirective\", first: true, predicate: NzAutosizeDirective, descendants: true }], exportAs: [\"nzTextEdit\"], ngImport: i0, template: `\n    <button\n      *ngIf=\"!editing\"\n      nz-tooltip\n      nz-trans-button\n      class=\"ant-typography-edit\"\n      [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      ></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `, isInline: true, directives: [{ type: i8.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { type: i4.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i6.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i7.NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: [\"nzBorderless\", \"nzSize\", \"disabled\"], exportAs: [\"nzInput\"] }, { type: i7.NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: [\"nzAutosize\"], exportAs: [\"nzAutosize\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTextEditComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-edit',\n                    exportAs: 'nzTextEdit',\n                    template: `\n    <button\n      *ngIf=\"!editing\"\n      nz-tooltip\n      nz-trans-button\n      class=\"ant-typography-edit\"\n      [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n        <i nz-icon [nzType]=\"icon\"></i>\n      </ng-container>\n    </button>\n    <ng-container *ngIf=\"editing\">\n      <textarea\n        #textarea\n        nz-input\n        nzAutosize\n        (input)=\"onInput($event)\"\n        (blur)=\"confirm()\"\n        (keydown.esc)=\"onCancel()\"\n        (keydown.enter)=\"onEnter($event)\"\n      ></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <i nz-icon nzType=\"enter\"></i>\n      </button>\n    </ng-container>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.NzI18nService }]; }, propDecorators: { text: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], startEditing: [{\n                type: Output\n            }], endEditing: [{\n                type: Output\n            }], textarea: [{\n                type: ViewChild,\n                args: ['textarea', { static: false }]\n            }], autosizeDirective: [{\n                type: ViewChild,\n                args: [NzAutosizeDirective, { static: false }]\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nclass NzTypographyComponent {\n    constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.host = host;\n        this.cdr = cdr;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.platform = platform;\n        this.i18n = i18n;\n        this.resizeService = resizeService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzCopyable = false;\n        this.nzEditable = false;\n        this.nzDisabled = false;\n        this.nzExpandable = false;\n        this.nzEllipsis = false;\n        this.nzCopyTooltips = undefined;\n        this.nzCopyIcons = ['copy', 'check'];\n        this.nzEditTooltip = undefined;\n        this.nzEditIcon = 'edit';\n        this.nzEllipsisRows = 1;\n        this.nzContentChange = new EventEmitter();\n        this.nzCopy = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        // This is not a two-way binding output with {@link nzEllipsis}\n        this.nzOnEllipsis = new EventEmitter();\n        this.expandableBtnElementCache = null;\n        this.editing = false;\n        this.cssEllipsis = false;\n        this.isEllipsis = true;\n        this.expanded = false;\n        this.ellipsisStr = '...';\n        this.dir = 'ltr';\n        this.viewInit = false;\n        this.rfaId = -1;\n        this.destroy$ = new Subject();\n        this.windowResizeSubscription = Subscription.EMPTY;\n        this.document = document;\n    }\n    get hasEllipsisObservers() {\n        return this.nzOnEllipsis.observers.length > 0;\n    }\n    get canCssEllipsis() {\n        return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n    get hasOperationsWithEllipsis() {\n        return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n    }\n    get copyText() {\n        return (typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent);\n    }\n    onTextCopy(text) {\n        this.nzCopy.emit(text);\n    }\n    onStartEditing() {\n        this.editing = true;\n    }\n    onEndEditing(text) {\n        this.editing = false;\n        this.nzContentChange.emit(text);\n        if (this.nzContent === text) {\n            this.renderOnNextFrame();\n        }\n        this.cdr.markForCheck();\n    }\n    onExpand() {\n        this.isEllipsis = false;\n        this.expanded = true;\n        this.nzExpandChange.emit();\n        this.nzOnEllipsis.emit(false);\n    }\n    canUseCSSEllipsis() {\n        if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n            return false;\n        }\n        // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n        if (this.hasEllipsisObservers) {\n            return false;\n        }\n        if (this.nzEllipsisRows === 1) {\n            return isStyleSupport('textOverflow');\n        }\n        else {\n            return isStyleSupport('webkitLineClamp');\n        }\n    }\n    renderOnNextFrame() {\n        cancelRequestAnimationFrame(this.rfaId);\n        if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n            return;\n        }\n        this.rfaId = reqAnimFrame(() => {\n            this.syncEllipsis();\n        });\n    }\n    getOriginContentViewRef() {\n        const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n            content: this.nzContent\n        });\n        viewRef.detectChanges();\n        return {\n            viewRef,\n            removeView: () => {\n                this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n            }\n        };\n    }\n    syncEllipsis() {\n        if (this.cssEllipsis) {\n            return;\n        }\n        const { viewRef, removeView } = this.getOriginContentViewRef();\n        const fixedNodes = [this.textCopyRef, this.textEditRef]\n            .filter(e => e && e.nativeElement)\n            .map(e => e.nativeElement);\n        const expandableBtnElement = this.getExpandableBtnElement();\n        if (expandableBtnElement) {\n            fixedNodes.push(expandableBtnElement);\n        }\n        const { contentNodes, text, ellipsis } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n        removeView();\n        this.ellipsisText = text;\n        if (ellipsis !== this.isEllipsis) {\n            this.isEllipsis = ellipsis;\n            this.nzOnEllipsis.emit(ellipsis);\n        }\n        const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n        while (ellipsisContainerNativeElement.firstChild) {\n            this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n        }\n        contentNodes.forEach(n => {\n            this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n        });\n        this.cdr.markForCheck();\n    }\n    // Need to create the element for calculation size before view init\n    getExpandableBtnElement() {\n        if (this.nzExpandable) {\n            const expandText = this.locale ? this.locale.expand : '';\n            const cache = this.expandableBtnElementCache;\n            if (!cache || cache.innerText === expandText) {\n                const el = this.document.createElement('a');\n                el.className = EXPAND_ELEMENT_CLASSNAME;\n                el.innerText = expandText;\n                this.expandableBtnElementCache = el;\n            }\n            return this.expandableBtnElementCache;\n        }\n        else {\n            this.expandableBtnElementCache = null;\n            return null;\n        }\n    }\n    renderAndSubscribeWindowResize() {\n        if (this.platform.isBrowser) {\n            this.windowResizeSubscription.unsubscribe();\n            this.cssEllipsis = this.canUseCSSEllipsis();\n            this.renderOnNextFrame();\n            this.windowResizeSubscription = this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.renderOnNextFrame());\n        }\n    }\n    ngOnInit() {\n        var _a;\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        this.viewInit = true;\n        this.renderAndSubscribeWindowResize();\n    }\n    ngOnChanges(changes) {\n        const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n        if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n            if (this.nzEllipsis) {\n                if (this.expanded) {\n                    this.windowResizeSubscription.unsubscribe();\n                }\n                else {\n                    this.renderAndSubscribeWindowResize();\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.expandableBtnElementCache = null;\n        this.windowResizeSubscription.unsubscribe();\n    }\n}\nNzTypographyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTypographyComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i2$1.Platform }, { token: i2.NzI18nService }, { token: DOCUMENT }, { token: i4$1.NzResizeService }, { token: i5$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTypographyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTypographyComponent, selector: \"\\n  nz-typography,\\n  [nz-typography],\\n  p[nz-paragraph],\\n  span[nz-text],\\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\\n  \", inputs: { nzCopyable: \"nzCopyable\", nzEditable: \"nzEditable\", nzDisabled: \"nzDisabled\", nzExpandable: \"nzExpandable\", nzEllipsis: \"nzEllipsis\", nzCopyTooltips: \"nzCopyTooltips\", nzCopyIcons: \"nzCopyIcons\", nzEditTooltip: \"nzEditTooltip\", nzEditIcon: \"nzEditIcon\", nzContent: \"nzContent\", nzEllipsisRows: \"nzEllipsisRows\", nzType: \"nzType\", nzCopyText: \"nzCopyText\", nzSuffix: \"nzSuffix\" }, outputs: { nzContentChange: \"nzContentChange\", nzCopy: \"nzCopy\", nzExpandChange: \"nzExpandChange\", nzOnEllipsis: \"nzOnEllipsis\" }, host: { properties: { \"class.ant-typography\": \"!editing\", \"class.ant-typography-rtl\": \"dir === \\\"rtl\\\"\", \"class.ant-typography-edit-content\": \"editing\", \"class.ant-typography-secondary\": \"nzType === \\\"secondary\\\"\", \"class.ant-typography-warning\": \"nzType === \\\"warning\\\"\", \"class.ant-typography-danger\": \"nzType === \\\"danger\\\"\", \"class.ant-typography-success\": \"nzType === \\\"success\\\"\", \"class.ant-typography-disabled\": \"nzDisabled\", \"class.ant-typography-ellipsis\": \"nzEllipsis && !expanded\", \"class.ant-typography-single-line\": \"nzEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-single-line\": \"canCssEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-multiple-line\": \"canCssEllipsis && nzEllipsisRows > 1\", \"style.-webkit-line-clamp\": \"(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null\" } }, viewQueries: [{ propertyName: \"textEditRef\", first: true, predicate: NzTextEditComponent, descendants: true }, { propertyName: \"textCopyRef\", first: true, predicate: NzTextCopyComponent, descendants: true }, { propertyName: \"ellipsisContainer\", first: true, predicate: [\"ellipsisContainer\"], descendants: true }, { propertyName: \"expandableBtn\", first: true, predicate: [\"expandable\"], descendants: true }, { propertyName: \"contentTemplate\", first: true, predicate: [\"contentTemplate\"], descendants: true }], exportAs: [\"nzTypography\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `, isInline: true, components: [{ type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: [\"text\", \"icon\", \"tooltip\"], outputs: [\"startEditing\", \"endEditing\"], exportAs: [\"nzTextEdit\"] }, { type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: [\"text\", \"tooltips\", \"icons\"], outputs: [\"textCopy\"], exportAs: [\"nzTextCopy\"] }], directives: [{ type: i8.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i8.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTypographyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n                    exportAs: 'nzTypography',\n                    template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    host: {\n                        '[class.ant-typography]': '!editing',\n                        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n                        '[class.ant-typography-edit-content]': 'editing',\n                        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n                        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n                        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n                        '[class.ant-typography-success]': 'nzType === \"success\"',\n                        '[class.ant-typography-disabled]': 'nzDisabled',\n                        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n                        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n                        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.NzConfigService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i2$1.Platform }, { type: i2.NzI18nService }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i4$1.NzResizeService }, { type: i5$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzCopyable: [{\n                type: Input\n            }], nzEditable: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzExpandable: [{\n                type: Input\n            }], nzEllipsis: [{\n                type: Input\n            }], nzCopyTooltips: [{\n                type: Input\n            }], nzCopyIcons: [{\n                type: Input\n            }], nzEditTooltip: [{\n                type: Input\n            }], nzEditIcon: [{\n                type: Input\n            }], nzContent: [{\n                type: Input\n            }], nzEllipsisRows: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzCopyText: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzContentChange: [{\n                type: Output\n            }], nzCopy: [{\n                type: Output\n            }], nzExpandChange: [{\n                type: Output\n            }], nzOnEllipsis: [{\n                type: Output\n            }], textEditRef: [{\n                type: ViewChild,\n                args: [NzTextEditComponent, { static: false }]\n            }], textCopyRef: [{\n                type: ViewChild,\n                args: [NzTextCopyComponent, { static: false }]\n            }], ellipsisContainer: [{\n                type: ViewChild,\n                args: ['ellipsisContainer', { static: false }]\n            }], expandableBtn: [{\n                type: ViewChild,\n                args: ['expandable', { static: false }]\n            }], contentTemplate: [{\n                type: ViewChild,\n                args: ['contentTemplate', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n}\nNzTypographyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTypographyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzTypographyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTypographyModule, declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent], imports: [BidiModule,\n        CommonModule,\n        NzIconModule,\n        NzToolTipModule,\n        NzInputModule,\n        NzI18nModule,\n        NzTransButtonModule,\n        ClipboardModule,\n        NzOutletModule], exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule] });\nNzTypographyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTypographyModule, imports: [[\n            BidiModule,\n            CommonModule,\n            NzIconModule,\n            NzToolTipModule,\n            NzInputModule,\n            NzI18nModule,\n            NzTransButtonModule,\n            ClipboardModule,\n            NzOutletModule\n        ], PlatformModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTypographyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        NzIconModule,\n                        NzToolTipModule,\n                        NzInputModule,\n                        NzI18nModule,\n                        NzTransButtonModule,\n                        ClipboardModule,\n                        NzOutletModule\n                    ],\n                    exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n                    declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };\n"]},"metadata":{},"sourceType":"module"}