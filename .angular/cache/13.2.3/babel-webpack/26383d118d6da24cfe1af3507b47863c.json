{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { LOCALE_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, interval } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/common';\nimport { getLocaleNumberSymbol, NumberSymbol, CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4 from 'ng-zorro-antd/core/pipe';\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzStatisticNumberComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzValueTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.nzValue));\n  }\n}\n\nfunction NzStatisticNumberComponent_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.displayInt);\n  }\n}\n\nfunction NzStatisticNumberComponent_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.displayDecimal);\n  }\n}\n\nfunction NzStatisticNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzStatisticNumberComponent_ng_container_2_span_1_Template, 2, 1, \"span\", 4);\n    i0.ɵɵtemplate(2, NzStatisticNumberComponent_ng_container_2_span_2_Template, 2, 1, \"span\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayInt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayDecimal);\n  }\n}\n\nfunction NzStatisticComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.nzTitle);\n  }\n}\n\nfunction NzStatisticComponent_span_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.nzPrefix);\n  }\n}\n\nfunction NzStatisticComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtemplate(1, NzStatisticComponent_span_4_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzPrefix);\n  }\n}\n\nfunction NzStatisticComponent_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.nzSuffix);\n  }\n}\n\nfunction NzStatisticComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzStatisticComponent_span_6_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzSuffix);\n  }\n}\n\nfunction NzCountdownComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"nzTimeRange\");\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(1, 1, ctx_r1.diff, ctx_r1.nzFormat));\n  }\n}\n\nclass NzStatisticNumberComponent {\n  constructor(locale_id) {\n    this.locale_id = locale_id;\n    this.displayInt = '';\n    this.displayDecimal = '';\n  }\n\n  ngOnChanges() {\n    this.formatNumber();\n  }\n\n  formatNumber() {\n    const decimalSeparator = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n\n}\n\nNzStatisticNumberComponent.ɵfac = function NzStatisticNumberComponent_Factory(t) {\n  return new (t || NzStatisticNumberComponent)(i0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nNzStatisticNumberComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzStatisticNumberComponent,\n  selectors: [[\"nz-statistic-number\"]],\n  inputs: {\n    nzValue: \"nzValue\",\n    nzValueTemplate: \"nzValueTemplate\"\n  },\n  exportAs: [\"nzStatisticNumber\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"ant-statistic-content-value\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ant-statistic-content-value-int\", 4, \"ngIf\"], [\"class\", \"ant-statistic-content-value-decimal\", 4, \"ngIf\"], [1, \"ant-statistic-content-value-int\"], [1, \"ant-statistic-content-value-decimal\"]],\n  template: function NzStatisticNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtemplate(1, NzStatisticNumberComponent_ng_container_1_Template, 1, 4, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, NzStatisticNumberComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzValueTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nzValueTemplate);\n    }\n  },\n  directives: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzStatisticNumberComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      selector: 'nz-statistic-number',\n      exportAs: 'nzStatisticNumber',\n      template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, {\n    nzValue: [{\n      type: Input\n    }],\n    nzValueTemplate: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzStatisticComponent {\n  constructor(cdr, directionality) {\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzValueStyle = {};\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  ngOnInit() {\n    var _a;\n\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzStatisticComponent.ɵfac = function NzStatisticComponent_Factory(t) {\n  return new (t || NzStatisticComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n};\n\nNzStatisticComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzStatisticComponent,\n  selectors: [[\"nz-statistic\"]],\n  inputs: {\n    nzPrefix: \"nzPrefix\",\n    nzSuffix: \"nzSuffix\",\n    nzTitle: \"nzTitle\",\n    nzValue: \"nzValue\",\n    nzValueStyle: \"nzValueStyle\",\n    nzValueTemplate: \"nzValueTemplate\"\n  },\n  exportAs: [\"nzStatistic\"],\n  decls: 7,\n  vars: 8,\n  consts: [[1, \"ant-statistic\"], [1, \"ant-statistic-title\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-statistic-content\", 3, \"ngStyle\"], [\"class\", \"ant-statistic-content-prefix\", 4, \"ngIf\"], [3, \"nzValue\", \"nzValueTemplate\"], [\"class\", \"ant-statistic-content-suffix\", 4, \"ngIf\"], [1, \"ant-statistic-content-prefix\"], [1, \"ant-statistic-content-suffix\"]],\n  template: function NzStatisticComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, NzStatisticComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, NzStatisticComponent_span_4_Template, 2, 1, \"span\", 4);\n      i0.ɵɵelement(5, \"nz-statistic-number\", 5);\n      i0.ɵɵtemplate(6, NzStatisticComponent_span_6_Template, 2, 1, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-statistic-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.nzValueStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzPrefix);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzValue\", ctx.nzValue)(\"nzValueTemplate\", ctx.nzValueTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzSuffix);\n    }\n  },\n  directives: [NzStatisticNumberComponent, i3.NzStringTemplateOutletDirective, i1.NgStyle, i1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzStatisticComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-statistic',\n      exportAs: 'nzStatistic',\n      template: `\n    <div class=\"ant-statistic\" [class.ant-statistic-rtl]=\"dir === 'rtl'\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzPrefix: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzValueStyle: [{\n      type: Input\n    }],\n    nzValueTemplate: [{\n      type: Input\n    }]\n  });\n})();\n\nconst REFRESH_INTERVAL = 1000 / 30;\n\nclass NzCountdownComponent extends NzStatisticComponent {\n  constructor(cdr, ngZone, platform, directionality) {\n    super(cdr, directionality);\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.nzFormat = 'HH:mm:ss';\n    this.nzCountdownFinish = new EventEmitter();\n    this.target = 0;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.syncTimer();\n  }\n\n  ngOnDestroy() {\n    this.stopTimer();\n  }\n\n  syncTimer() {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer() {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer() {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n  /**\n   * Update time that should be displayed on the screen.\n   */\n\n\n  updateValue() {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n\n      if (this.nzCountdownFinish.observers.length) {\n        this.ngZone.run(() => this.nzCountdownFinish.emit());\n      }\n    }\n  }\n\n}\n\nNzCountdownComponent.ɵfac = function NzCountdownComponent_Factory(t) {\n  return new (t || NzCountdownComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$2.Platform), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n};\n\nNzCountdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCountdownComponent,\n  selectors: [[\"nz-countdown\"]],\n  inputs: {\n    nzFormat: \"nzFormat\"\n  },\n  outputs: {\n    nzCountdownFinish: \"nzCountdownFinish\"\n  },\n  exportAs: [\"nzCountdown\"],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[3, \"nzValue\", \"nzValueStyle\", \"nzValueTemplate\", \"nzTitle\", \"nzPrefix\", \"nzSuffix\"], [\"countDownTpl\", \"\"]],\n  template: function NzCountdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"nz-statistic\", 0);\n      i0.ɵɵtemplate(1, NzCountdownComponent_ng_template_1_Template, 2, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"nzValue\", ctx.diff)(\"nzValueStyle\", ctx.nzValueStyle)(\"nzValueTemplate\", ctx.nzValueTemplate || _r0)(\"nzTitle\", ctx.nzTitle)(\"nzPrefix\", ctx.nzPrefix)(\"nzSuffix\", ctx.nzSuffix);\n    }\n  },\n  directives: [NzStatisticComponent],\n  pipes: [i4.NzTimeRangePipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCountdownComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-countdown',\n      exportAs: 'nzCountdown',\n      template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$2.Platform\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzFormat: [{\n      type: Input\n    }],\n    nzCountdownFinish: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzStatisticModule {}\n\nNzStatisticModule.ɵfac = function NzStatisticModule_Factory(t) {\n  return new (t || NzStatisticModule)();\n};\n\nNzStatisticModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzStatisticModule\n});\nNzStatisticModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzStatisticModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModule],\n      declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n      exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCountdownComponent, NzStatisticComponent, NzStatisticModule, NzStatisticNumberComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-statistic.mjs"],"names":["i0","LOCALE_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Optional","EventEmitter","Output","NgModule","Subject","interval","takeUntil","i1$1","BidiModule","i1","getLocaleNumberSymbol","NumberSymbol","CommonModule","i3","NzOutletModule","i1$2","PlatformModule","i4","NzPipesModule","NzStatisticNumberComponent","constructor","locale_id","displayInt","displayDecimal","ngOnChanges","formatNumber","decimalSeparator","nzValue","Decimal","value","String","int","decimal","split","ɵfac","ɵcmp","NgIf","NgTemplateOutlet","type","args","changeDetection","OnPush","encapsulation","None","preserveWhitespaces","selector","exportAs","template","undefined","decorators","nzValueTemplate","NzStatisticComponent","cdr","directionality","nzValueStyle","dir","destroy$","ngOnInit","_a","change","pipe","subscribe","direction","detectChanges","ngOnDestroy","next","complete","ChangeDetectorRef","Directionality","NzStringTemplateOutletDirective","NgStyle","nzPrefix","nzSuffix","nzTitle","REFRESH_INTERVAL","NzCountdownComponent","ngZone","platform","nzFormat","nzCountdownFinish","target","changes","Number","currentValue","isFirstChange","syncTimer","stopTimer","Date","now","startTimer","isBrowser","runOutsideAngular","updater_","updateValue","unsubscribe","diff","Math","max","observers","length","run","emit","NgZone","Platform","NzTimeRangePipe","NzStatisticModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { LOCALE_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, interval } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/common';\nimport { getLocaleNumberSymbol, NumberSymbol, CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4 from 'ng-zorro-antd/core/pipe';\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzStatisticNumberComponent {\n    constructor(locale_id) {\n        this.locale_id = locale_id;\n        this.displayInt = '';\n        this.displayDecimal = '';\n    }\n    ngOnChanges() {\n        this.formatNumber();\n    }\n    formatNumber() {\n        const decimalSeparator = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n        const value = String(this.nzValue);\n        const [int, decimal] = value.split(decimalSeparator);\n        this.displayInt = int;\n        this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n    }\n}\nNzStatisticNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticNumberComponent, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Component });\nNzStatisticNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzStatisticNumberComponent, selector: \"nz-statistic-number\", inputs: { nzValue: \"nzValue\", nzValueTemplate: \"nzValueTemplate\" }, exportAs: [\"nzStatisticNumber\"], usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticNumberComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    selector: 'nz-statistic-number',\n                    exportAs: 'nzStatisticNumber',\n                    template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [LOCALE_ID]\n                    }] }];\n    }, propDecorators: { nzValue: [{\n                type: Input\n            }], nzValueTemplate: [{\n                type: Input\n            }] } });\n\nclass NzStatisticComponent {\n    constructor(cdr, directionality) {\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.nzValueStyle = {};\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzStatisticComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzStatisticComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzStatisticComponent, selector: \"nz-statistic\", inputs: { nzPrefix: \"nzPrefix\", nzSuffix: \"nzSuffix\", nzTitle: \"nzTitle\", nzValue: \"nzValue\", nzValueStyle: \"nzValueStyle\", nzValueTemplate: \"nzValueTemplate\" }, exportAs: [\"nzStatistic\"], ngImport: i0, template: `\n    <div class=\"ant-statistic\" [class.ant-statistic-rtl]=\"dir === 'rtl'\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `, isInline: true, components: [{ type: NzStatisticNumberComponent, selector: \"nz-statistic-number\", inputs: [\"nzValue\", \"nzValueTemplate\"], exportAs: [\"nzStatisticNumber\"] }], directives: [{ type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-statistic',\n                    exportAs: 'nzStatistic',\n                    template: `\n    <div class=\"ant-statistic\" [class.ant-statistic-rtl]=\"dir === 'rtl'\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzPrefix: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzValue: [{\n                type: Input\n            }], nzValueStyle: [{\n                type: Input\n            }], nzValueTemplate: [{\n                type: Input\n            }] } });\n\nconst REFRESH_INTERVAL = 1000 / 30;\nclass NzCountdownComponent extends NzStatisticComponent {\n    constructor(cdr, ngZone, platform, directionality) {\n        super(cdr, directionality);\n        this.ngZone = ngZone;\n        this.platform = platform;\n        this.nzFormat = 'HH:mm:ss';\n        this.nzCountdownFinish = new EventEmitter();\n        this.target = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.nzValue) {\n            this.target = Number(changes.nzValue.currentValue);\n            if (!changes.nzValue.isFirstChange()) {\n                this.syncTimer();\n            }\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.syncTimer();\n    }\n    ngOnDestroy() {\n        this.stopTimer();\n    }\n    syncTimer() {\n        if (this.target >= Date.now()) {\n            this.startTimer();\n        }\n        else {\n            this.stopTimer();\n        }\n    }\n    startTimer() {\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                this.stopTimer();\n                this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n                    this.updateValue();\n                    this.cdr.detectChanges();\n                });\n            });\n        }\n    }\n    stopTimer() {\n        if (this.updater_) {\n            this.updater_.unsubscribe();\n            this.updater_ = null;\n        }\n    }\n    /**\n     * Update time that should be displayed on the screen.\n     */\n    updateValue() {\n        this.diff = Math.max(this.target - Date.now(), 0);\n        if (this.diff === 0) {\n            this.stopTimer();\n            if (this.nzCountdownFinish.observers.length) {\n                this.ngZone.run(() => this.nzCountdownFinish.emit());\n            }\n        }\n    }\n}\nNzCountdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCountdownComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i1$2.Platform }, { token: i1$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzCountdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCountdownComponent, selector: \"nz-countdown\", inputs: { nzFormat: \"nzFormat\" }, outputs: { nzCountdownFinish: \"nzCountdownFinish\" }, exportAs: [\"nzCountdown\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `, isInline: true, components: [{ type: NzStatisticComponent, selector: \"nz-statistic\", inputs: [\"nzPrefix\", \"nzSuffix\", \"nzTitle\", \"nzValue\", \"nzValueStyle\", \"nzValueTemplate\"], exportAs: [\"nzStatistic\"] }], pipes: { \"nzTimeRange\": i4.NzTimeRangePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCountdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-countdown',\n                    exportAs: 'nzCountdown',\n                    template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i1$2.Platform }, { type: i1$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzFormat: [{\n                type: Input\n            }], nzCountdownFinish: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzStatisticModule {\n}\nNzStatisticModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzStatisticModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticModule, declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent], imports: [BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModule], exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent] });\nNzStatisticModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticModule, imports: [[BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzStatisticModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModule],\n                    declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n                    exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCountdownComponent, NzStatisticComponent, NzStatisticModule, NzStatisticNumberComponent };\n"]},"metadata":{},"sourceType":"module"}