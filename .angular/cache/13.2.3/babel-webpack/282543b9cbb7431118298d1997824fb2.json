{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Input, EventEmitter, forwardRef, Optional, ViewChildren, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { takeUntil, filter, tap, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { InputBoolean, InputNumber, ensureNumberInRange, silentEvent, getPrecision, getPercent, getElementOffset, isNil, arraysEqual } from 'ng-zorro-antd/core/util';\nimport * as i2 from 'ng-zorro-antd/tooltip';\nimport { NzTooltipDirective, NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = [\"handle\"];\n\nfunction NzSliderStepComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const mark_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"ant-slider-dot-active\", mark_r1.active);\n    i0.ɵɵproperty(\"ngStyle\", mark_r1.style);\n  }\n}\n\nfunction NzSliderMarksComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const attr_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"ant-slider-mark-active\", attr_r1.active);\n    i0.ɵɵproperty(\"ngStyle\", attr_r1.style)(\"innerHTML\", attr_r1.label, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c1 = [\"slider\"];\n\nfunction NzSliderComponent_nz_slider_step_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-slider-step\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"vertical\", ctx_r1.nzVertical)(\"min\", ctx_r1.nzMin)(\"max\", ctx_r1.nzMax)(\"lowerBound\", ctx_r1.bounds.lower)(\"upperBound\", ctx_r1.bounds.upper)(\"marksArray\", ctx_r1.marksArray)(\"included\", ctx_r1.nzIncluded)(\"reverse\", ctx_r1.nzReverse);\n  }\n}\n\nfunction NzSliderComponent_nz_slider_handle_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-slider-handle\", 7);\n    i0.ɵɵlistener(\"focusin\", function NzSliderComponent_nz_slider_handle_5_Template_nz_slider_handle_focusin_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const handleIndex_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onHandleFocusIn(handleIndex_r5);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const handle_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"vertical\", ctx_r2.nzVertical)(\"reverse\", ctx_r2.nzReverse)(\"offset\", handle_r4.offset)(\"value\", handle_r4.value)(\"active\", handle_r4.active)(\"tooltipFormatter\", ctx_r2.nzTipFormatter)(\"tooltipVisible\", ctx_r2.nzTooltipVisible)(\"tooltipPlacement\", ctx_r2.nzTooltipPlacement)(\"dir\", ctx_r2.dir);\n  }\n}\n\nfunction NzSliderComponent_nz_slider_marks_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-slider-marks\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"vertical\", ctx_r3.nzVertical)(\"min\", ctx_r3.nzMin)(\"max\", ctx_r3.nzMax)(\"lowerBound\", ctx_r3.bounds.lower)(\"upperBound\", ctx_r3.bounds.upper)(\"marksArray\", ctx_r3.marksArray)(\"included\", ctx_r3.nzIncluded)(\"reverse\", ctx_r3.nzReverse);\n  }\n}\n\nclass NzSliderService {\n  constructor() {\n    this.isDragging = false;\n  }\n\n}\n\nNzSliderService.ɵfac = function NzSliderService_Factory(t) {\n  return new (t || NzSliderService)();\n};\n\nNzSliderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzSliderService,\n  factory: NzSliderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass NzSliderHandleComponent {\n  constructor(sliderService, cdr) {\n    this.sliderService = sliderService;\n    this.cdr = cdr;\n    this.tooltipVisible = 'default';\n    this.active = false;\n    this.dir = 'ltr';\n    this.style = {};\n\n    this.enterHandle = () => {\n      if (!this.sliderService.isDragging) {\n        this.toggleTooltip(true);\n        this.updateTooltipPosition();\n        this.cdr.detectChanges();\n      }\n    };\n\n    this.leaveHandle = () => {\n      if (!this.sliderService.isDragging) {\n        this.toggleTooltip(false);\n        this.cdr.detectChanges();\n      }\n    };\n  }\n\n  ngOnChanges(changes) {\n    const {\n      offset,\n      value,\n      active,\n      tooltipVisible,\n      reverse,\n      dir\n    } = changes;\n\n    if (offset || reverse || dir) {\n      this.updateStyle();\n    }\n\n    if (value) {\n      this.updateTooltipTitle();\n      this.updateTooltipPosition();\n    }\n\n    if (active) {\n      if (active.currentValue) {\n        this.toggleTooltip(true);\n      } else {\n        this.toggleTooltip(false);\n      }\n    }\n\n    if ((tooltipVisible === null || tooltipVisible === void 0 ? void 0 : tooltipVisible.currentValue) === 'always') {\n      Promise.resolve().then(() => this.toggleTooltip(true, true));\n    }\n  }\n\n  focus() {\n    var _a;\n\n    (_a = this.handleEl) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n  }\n\n  toggleTooltip(show, force = false) {\n    var _a, _b;\n\n    if (!force && (this.tooltipVisible !== 'default' || !this.tooltip)) {\n      return;\n    }\n\n    if (show) {\n      (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.show();\n    } else {\n      (_b = this.tooltip) === null || _b === void 0 ? void 0 : _b.hide();\n    }\n  }\n\n  updateTooltipTitle() {\n    this.tooltipTitle = this.tooltipFormatter ? this.tooltipFormatter(this.value) : `${this.value}`;\n  }\n\n  updateTooltipPosition() {\n    if (this.tooltip) {\n      Promise.resolve().then(() => {\n        var _a;\n\n        return (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.updatePosition();\n      });\n    }\n  }\n\n  updateStyle() {\n    const vertical = this.vertical;\n    const reverse = this.reverse;\n    const offset = this.offset;\n    const positionStyle = vertical ? {\n      [reverse ? 'top' : 'bottom']: `${offset}%`,\n      [reverse ? 'bottom' : 'top']: 'auto',\n      transform: reverse ? null : `translateY(+50%)`\n    } : Object.assign(Object.assign({}, this.getHorizontalStylePosition()), {\n      transform: `translateX(${reverse ? this.dir === 'rtl' ? '-' : '+' : this.dir === 'rtl' ? '+' : '-'}50%)`\n    });\n    this.style = positionStyle;\n    this.cdr.markForCheck();\n  }\n\n  getHorizontalStylePosition() {\n    let left = this.reverse ? 'auto' : `${this.offset}%`;\n    let right = this.reverse ? `${this.offset}%` : 'auto';\n\n    if (this.dir === 'rtl') {\n      const tmp = left;\n      left = right;\n      right = tmp;\n    }\n\n    return {\n      left,\n      right\n    };\n  }\n\n}\n\nNzSliderHandleComponent.ɵfac = function NzSliderHandleComponent_Factory(t) {\n  return new (t || NzSliderHandleComponent)(i0.ɵɵdirectiveInject(NzSliderService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzSliderHandleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSliderHandleComponent,\n  selectors: [[\"nz-slider-handle\"]],\n  viewQuery: function NzSliderHandleComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(NzTooltipDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.handleEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltip = _t.first);\n    }\n  },\n  hostBindings: function NzSliderHandleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function NzSliderHandleComponent_mouseenter_HostBindingHandler() {\n        return ctx.enterHandle();\n      })(\"mouseleave\", function NzSliderHandleComponent_mouseleave_HostBindingHandler() {\n        return ctx.leaveHandle();\n      });\n    }\n  },\n  inputs: {\n    vertical: \"vertical\",\n    reverse: \"reverse\",\n    offset: \"offset\",\n    value: \"value\",\n    tooltipVisible: \"tooltipVisible\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipFormatter: \"tooltipFormatter\",\n    active: \"active\",\n    dir: \"dir\"\n  },\n  exportAs: [\"nzSliderHandle\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[\"tabindex\", \"0\", \"nz-tooltip\", \"\", 1, \"ant-slider-handle\", 3, \"ngStyle\", \"nzTooltipTitle\", \"nzTooltipTrigger\", \"nzTooltipPlacement\"], [\"handle\", \"\"]],\n  template: function NzSliderHandleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"nzTooltipTitle\", ctx.tooltipFormatter === null || ctx.tooltipVisible === \"never\" ? null : ctx.tooltipTitle)(\"nzTooltipTrigger\", null)(\"nzTooltipPlacement\", ctx.tooltipPlacement);\n    }\n  },\n  directives: [i2.NzTooltipDirective, i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSliderHandleComponent.prototype, \"active\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderHandleComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-handle',\n      exportAs: 'nzSliderHandle',\n      preserveWhitespaces: false,\n      template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `,\n      host: {\n        '(mouseenter)': 'enterHandle()',\n        '(mouseleave)': 'leaveHandle()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzSliderService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    handleEl: [{\n      type: ViewChild,\n      args: ['handle', {\n        static: false\n      }]\n    }],\n    tooltip: [{\n      type: ViewChild,\n      args: [NzTooltipDirective, {\n        static: false\n      }]\n    }],\n    vertical: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tooltipVisible: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipFormatter: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSliderTrackComponent {\n  constructor() {\n    this.offset = 0;\n    this.reverse = false;\n    this.dir = 'ltr';\n    this.length = 0;\n    this.vertical = false;\n    this.included = false;\n    this.style = {};\n  }\n\n  ngOnChanges() {\n    const vertical = this.vertical;\n    const reverse = this.reverse;\n    const visibility = this.included ? 'visible' : 'hidden';\n    const offset = this.offset;\n    const length = this.length;\n    const positonStyle = vertical ? {\n      [reverse ? 'top' : 'bottom']: `${offset}%`,\n      [reverse ? 'bottom' : 'top']: 'auto',\n      height: `${length}%`,\n      visibility\n    } : Object.assign(Object.assign({}, this.getHorizontalStylePosition()), {\n      width: `${length}%`,\n      visibility\n    });\n    this.style = positonStyle;\n  }\n\n  getHorizontalStylePosition() {\n    let left = this.reverse ? 'auto' : `${this.offset}%`;\n    let right = this.reverse ? `${this.offset}%` : 'auto';\n\n    if (this.dir === 'rtl') {\n      const tmp = left;\n      left = right;\n      right = tmp;\n    }\n\n    return {\n      left,\n      right\n    };\n  }\n\n}\n\nNzSliderTrackComponent.ɵfac = function NzSliderTrackComponent_Factory(t) {\n  return new (t || NzSliderTrackComponent)();\n};\n\nNzSliderTrackComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSliderTrackComponent,\n  selectors: [[\"nz-slider-track\"]],\n  inputs: {\n    offset: \"offset\",\n    reverse: \"reverse\",\n    dir: \"dir\",\n    length: \"length\",\n    vertical: \"vertical\",\n    included: \"included\"\n  },\n  exportAs: [\"nzSliderTrack\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"ant-slider-track\", 3, \"ngStyle\"]],\n  template: function NzSliderTrackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", ctx.style);\n    }\n  },\n  directives: [i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputNumber()], NzSliderTrackComponent.prototype, \"offset\", void 0);\n\n__decorate([InputBoolean()], NzSliderTrackComponent.prototype, \"reverse\", void 0);\n\n__decorate([InputNumber()], NzSliderTrackComponent.prototype, \"length\", void 0);\n\n__decorate([InputBoolean()], NzSliderTrackComponent.prototype, \"vertical\", void 0);\n\n__decorate([InputBoolean()], NzSliderTrackComponent.prototype, \"included\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderTrackComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-track',\n      exportAs: 'nzSliderTrack',\n      preserveWhitespaces: false,\n      template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `\n    }]\n  }], null, {\n    offset: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }],\n    length: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSliderStepComponent {\n  constructor() {\n    this.lowerBound = null;\n    this.upperBound = null;\n    this.marksArray = [];\n    this.vertical = false;\n    this.included = false;\n    this.steps = [];\n  }\n\n  ngOnChanges(changes) {\n    const {\n      marksArray,\n      lowerBound,\n      upperBound,\n      reverse\n    } = changes;\n\n    if (marksArray || reverse) {\n      this.buildSteps();\n    }\n\n    if (marksArray || lowerBound || upperBound || reverse) {\n      this.togglePointActive();\n    }\n  }\n\n  trackById(_index, step) {\n    return step.value;\n  }\n\n  buildSteps() {\n    const orient = this.vertical ? 'bottom' : 'left';\n    this.steps = this.marksArray.map(mark => {\n      const {\n        value,\n        config\n      } = mark;\n      let offset = mark.offset;\n      const range = this.max - this.min;\n\n      if (this.reverse) {\n        offset = (this.max - value) / range * 100;\n      }\n\n      return {\n        value,\n        offset,\n        config,\n        active: false,\n        style: {\n          [orient]: `${offset}%`\n        }\n      };\n    });\n  }\n\n  togglePointActive() {\n    if (this.steps && this.lowerBound !== null && this.upperBound !== null) {\n      this.steps.forEach(step => {\n        const value = step.value;\n        const isActive = !this.included && value === this.upperBound || this.included && value <= this.upperBound && value >= this.lowerBound;\n        step.active = isActive;\n      });\n    }\n  }\n\n}\n\nNzSliderStepComponent.ɵfac = function NzSliderStepComponent_Factory(t) {\n  return new (t || NzSliderStepComponent)();\n};\n\nNzSliderStepComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSliderStepComponent,\n  selectors: [[\"nz-slider-step\"]],\n  inputs: {\n    lowerBound: \"lowerBound\",\n    upperBound: \"upperBound\",\n    marksArray: \"marksArray\",\n    min: \"min\",\n    max: \"max\",\n    vertical: \"vertical\",\n    included: \"included\",\n    reverse: \"reverse\"\n  },\n  exportAs: [\"nzSliderStep\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ant-slider-step\"], [\"class\", \"ant-slider-dot\", 3, \"ant-slider-dot-active\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-slider-dot\", 3, \"ngStyle\"]],\n  template: function NzSliderStepComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzSliderStepComponent_span_1_Template, 1, 3, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.steps)(\"ngForTrackBy\", ctx.trackById);\n    }\n  },\n  directives: [i1.NgForOf, i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSliderStepComponent.prototype, \"vertical\", void 0);\n\n__decorate([InputBoolean()], NzSliderStepComponent.prototype, \"included\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderStepComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-step',\n      exportAs: 'nzSliderStep',\n      preserveWhitespaces: false,\n      template: `\n    <div class=\"ant-slider-step\">\n      <span\n        class=\"ant-slider-dot\"\n        *ngFor=\"let mark of steps; trackBy: trackById\"\n        [class.ant-slider-dot-active]=\"mark.active\"\n        [ngStyle]=\"mark.style!\"\n      ></span>\n    </div>\n  `\n    }]\n  }], null, {\n    lowerBound: [{\n      type: Input\n    }],\n    upperBound: [{\n      type: Input\n    }],\n    marksArray: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSliderMarksComponent {\n  constructor() {\n    this.lowerBound = null;\n    this.upperBound = null;\n    this.marksArray = [];\n    this.vertical = false;\n    this.included = false;\n    this.marks = [];\n  }\n\n  ngOnChanges(changes) {\n    const {\n      marksArray,\n      lowerBound,\n      upperBound,\n      reverse\n    } = changes;\n\n    if (marksArray || reverse) {\n      this.buildMarks();\n    }\n\n    if (marksArray || lowerBound || upperBound || reverse) {\n      this.togglePointActive();\n    }\n  }\n\n  trackById(_index, mark) {\n    return mark.value;\n  }\n\n  buildMarks() {\n    const range = this.max - this.min;\n    this.marks = this.marksArray.map(mark => {\n      const {\n        value,\n        offset,\n        config\n      } = mark;\n      const style = this.getMarkStyles(value, range, config);\n      const label = isConfigObject(config) ? config.label : config;\n      return {\n        label,\n        offset,\n        style,\n        value,\n        config,\n        active: false\n      };\n    });\n  }\n\n  getMarkStyles(value, range, config) {\n    let style;\n    const markValue = this.reverse ? this.max + this.min - value : value;\n\n    if (this.vertical) {\n      style = {\n        marginBottom: '-50%',\n        bottom: `${(markValue - this.min) / range * 100}%`\n      };\n    } else {\n      style = {\n        transform: `translate3d(-50%, 0, 0)`,\n        left: `${(markValue - this.min) / range * 100}%`\n      };\n    }\n\n    if (isConfigObject(config) && config.style) {\n      style = Object.assign(Object.assign({}, style), config.style);\n    }\n\n    return style;\n  }\n\n  togglePointActive() {\n    if (this.marks && this.lowerBound !== null && this.upperBound !== null) {\n      this.marks.forEach(mark => {\n        const value = mark.value;\n        const isActive = !this.included && value === this.upperBound || this.included && value <= this.upperBound && value >= this.lowerBound;\n        mark.active = isActive;\n      });\n    }\n  }\n\n}\n\nNzSliderMarksComponent.ɵfac = function NzSliderMarksComponent_Factory(t) {\n  return new (t || NzSliderMarksComponent)();\n};\n\nNzSliderMarksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSliderMarksComponent,\n  selectors: [[\"nz-slider-marks\"]],\n  inputs: {\n    lowerBound: \"lowerBound\",\n    upperBound: \"upperBound\",\n    marksArray: \"marksArray\",\n    min: \"min\",\n    max: \"max\",\n    vertical: \"vertical\",\n    included: \"included\",\n    reverse: \"reverse\"\n  },\n  exportAs: [\"nzSliderMarks\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ant-slider-mark\"], [\"class\", \"ant-slider-mark-text\", 3, \"ant-slider-mark-active\", \"ngStyle\", \"innerHTML\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-slider-mark-text\", 3, \"ngStyle\", \"innerHTML\"]],\n  template: function NzSliderMarksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzSliderMarksComponent_span_1_Template, 1, 4, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.marks)(\"ngForTrackBy\", ctx.trackById);\n    }\n  },\n  directives: [i1.NgForOf, i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSliderMarksComponent.prototype, \"vertical\", void 0);\n\n__decorate([InputBoolean()], NzSliderMarksComponent.prototype, \"included\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderMarksComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      selector: 'nz-slider-marks',\n      exportAs: 'nzSliderMarks',\n      template: `\n    <div class=\"ant-slider-mark\">\n      <span\n        class=\"ant-slider-mark-text\"\n        *ngFor=\"let attr of marks; trackBy: trackById\"\n        [class.ant-slider-mark-active]=\"attr.active\"\n        [ngStyle]=\"attr.style!\"\n        [innerHTML]=\"attr.label\"\n      ></span>\n    </div>\n  `\n    }]\n  }], null, {\n    lowerBound: [{\n      type: Input\n    }],\n    upperBound: [{\n      type: Input\n    }],\n    marksArray: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction isConfigObject(config) {\n  return typeof config !== 'string';\n}\n\nclass NzSliderComponent {\n  constructor(sliderService, cdr, platform, directionality) {\n    this.sliderService = sliderService;\n    this.cdr = cdr;\n    this.platform = platform;\n    this.directionality = directionality;\n    this.nzDisabled = false;\n    this.nzDots = false;\n    this.nzIncluded = true;\n    this.nzRange = false;\n    this.nzVertical = false;\n    this.nzReverse = false;\n    this.nzMarks = null;\n    this.nzMax = 100;\n    this.nzMin = 0;\n    this.nzStep = 1;\n    this.nzTooltipVisible = 'default';\n    this.nzTooltipPlacement = 'top';\n    this.nzOnAfterChange = new EventEmitter();\n    this.value = null;\n    this.cacheSliderStart = null;\n    this.cacheSliderLength = null;\n    this.activeValueIndex = undefined; // Current activated handle's index ONLY for range=true\n\n    this.track = {\n      offset: null,\n      length: null\n    }; // Track's offset and length\n\n    this.handles = []; // Handles' offset\n\n    this.marksArray = null; // \"steps\" in array type with more data & FILTER out the invalid mark\n\n    this.bounds = {\n      lower: null,\n      upper: null\n    }; // now for nz-slider-step\n\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.dir = this.directionality.value;\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n      this.updateTrackAndHandles();\n      this.onValueChange(this.getValue(true));\n    });\n    this.handles = generateHandlers(this.nzRange ? 2 : 1);\n    this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n    this.bindDraggingHandlers();\n    this.toggleDragDisabled(this.nzDisabled);\n\n    if (this.getValue() === null) {\n      this.setValue(this.formatValue(null));\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzDisabled,\n      nzMarks,\n      nzRange\n    } = changes;\n\n    if (nzDisabled && !nzDisabled.firstChange) {\n      this.toggleDragDisabled(nzDisabled.currentValue);\n    } else if (nzMarks && !nzMarks.firstChange) {\n      this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n    } else if (nzRange && !nzRange.firstChange) {\n      this.handles = generateHandlers(nzRange.currentValue ? 2 : 1);\n      this.setValue(this.formatValue(null));\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeDrag();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(val) {\n    this.setValue(val, true);\n  }\n\n  onValueChange(_value) {}\n\n  onTouched() {}\n\n  registerOnChange(fn) {\n    this.onValueChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.nzDisabled = isDisabled;\n    this.toggleDragDisabled(isDisabled);\n  }\n  /**\n   * Event handler is only triggered when a slider handler is focused.\n   */\n\n\n  onKeyDown(e) {\n    if (this.nzDisabled) {\n      return;\n    }\n\n    const code = e.keyCode;\n    const isIncrease = code === RIGHT_ARROW || code === UP_ARROW;\n    const isDecrease = code === LEFT_ARROW || code === DOWN_ARROW;\n\n    if (!(isIncrease || isDecrease)) {\n      return;\n    }\n\n    e.preventDefault();\n    let step = (isDecrease ? -this.nzStep : this.nzStep) * (this.nzReverse ? -1 : 1);\n    step = this.dir === 'rtl' ? step * -1 : step;\n    const newVal = this.nzRange ? this.value[this.activeValueIndex] + step : this.value + step;\n    this.setActiveValue(ensureNumberInRange(newVal, this.nzMin, this.nzMax));\n  }\n\n  onHandleFocusIn(index) {\n    this.activeValueIndex = index;\n  }\n\n  setValue(value, isWriteValue = false) {\n    if (isWriteValue) {\n      this.value = this.formatValue(value);\n      this.updateTrackAndHandles();\n    } else if (!valuesEqual(this.value, value)) {\n      this.value = value;\n      this.updateTrackAndHandles();\n      this.onValueChange(this.getValue(true));\n    }\n  }\n\n  getValue(cloneAndSort = false) {\n    if (cloneAndSort && this.value && isValueRange(this.value)) {\n      return [...this.value].sort((a, b) => a - b);\n    }\n\n    return this.value;\n  }\n  /**\n   * Clone & sort current value and convert them to offsets, then return the new one.\n   */\n\n\n  getValueToOffset(value) {\n    let normalizedValue = value;\n\n    if (typeof normalizedValue === 'undefined') {\n      normalizedValue = this.getValue(true);\n    }\n\n    return isValueRange(normalizedValue) ? normalizedValue.map(val => this.valueToOffset(val)) : this.valueToOffset(normalizedValue);\n  }\n  /**\n   * Find the closest value to be activated.\n   */\n\n\n  setActiveValueIndex(pointerValue) {\n    const value = this.getValue();\n\n    if (isValueRange(value)) {\n      let minimal = null;\n      let gap;\n      let activeIndex = -1;\n      value.forEach((val, index) => {\n        gap = Math.abs(pointerValue - val);\n\n        if (minimal === null || gap < minimal) {\n          minimal = gap;\n          activeIndex = index;\n        }\n      });\n      this.activeValueIndex = activeIndex;\n      this.handlerComponents.toArray()[activeIndex].focus();\n    } else {\n      this.handlerComponents.toArray()[0].focus();\n    }\n  }\n\n  setActiveValue(pointerValue) {\n    if (isValueRange(this.value)) {\n      const newValue = [...this.value];\n      newValue[this.activeValueIndex] = pointerValue;\n      this.setValue(newValue);\n    } else {\n      this.setValue(pointerValue);\n    }\n  }\n  /**\n   * Update track and handles' position and length.\n   */\n\n\n  updateTrackAndHandles() {\n    const value = this.getValue();\n    const offset = this.getValueToOffset(value);\n    const valueSorted = this.getValue(true);\n    const offsetSorted = this.getValueToOffset(valueSorted);\n    const boundParts = isValueRange(valueSorted) ? valueSorted : [0, valueSorted];\n    const trackParts = isValueRange(offsetSorted) ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]] : [0, offsetSorted];\n    this.handles.forEach((handle, index) => {\n      handle.offset = isValueRange(offset) ? offset[index] : offset;\n      handle.value = isValueRange(value) ? value[index] : value || 0;\n    });\n    [this.bounds.lower, this.bounds.upper] = boundParts;\n    [this.track.offset, this.track.length] = trackParts;\n    this.cdr.markForCheck();\n  }\n\n  onDragStart(value) {\n    this.toggleDragMoving(true);\n    this.cacheSliderProperty();\n    this.setActiveValueIndex(this.getLogicalValue(value));\n    this.setActiveValue(this.getLogicalValue(value));\n    this.showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n  }\n\n  onDragMove(value) {\n    this.setActiveValue(this.getLogicalValue(value));\n    this.cdr.markForCheck();\n  }\n\n  getLogicalValue(value) {\n    if (this.nzReverse) {\n      if (!this.nzVertical && this.dir === 'rtl') {\n        return value;\n      }\n\n      return this.nzMax - value + this.nzMin;\n    }\n\n    if (!this.nzVertical && this.dir === 'rtl') {\n      return this.nzMax - value + this.nzMin;\n    }\n\n    return value;\n  }\n\n  onDragEnd() {\n    this.nzOnAfterChange.emit(this.getValue(true));\n    this.toggleDragMoving(false);\n    this.cacheSliderProperty(true);\n    this.hideAllHandleTooltip();\n    this.cdr.markForCheck();\n  }\n  /**\n   * Create user interactions handles.\n   */\n\n\n  bindDraggingHandlers() {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    const sliderDOM = this.slider.nativeElement;\n    const orientField = this.nzVertical ? 'pageY' : 'pageX';\n    const mouse = {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup',\n      pluckKey: [orientField]\n    };\n    const touch = {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      pluckKey: ['touches', '0', orientField],\n      filter: e => e instanceof TouchEvent\n    };\n    [mouse, touch].forEach(source => {\n      const {\n        start,\n        move,\n        end,\n        pluckKey,\n        filter: filterFunc = () => true\n      } = source;\n      source.startPlucked$ = fromEvent(sliderDOM, start).pipe(filter(filterFunc), tap(silentEvent), pluck(...pluckKey), map(position => this.findClosestValue(position)));\n      source.end$ = fromEvent(document, end);\n      source.moveResolved$ = fromEvent(document, move).pipe(filter(filterFunc), tap(silentEvent), pluck(...pluckKey), distinctUntilChanged(), map(position => this.findClosestValue(position)), distinctUntilChanged(), takeUntil(source.end$));\n    });\n    this.dragStart$ = merge(mouse.startPlucked$, touch.startPlucked$);\n    this.dragMove$ = merge(mouse.moveResolved$, touch.moveResolved$);\n    this.dragEnd$ = merge(mouse.end$, touch.end$);\n  }\n\n  subscribeDrag(periods = ['start', 'move', 'end']) {\n    if (periods.indexOf('start') !== -1 && this.dragStart$ && !this.dragStart_) {\n      this.dragStart_ = this.dragStart$.subscribe(this.onDragStart.bind(this));\n    }\n\n    if (periods.indexOf('move') !== -1 && this.dragMove$ && !this.dragMove_) {\n      this.dragMove_ = this.dragMove$.subscribe(this.onDragMove.bind(this));\n    }\n\n    if (periods.indexOf('end') !== -1 && this.dragEnd$ && !this.dragEnd_) {\n      this.dragEnd_ = this.dragEnd$.subscribe(this.onDragEnd.bind(this));\n    }\n  }\n\n  unsubscribeDrag(periods = ['start', 'move', 'end']) {\n    if (periods.indexOf('start') !== -1 && this.dragStart_) {\n      this.dragStart_.unsubscribe();\n      this.dragStart_ = null;\n    }\n\n    if (periods.indexOf('move') !== -1 && this.dragMove_) {\n      this.dragMove_.unsubscribe();\n      this.dragMove_ = null;\n    }\n\n    if (periods.indexOf('end') !== -1 && this.dragEnd_) {\n      this.dragEnd_.unsubscribe();\n      this.dragEnd_ = null;\n    }\n  }\n\n  toggleDragMoving(movable) {\n    const periods = ['move', 'end'];\n\n    if (movable) {\n      this.sliderService.isDragging = true;\n      this.subscribeDrag(periods);\n    } else {\n      this.sliderService.isDragging = false;\n      this.unsubscribeDrag(periods);\n    }\n  }\n\n  toggleDragDisabled(disabled) {\n    if (disabled) {\n      this.unsubscribeDrag();\n    } else {\n      this.subscribeDrag(['start']);\n    }\n  }\n\n  findClosestValue(position) {\n    const sliderStart = this.getSliderStartPosition();\n    const sliderLength = this.getSliderLength();\n    const ratio = ensureNumberInRange((position - sliderStart) / sliderLength, 0, 1);\n    const val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n    const points = this.nzMarks === null ? [] : Object.keys(this.nzMarks).map(parseFloat).sort((a, b) => a - b);\n\n    if (this.nzStep !== 0 && !this.nzDots) {\n      const closestOne = Math.round(val / this.nzStep) * this.nzStep;\n      points.push(closestOne);\n    }\n\n    const gaps = points.map(point => Math.abs(val - point));\n    const closest = points[gaps.indexOf(Math.min(...gaps))]; // return parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n\n    return this.nzStep === 0 ? closest : parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n  }\n\n  valueToOffset(value) {\n    return getPercent(this.nzMin, this.nzMax, value);\n  }\n\n  getSliderStartPosition() {\n    if (this.cacheSliderStart !== null) {\n      return this.cacheSliderStart;\n    }\n\n    const offset = getElementOffset(this.slider.nativeElement);\n    return this.nzVertical ? offset.top : offset.left;\n  }\n\n  getSliderLength() {\n    if (this.cacheSliderLength !== null) {\n      return this.cacheSliderLength;\n    }\n\n    const sliderDOM = this.slider.nativeElement;\n    return this.nzVertical ? sliderDOM.clientHeight : sliderDOM.clientWidth;\n  }\n  /**\n   * Cache DOM layout/reflow operations for performance (may not necessary?)\n   */\n\n\n  cacheSliderProperty(remove = false) {\n    this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n    this.cacheSliderLength = remove ? null : this.getSliderLength();\n  }\n\n  formatValue(value) {\n    if (isNil(value)) {\n      return this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n    } else if (assertValueValid(value, this.nzRange)) {\n      return isValueRange(value) ? value.map(val => ensureNumberInRange(val, this.nzMin, this.nzMax)) : ensureNumberInRange(value, this.nzMin, this.nzMax);\n    } else {\n      return this.nzDefaultValue ? this.nzDefaultValue : this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n    }\n  }\n  /**\n   * Show one handle's tooltip and hide others'.\n   */\n\n\n  showHandleTooltip(handleIndex = 0) {\n    this.handles.forEach((handle, index) => {\n      handle.active = index === handleIndex;\n    });\n  }\n\n  hideAllHandleTooltip() {\n    this.handles.forEach(handle => handle.active = false);\n  }\n\n  generateMarkItems(marks) {\n    const marksArray = [];\n\n    for (const key in marks) {\n      if (marks.hasOwnProperty(key)) {\n        const mark = marks[key];\n        const val = typeof key === 'number' ? key : parseFloat(key);\n\n        if (val >= this.nzMin && val <= this.nzMax) {\n          marksArray.push({\n            value: val,\n            offset: this.valueToOffset(val),\n            config: mark\n          });\n        }\n      }\n    }\n\n    return marksArray.length ? marksArray : null;\n  }\n\n}\n\nNzSliderComponent.ɵfac = function NzSliderComponent_Factory(t) {\n  return new (t || NzSliderComponent)(i0.ɵɵdirectiveInject(NzSliderService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2$1.Platform), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\n\nNzSliderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSliderComponent,\n  selectors: [[\"nz-slider\"]],\n  viewQuery: function NzSliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(NzSliderHandleComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slider = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.handlerComponents = _t);\n    }\n  },\n  hostBindings: function NzSliderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function NzSliderComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\",\n    nzDots: \"nzDots\",\n    nzIncluded: \"nzIncluded\",\n    nzRange: \"nzRange\",\n    nzVertical: \"nzVertical\",\n    nzReverse: \"nzReverse\",\n    nzDefaultValue: \"nzDefaultValue\",\n    nzMarks: \"nzMarks\",\n    nzMax: \"nzMax\",\n    nzMin: \"nzMin\",\n    nzStep: \"nzStep\",\n    nzTooltipVisible: \"nzTooltipVisible\",\n    nzTooltipPlacement: \"nzTooltipPlacement\",\n    nzTipFormatter: \"nzTipFormatter\"\n  },\n  outputs: {\n    nzOnAfterChange: \"nzOnAfterChange\"\n  },\n  exportAs: [\"nzSlider\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzSliderComponent),\n    multi: true\n  }, NzSliderService]), i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 17,\n  consts: [[1, \"ant-slider\"], [\"slider\", \"\"], [1, \"ant-slider-rail\"], [3, \"vertical\", \"included\", \"offset\", \"length\", \"reverse\", \"dir\"], [3, \"vertical\", \"min\", \"max\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\", \"reverse\", 4, \"ngIf\"], [3, \"vertical\", \"reverse\", \"offset\", \"value\", \"active\", \"tooltipFormatter\", \"tooltipVisible\", \"tooltipPlacement\", \"dir\", \"focusin\", 4, \"ngFor\", \"ngForOf\"], [3, \"vertical\", \"min\", \"max\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\", \"reverse\"], [3, \"vertical\", \"reverse\", \"offset\", \"value\", \"active\", \"tooltipFormatter\", \"tooltipVisible\", \"tooltipPlacement\", \"dir\", \"focusin\"]],\n  template: function NzSliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelement(3, \"nz-slider-track\", 3);\n      i0.ɵɵtemplate(4, NzSliderComponent_nz_slider_step_4_Template, 1, 8, \"nz-slider-step\", 4);\n      i0.ɵɵtemplate(5, NzSliderComponent_nz_slider_handle_5_Template, 1, 9, \"nz-slider-handle\", 5);\n      i0.ɵɵtemplate(6, NzSliderComponent_nz_slider_marks_6_Template, 1, 8, \"nz-slider-marks\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-slider-rtl\", ctx.dir === \"rtl\")(\"ant-slider-disabled\", ctx.nzDisabled)(\"ant-slider-vertical\", ctx.nzVertical)(\"ant-slider-with-marks\", ctx.marksArray);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"vertical\", ctx.nzVertical)(\"included\", ctx.nzIncluded)(\"offset\", ctx.track.offset)(\"length\", ctx.track.length)(\"reverse\", ctx.nzReverse)(\"dir\", ctx.dir);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.marksArray);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.handles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.marksArray);\n    }\n  },\n  directives: [NzSliderTrackComponent, NzSliderStepComponent, NzSliderHandleComponent, NzSliderMarksComponent, i3.Dir, i1.NgIf, i1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzDots\", void 0);\n\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzIncluded\", void 0);\n\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzRange\", void 0);\n\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzVertical\", void 0);\n\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzReverse\", void 0);\n\n__decorate([InputNumber()], NzSliderComponent.prototype, \"nzMax\", void 0);\n\n__decorate([InputNumber()], NzSliderComponent.prototype, \"nzMin\", void 0);\n\n__decorate([InputNumber()], NzSliderComponent.prototype, \"nzStep\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider',\n      exportAs: 'nzSlider',\n      preserveWhitespaces: false,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSliderComponent),\n        multi: true\n      }, NzSliderService],\n      host: {\n        '(keydown)': 'onKeyDown($event)'\n      },\n      template: `\n    <div\n      #slider\n      class=\"ant-slider\"\n      [class.ant-slider-rtl]=\"dir === 'rtl'\"\n      [class.ant-slider-disabled]=\"nzDisabled\"\n      [class.ant-slider-vertical]=\"nzVertical\"\n      [class.ant-slider-with-marks]=\"marksArray\"\n    >\n      <div class=\"ant-slider-rail\"></div>\n      <nz-slider-track\n        [vertical]=\"nzVertical\"\n        [included]=\"nzIncluded\"\n        [offset]=\"track.offset!\"\n        [length]=\"track.length!\"\n        [reverse]=\"nzReverse\"\n        [dir]=\"dir\"\n      ></nz-slider-track>\n      <nz-slider-step\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-step>\n      <nz-slider-handle\n        *ngFor=\"let handle of handles; index as handleIndex\"\n        [vertical]=\"nzVertical\"\n        [reverse]=\"nzReverse\"\n        [offset]=\"handle.offset!\"\n        [value]=\"handle.value!\"\n        [active]=\"handle.active\"\n        [tooltipFormatter]=\"nzTipFormatter\"\n        [tooltipVisible]=\"nzTooltipVisible\"\n        [tooltipPlacement]=\"nzTooltipPlacement\"\n        [dir]=\"dir\"\n        (focusin)=\"onHandleFocusIn(handleIndex)\"\n      ></nz-slider-handle>\n      <nz-slider-marks\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-marks>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NzSliderService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2$1.Platform\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    slider: [{\n      type: ViewChild,\n      args: ['slider', {\n        static: true\n      }]\n    }],\n    handlerComponents: [{\n      type: ViewChildren,\n      args: [NzSliderHandleComponent]\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzDots: [{\n      type: Input\n    }],\n    nzIncluded: [{\n      type: Input\n    }],\n    nzRange: [{\n      type: Input\n    }],\n    nzVertical: [{\n      type: Input\n    }],\n    nzReverse: [{\n      type: Input\n    }],\n    nzDefaultValue: [{\n      type: Input\n    }],\n    nzMarks: [{\n      type: Input\n    }],\n    nzMax: [{\n      type: Input\n    }],\n    nzMin: [{\n      type: Input\n    }],\n    nzStep: [{\n      type: Input\n    }],\n    nzTooltipVisible: [{\n      type: Input\n    }],\n    nzTooltipPlacement: [{\n      type: Input\n    }],\n    nzTipFormatter: [{\n      type: Input\n    }],\n    nzOnAfterChange: [{\n      type: Output\n    }]\n  });\n})();\n\nfunction getValueTypeNotMatchError() {\n  return new Error(`The \"nzRange\" can't match the \"ngModel\"'s type, please check these properties: \"nzRange\", \"ngModel\", \"nzDefaultValue\".`);\n}\n\nfunction isValueRange(value) {\n  if (value instanceof Array) {\n    return value.length === 2;\n  } else {\n    return false;\n  }\n}\n\nfunction generateHandlers(amount) {\n  return Array(amount).fill(0).map(() => ({\n    offset: null,\n    value: null,\n    active: false\n  }));\n}\n/**\n * Check if value is valid and throw error if value-type/range not match.\n */\n\n\nfunction assertValueValid(value, isRange) {\n  if (!isValueRange(value) && isNaN(value) || isValueRange(value) && value.some(v => isNaN(v))) {\n    return false;\n  }\n\n  return assertValueTypeMatch(value, isRange);\n}\n/**\n * Assert that if `this.nzRange` is `true`, value is also a range, vice versa.\n */\n\n\nfunction assertValueTypeMatch(value, isRange = false) {\n  if (isValueRange(value) !== isRange) {\n    throw getValueTypeNotMatchError();\n  }\n\n  return true;\n}\n\nfunction valuesEqual(valA, valB) {\n  if (typeof valA !== typeof valB) {\n    return false;\n  }\n\n  return isValueRange(valA) && isValueRange(valB) ? arraysEqual(valA, valB) : valA === valB;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzSliderModule {}\n\nNzSliderModule.ɵfac = function NzSliderModule_Factory(t) {\n  return new (t || NzSliderModule)();\n};\n\nNzSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSliderModule\n});\nNzSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, PlatformModule, NzToolTipModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n      declarations: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n      imports: [BidiModule, CommonModule, PlatformModule, NzToolTipModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzMarks {}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzMarks, NzSliderComponent, NzSliderModule, NzSliderHandleComponent as ɵNzSliderHandleComponent, NzSliderMarksComponent as ɵNzSliderMarksComponent, NzSliderService as ɵNzSliderService, NzSliderStepComponent as ɵNzSliderStepComponent, NzSliderTrackComponent as ɵNzSliderTrackComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-slider.mjs"],"names":["__decorate","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","DOWN_ARROW","i0","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","Input","EventEmitter","forwardRef","Optional","ViewChildren","Output","NgModule","NG_VALUE_ACCESSOR","Subject","fromEvent","merge","takeUntil","filter","tap","pluck","map","distinctUntilChanged","InputBoolean","InputNumber","ensureNumberInRange","silentEvent","getPrecision","getPercent","getElementOffset","isNil","arraysEqual","i2","NzTooltipDirective","NzToolTipModule","i1","CommonModule","i2$1","PlatformModule","i3","BidiModule","NzSliderService","constructor","isDragging","ɵfac","ɵprov","type","NzSliderHandleComponent","sliderService","cdr","tooltipVisible","active","dir","style","enterHandle","toggleTooltip","updateTooltipPosition","detectChanges","leaveHandle","ngOnChanges","changes","offset","value","reverse","updateStyle","updateTooltipTitle","currentValue","Promise","resolve","then","focus","_a","handleEl","nativeElement","show","force","_b","tooltip","hide","tooltipTitle","tooltipFormatter","updatePosition","vertical","positionStyle","transform","Object","assign","getHorizontalStylePosition","markForCheck","left","right","tmp","ChangeDetectorRef","ɵcmp","NgStyle","prototype","args","changeDetection","OnPush","encapsulation","None","selector","exportAs","preserveWhitespaces","template","host","static","tooltipPlacement","NzSliderTrackComponent","length","included","visibility","positonStyle","height","width","NzSliderStepComponent","lowerBound","upperBound","marksArray","steps","buildSteps","togglePointActive","trackById","_index","step","orient","mark","config","range","max","min","forEach","isActive","NgForOf","NzSliderMarksComponent","marks","buildMarks","getMarkStyles","label","isConfigObject","markValue","marginBottom","bottom","NzSliderComponent","platform","directionality","nzDisabled","nzDots","nzIncluded","nzRange","nzVertical","nzReverse","nzMarks","nzMax","nzMin","nzStep","nzTooltipVisible","nzTooltipPlacement","nzOnAfterChange","cacheSliderStart","cacheSliderLength","activeValueIndex","undefined","track","handles","bounds","lower","upper","destroy$","ngOnInit","change","pipe","subscribe","direction","updateTrackAndHandles","onValueChange","getValue","generateHandlers","generateMarkItems","bindDraggingHandlers","toggleDragDisabled","setValue","formatValue","firstChange","ngOnDestroy","unsubscribeDrag","next","complete","writeValue","val","_value","onTouched","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","onKeyDown","e","code","keyCode","isIncrease","isDecrease","preventDefault","newVal","setActiveValue","onHandleFocusIn","index","isWriteValue","valuesEqual","cloneAndSort","isValueRange","sort","a","b","getValueToOffset","normalizedValue","valueToOffset","setActiveValueIndex","pointerValue","minimal","gap","activeIndex","Math","abs","handlerComponents","toArray","newValue","valueSorted","offsetSorted","boundParts","trackParts","handle","onDragStart","toggleDragMoving","cacheSliderProperty","getLogicalValue","showHandleTooltip","onDragMove","onDragEnd","emit","hideAllHandleTooltip","isBrowser","sliderDOM","slider","orientField","mouse","start","move","end","pluckKey","touch","TouchEvent","source","filterFunc","startPlucked$","position","findClosestValue","end$","document","moveResolved$","dragStart$","dragMove$","dragEnd$","subscribeDrag","periods","indexOf","dragStart_","bind","dragMove_","dragEnd_","unsubscribe","movable","disabled","sliderStart","getSliderStartPosition","sliderLength","getSliderLength","ratio","points","keys","parseFloat","closestOne","round","push","gaps","point","closest","toFixed","top","clientHeight","clientWidth","remove","assertValueValid","nzDefaultValue","handleIndex","key","hasOwnProperty","Platform","Directionality","provide","useExisting","multi","Dir","NgIf","providers","decorators","nzTipFormatter","getValueTypeNotMatchError","Error","Array","amount","fill","isRange","isNaN","some","v","assertValueTypeMatch","valA","valB","NzSliderModule","ɵmod","ɵinj","exports","declarations","imports","NzMarks","ɵNzSliderHandleComponent","ɵNzSliderMarksComponent","ɵNzSliderService","ɵNzSliderStepComponent","ɵNzSliderTrackComponent"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,UAAhC,EAA4CC,UAA5C,QAA8D,uBAA9D;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,uBAAhC,EAAyDC,iBAAzD,EAA4EC,SAA5E,EAAuFC,KAAvF,EAA8FC,YAA9F,EAA4GC,UAA5G,EAAwHC,QAAxH,EAAkIC,YAAlI,EAAgJC,MAAhJ,EAAwJC,QAAxJ,QAAwK,eAAxK;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,KAA7B,QAA0C,MAA1C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,GAAxC,EAA6CC,oBAA7C,QAAyE,gBAAzE;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,mBAApC,EAAyDC,WAAzD,EAAsEC,YAAtE,EAAoFC,UAApF,EAAgGC,gBAAhG,EAAkHC,KAAlH,EAAyHC,WAAzH,QAA4I,yBAA5I;AACA,OAAO,KAAKC,EAAZ,MAAoB,uBAApB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,uBAApD;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA;AACA;AACA;AACA;;;;;;AAMkGxC,IAAAA,EA0S5F,wB;;;;;AA1S4FA,IAAAA,EA6S1F,qD;AA7S0FA,IAAAA,EA8S1F,qC;;;;;;AA9S0FA,IAAAA,EAoa5F,wB;;;;;AApa4FA,IAAAA,EAua1F,sD;AAva0FA,IAAAA,EAwa1F,kEAxa0FA,EAwa1F,gB;;;;;;;;AAxa0FA,IAAAA,EA22B5F,kC;;;;mBA32B4FA,E;AAAAA,IAAAA,EA62B1F,uP;;;;;;gBA72B0FA,E;;AAAAA,IAAAA,EAs3B5F,yC;AAt3B4FA,IAAAA,EAi4B1F;AAAA,0BAj4B0FA,EAi4B1F;AAAA;AAAA,qBAj4B0FA,EAi4B1F;AAAA,aAAW,sCAAX;AAAA,M;AAj4B0FA,IAAAA,EAk4B3F,e;;;;;mBAl4B2FA,E;AAAAA,IAAAA,EAw3B1F,iT;;;;;;AAx3B0FA,IAAAA,EAm4B5F,mC;;;;mBAn4B4FA,E;AAAAA,IAAAA,EAq4B1F,uP;;;;AA14BR,MAAMyC,eAAN,CAAsB;AAClBC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,KAAlB;AACH;;AAHiB;;AAKtBF,eAAe,CAACG,IAAhB;AAAA,mBAA4GH,eAA5G;AAAA;;AACAA,eAAe,CAACI,KAAhB,kBADkG7C,EAClG;AAAA,SAAgHyC,eAAhH;AAAA,WAAgHA,eAAhH;AAAA;;AACA;AAAA,qDAFkGzC,EAElG,mBAA2FyC,eAA3F,EAAwH,CAAC;AAC7GK,IAAAA,IAAI,EAAE7C;AADuG,GAAD,CAAxH;AAAA;;AAIA,MAAM8C,uBAAN,CAA8B;AAC1BL,EAAAA,WAAW,CAACM,aAAD,EAAgBC,GAAhB,EAAqB;AAC5B,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,cAAL,GAAsB,SAAtB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,KAAL,GAAa,EAAb;;AACA,SAAKC,WAAL,GAAmB,MAAM;AACrB,UAAI,CAAC,KAAKN,aAAL,CAAmBL,UAAxB,EAAoC;AAChC,aAAKY,aAAL,CAAmB,IAAnB;AACA,aAAKC,qBAAL;AACA,aAAKP,GAAL,CAASQ,aAAT;AACH;AACJ,KAND;;AAOA,SAAKC,WAAL,GAAmB,MAAM;AACrB,UAAI,CAAC,KAAKV,aAAL,CAAmBL,UAAxB,EAAoC;AAChC,aAAKY,aAAL,CAAmB,KAAnB;AACA,aAAKN,GAAL,CAASQ,aAAT;AACH;AACJ,KALD;AAMH;;AACDE,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBX,MAAAA,MAAjB;AAAyBD,MAAAA,cAAzB;AAAyCa,MAAAA,OAAzC;AAAkDX,MAAAA;AAAlD,QAA0DQ,OAAhE;;AACA,QAAIC,MAAM,IAAIE,OAAV,IAAqBX,GAAzB,EAA8B;AAC1B,WAAKY,WAAL;AACH;;AACD,QAAIF,KAAJ,EAAW;AACP,WAAKG,kBAAL;AACA,WAAKT,qBAAL;AACH;;AACD,QAAIL,MAAJ,EAAY;AACR,UAAIA,MAAM,CAACe,YAAX,EAAyB;AACrB,aAAKX,aAAL,CAAmB,IAAnB;AACH,OAFD,MAGK;AACD,aAAKA,aAAL,CAAmB,KAAnB;AACH;AACJ;;AACD,QAAI,CAACL,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACgB,YAAhF,MAAkG,QAAtG,EAAgH;AAC5GC,MAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,MAAM,KAAKd,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,CAA7B;AACH;AACJ;;AACDe,EAAAA,KAAK,GAAG;AACJ,QAAIC,EAAJ;;AACA,KAACA,EAAE,GAAG,KAAKC,QAAX,MAAyB,IAAzB,IAAiCD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACE,aAAH,CAAiBH,KAAjB,EAA1D;AACH;;AACDf,EAAAA,aAAa,CAACmB,IAAD,EAAOC,KAAK,GAAG,KAAf,EAAsB;AAC/B,QAAIJ,EAAJ,EAAQK,EAAR;;AACA,QAAI,CAACD,KAAD,KAAW,KAAKzB,cAAL,KAAwB,SAAxB,IAAqC,CAAC,KAAK2B,OAAtD,CAAJ,EAAoE;AAChE;AACH;;AACD,QAAIH,IAAJ,EAAU;AACN,OAACH,EAAE,GAAG,KAAKM,OAAX,MAAwB,IAAxB,IAAgCN,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACG,IAAH,EAAzD;AACH,KAFD,MAGK;AACD,OAACE,EAAE,GAAG,KAAKC,OAAX,MAAwB,IAAxB,IAAgCD,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACE,IAAH,EAAzD;AACH;AACJ;;AACDb,EAAAA,kBAAkB,GAAG;AACjB,SAAKc,YAAL,GAAoB,KAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB,KAAKlB,KAA3B,CAAxB,GAA6D,GAAE,KAAKA,KAAM,EAA9F;AACH;;AACDN,EAAAA,qBAAqB,GAAG;AACpB,QAAI,KAAKqB,OAAT,EAAkB;AACdV,MAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,MAAM;AAAE,YAAIE,EAAJ;;AAAQ,eAAO,CAACA,EAAE,GAAG,KAAKM,OAAX,MAAwB,IAAxB,IAAgCN,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACU,cAAH,EAAhE;AAAsF,OAA7H;AACH;AACJ;;AACDjB,EAAAA,WAAW,GAAG;AACV,UAAMkB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMnB,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMF,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMsB,aAAa,GAAGD,QAAQ,GACxB;AACE,OAACnB,OAAO,GAAG,KAAH,GAAW,QAAnB,GAA+B,GAAEF,MAAO,GAD1C;AAEE,OAACE,OAAO,GAAG,QAAH,GAAc,KAAtB,GAA8B,MAFhC;AAGEqB,MAAAA,SAAS,EAAErB,OAAO,GAAG,IAAH,GAAW;AAH/B,KADwB,GAMxBsB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,0BAAL,EAAlB,CAAd,EAAoE;AAAEH,MAAAA,SAAS,EAAG,cAAarB,OAAO,GAAI,KAAKX,GAAL,KAAa,KAAb,GAAqB,GAArB,GAA2B,GAA/B,GAAsC,KAAKA,GAAL,KAAa,KAAb,GAAqB,GAArB,GAA2B,GAAI;AAAvG,KAApE,CANN;AAOA,SAAKC,KAAL,GAAa8B,aAAb;AACA,SAAKlC,GAAL,CAASuC,YAAT;AACH;;AACDD,EAAAA,0BAA0B,GAAG;AACzB,QAAIE,IAAI,GAAG,KAAK1B,OAAL,GAAe,MAAf,GAAyB,GAAE,KAAKF,MAAO,GAAlD;AACA,QAAI6B,KAAK,GAAG,KAAK3B,OAAL,GAAgB,GAAE,KAAKF,MAAO,GAA9B,GAAmC,MAA/C;;AACA,QAAI,KAAKT,GAAL,KAAa,KAAjB,EAAwB;AACpB,YAAMuC,GAAG,GAAGF,IAAZ;AACAA,MAAAA,IAAI,GAAGC,KAAP;AACAA,MAAAA,KAAK,GAAGC,GAAR;AACH;;AACD,WAAO;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACH;;AA1FyB;;AA4F9B3C,uBAAuB,CAACH,IAAxB;AAAA,mBAAoHG,uBAApH,EAlGkG/C,EAkGlG,mBAA6JyC,eAA7J,GAlGkGzC,EAkGlG,mBAAyLA,EAAE,CAAC4F,iBAA5L;AAAA;;AACA7C,uBAAuB,CAAC8C,IAAxB,kBAnGkG7F,EAmGlG;AAAA,QAAwG+C,uBAAxG;AAAA;AAAA;AAAA;AAnGkG/C,MAAAA,EAmGlG;AAnGkGA,MAAAA,EAmGlG,aAAgnBiC,kBAAhnB;AAAA;;AAAA;AAAA;;AAnGkGjC,MAAAA,EAmGlG,qBAnGkGA,EAmGlG;AAnGkGA,MAAAA,EAmGlG,qBAnGkGA,EAmGlG;AAAA;AAAA;AAAA;AAAA;AAnGkGA,MAAAA,EAmGlG;AAAA,eAAwG,iBAAxG;AAAA;AAAA,eAAwG,iBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnGkGA,EAmGlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAnGkGA,MAAAA,EAoG9F,0BADJ;AAAA;;AAAA;AAnGkGA,MAAAA,EAyG5F,oNANN;AAAA;AAAA;AAAA,eAW0CgC,EAAE,CAACC,kBAX7C,EAWsdE,EAAE,CAAC2D,OAXzd;AAAA;AAAA;AAAA;;AAYAnG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwB,uBAAuB,CAACgD,SAFjB,EAE4B,QAF5B,EAEsC,KAAK,CAF3C,CAAV;;AAGA;AAAA,qDAlHkG/F,EAkHlG,mBAA2F+C,uBAA3F,EAAgI,CAAC;AACrHD,IAAAA,IAAI,EAAE5C,SAD+G;AAErH8F,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAE9F,uBAAuB,CAAC+F,MAD1C;AAECC,MAAAA,aAAa,EAAE/F,iBAAiB,CAACgG,IAFlC;AAGCC,MAAAA,QAAQ,EAAE,kBAHX;AAICC,MAAAA,QAAQ,EAAE,gBAJX;AAKCC,MAAAA,mBAAmB,EAAE,KALtB;AAMCC,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBmB;AAkBCC,MAAAA,IAAI,EAAE;AACF,wBAAgB,eADd;AAEF,wBAAgB;AAFd;AAlBP,KAAD;AAF+G,GAAD,CAAhI,EAyB4B,YAAY;AAAE,WAAO,CAAC;AAAE3D,MAAAA,IAAI,EAAEL;AAAR,KAAD,EAA4B;AAAEK,MAAAA,IAAI,EAAE9C,EAAE,CAAC4F;AAAX,KAA5B,CAAP;AAAqE,GAzB/G,EAyBiI;AAAEpB,IAAAA,QAAQ,EAAE,CAAC;AAC9H1B,MAAAA,IAAI,EAAEzC,SADwH;AAE9H2F,MAAAA,IAAI,EAAE,CAAC,QAAD,EAAW;AAAEU,QAAAA,MAAM,EAAE;AAAV,OAAX;AAFwH,KAAD,CAAZ;AAGjH7B,IAAAA,OAAO,EAAE,CAAC;AACV/B,MAAAA,IAAI,EAAEzC,SADI;AAEV2F,MAAAA,IAAI,EAAE,CAAC/D,kBAAD,EAAqB;AAAEyE,QAAAA,MAAM,EAAE;AAAV,OAArB;AAFI,KAAD,CAHwG;AAMjHxB,IAAAA,QAAQ,EAAE,CAAC;AACXpC,MAAAA,IAAI,EAAExC;AADK,KAAD,CANuG;AAQjHyD,IAAAA,OAAO,EAAE,CAAC;AACVjB,MAAAA,IAAI,EAAExC;AADI,KAAD,CARwG;AAUjHuD,IAAAA,MAAM,EAAE,CAAC;AACTf,MAAAA,IAAI,EAAExC;AADG,KAAD,CAVyG;AAYjHwD,IAAAA,KAAK,EAAE,CAAC;AACRhB,MAAAA,IAAI,EAAExC;AADE,KAAD,CAZ0G;AAcjH4C,IAAAA,cAAc,EAAE,CAAC;AACjBJ,MAAAA,IAAI,EAAExC;AADW,KAAD,CAdiG;AAgBjHqG,IAAAA,gBAAgB,EAAE,CAAC;AACnB7D,MAAAA,IAAI,EAAExC;AADa,KAAD,CAhB+F;AAkBjH0E,IAAAA,gBAAgB,EAAE,CAAC;AACnBlC,MAAAA,IAAI,EAAExC;AADa,KAAD,CAlB+F;AAoBjH6C,IAAAA,MAAM,EAAE,CAAC;AACTL,MAAAA,IAAI,EAAExC;AADG,KAAD,CApByG;AAsBjH8C,IAAAA,GAAG,EAAE,CAAC;AACNN,MAAAA,IAAI,EAAExC;AADA,KAAD;AAtB4G,GAzBjI;AAAA;;AAmDA,MAAMsG,sBAAN,CAA6B;AACzBlE,EAAAA,WAAW,GAAG;AACV,SAAKmB,MAAL,GAAc,CAAd;AACA,SAAKE,OAAL,GAAe,KAAf;AACA,SAAKX,GAAL,GAAW,KAAX;AACA,SAAKyD,MAAL,GAAc,CAAd;AACA,SAAK3B,QAAL,GAAgB,KAAhB;AACA,SAAK4B,QAAL,GAAgB,KAAhB;AACA,SAAKzD,KAAL,GAAa,EAAb;AACH;;AACDM,EAAAA,WAAW,GAAG;AACV,UAAMuB,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMnB,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMgD,UAAU,GAAG,KAAKD,QAAL,GAAgB,SAAhB,GAA4B,QAA/C;AACA,UAAMjD,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMgD,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMG,YAAY,GAAG9B,QAAQ,GACvB;AACE,OAACnB,OAAO,GAAG,KAAH,GAAW,QAAnB,GAA+B,GAAEF,MAAO,GAD1C;AAEE,OAACE,OAAO,GAAG,QAAH,GAAc,KAAtB,GAA8B,MAFhC;AAGEkD,MAAAA,MAAM,EAAG,GAAEJ,MAAO,GAHpB;AAIEE,MAAAA;AAJF,KADuB,GAOvB1B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,0BAAL,EAAlB,CAAd,EAAoE;AAAE2B,MAAAA,KAAK,EAAG,GAAEL,MAAO,GAAnB;AAAuBE,MAAAA;AAAvB,KAApE,CAPN;AAQA,SAAK1D,KAAL,GAAa2D,YAAb;AACH;;AACDzB,EAAAA,0BAA0B,GAAG;AACzB,QAAIE,IAAI,GAAG,KAAK1B,OAAL,GAAe,MAAf,GAAyB,GAAE,KAAKF,MAAO,GAAlD;AACA,QAAI6B,KAAK,GAAG,KAAK3B,OAAL,GAAgB,GAAE,KAAKF,MAAO,GAA9B,GAAmC,MAA/C;;AACA,QAAI,KAAKT,GAAL,KAAa,KAAjB,EAAwB;AACpB,YAAMuC,GAAG,GAAGF,IAAZ;AACAA,MAAAA,IAAI,GAAGC,KAAP;AACAA,MAAAA,KAAK,GAAGC,GAAR;AACH;;AACD,WAAO;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACH;;AAnCwB;;AAqC7BkB,sBAAsB,CAAChE,IAAvB;AAAA,mBAAmHgE,sBAAnH;AAAA;;AACAA,sBAAsB,CAACf,IAAvB,kBA3MkG7F,EA2MlG;AAAA,QAAuG4G,sBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3MkG5G,EA2MlG;AAAA;AAAA;AAAA;AAAA;AAAA;AA3MkGA,MAAAA,EA2MkQ,uBAApW;AAAA;;AAAA;AA3MkGA,MAAAA,EA2MgS,iCAAlY;AAAA;AAAA;AAAA,eAAmcmC,EAAE,CAAC2D,OAAtc;AAAA;AAAA;AAAA;;AACAnG,UAAU,CAAC,CACP6B,WAAW,EADJ,CAAD,EAEPoF,sBAAsB,CAACb,SAFhB,EAE2B,QAF3B,EAEqC,KAAK,CAF1C,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPqF,sBAAsB,CAACb,SAFhB,EAE2B,SAF3B,EAEsC,KAAK,CAF3C,CAAV;;AAGApG,UAAU,CAAC,CACP6B,WAAW,EADJ,CAAD,EAEPoF,sBAAsB,CAACb,SAFhB,EAE2B,QAF3B,EAEqC,KAAK,CAF1C,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPqF,sBAAsB,CAACb,SAFhB,EAE2B,UAF3B,EAEuC,KAAK,CAF5C,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPqF,sBAAsB,CAACb,SAFhB,EAE2B,UAF3B,EAEuC,KAAK,CAF5C,CAAV;;AAGA;AAAA,qDA3NkG/F,EA2NlG,mBAA2F4G,sBAA3F,EAA+H,CAAC;AACpH9D,IAAAA,IAAI,EAAE5C,SAD8G;AAEpH8F,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAE9F,uBAAuB,CAAC+F,MAD1C;AAECC,MAAAA,aAAa,EAAE/F,iBAAiB,CAACgG,IAFlC;AAGCC,MAAAA,QAAQ,EAAE,iBAHX;AAICC,MAAAA,QAAQ,EAAE,eAJX;AAKCC,MAAAA,mBAAmB,EAAE,KALtB;AAMCC,MAAAA,QAAQ,EAAG;AANZ,KAAD;AAF8G,GAAD,CAA/H,QAU4B;AAAE3C,IAAAA,MAAM,EAAE,CAAC;AACvBf,MAAAA,IAAI,EAAExC;AADiB,KAAD,CAAV;AAEZyD,IAAAA,OAAO,EAAE,CAAC;AACVjB,MAAAA,IAAI,EAAExC;AADI,KAAD,CAFG;AAIZ8C,IAAAA,GAAG,EAAE,CAAC;AACNN,MAAAA,IAAI,EAAExC;AADA,KAAD,CAJO;AAMZuG,IAAAA,MAAM,EAAE,CAAC;AACT/D,MAAAA,IAAI,EAAExC;AADG,KAAD,CANI;AAQZ4E,IAAAA,QAAQ,EAAE,CAAC;AACXpC,MAAAA,IAAI,EAAExC;AADK,KAAD,CARE;AAUZwG,IAAAA,QAAQ,EAAE,CAAC;AACXhE,MAAAA,IAAI,EAAExC;AADK,KAAD;AAVE,GAV5B;AAAA;;AAwBA,MAAM6G,qBAAN,CAA4B;AACxBzE,EAAAA,WAAW,GAAG;AACV,SAAK0E,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKpC,QAAL,GAAgB,KAAhB;AACA,SAAK4B,QAAL,GAAgB,KAAhB;AACA,SAAKS,KAAL,GAAa,EAAb;AACH;;AACD5D,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAM;AAAE0D,MAAAA,UAAF;AAAcF,MAAAA,UAAd;AAA0BC,MAAAA,UAA1B;AAAsCtD,MAAAA;AAAtC,QAAkDH,OAAxD;;AACA,QAAI0D,UAAU,IAAIvD,OAAlB,EAA2B;AACvB,WAAKyD,UAAL;AACH;;AACD,QAAIF,UAAU,IAAIF,UAAd,IAA4BC,UAA5B,IAA0CtD,OAA9C,EAAuD;AACnD,WAAK0D,iBAAL;AACH;AACJ;;AACDC,EAAAA,SAAS,CAACC,MAAD,EAASC,IAAT,EAAe;AACpB,WAAOA,IAAI,CAAC9D,KAAZ;AACH;;AACD0D,EAAAA,UAAU,GAAG;AACT,UAAMK,MAAM,GAAG,KAAK3C,QAAL,GAAgB,QAAhB,GAA2B,MAA1C;AACA,SAAKqC,KAAL,GAAa,KAAKD,UAAL,CAAgBjG,GAAhB,CAAoByG,IAAI,IAAI;AACrC,YAAM;AAAEhE,QAAAA,KAAF;AAASiE,QAAAA;AAAT,UAAoBD,IAA1B;AACA,UAAIjE,MAAM,GAAGiE,IAAI,CAACjE,MAAlB;AACA,YAAMmE,KAAK,GAAG,KAAKC,GAAL,GAAW,KAAKC,GAA9B;;AACA,UAAI,KAAKnE,OAAT,EAAkB;AACdF,QAAAA,MAAM,GAAI,CAAC,KAAKoE,GAAL,GAAWnE,KAAZ,IAAqBkE,KAAtB,GAA+B,GAAxC;AACH;;AACD,aAAO;AACHlE,QAAAA,KADG;AAEHD,QAAAA,MAFG;AAGHkE,QAAAA,MAHG;AAIH5E,QAAAA,MAAM,EAAE,KAJL;AAKHE,QAAAA,KAAK,EAAE;AACH,WAACwE,MAAD,GAAW,GAAEhE,MAAO;AADjB;AALJ,OAAP;AASH,KAhBY,CAAb;AAiBH;;AACD4D,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKF,KAAL,IAAc,KAAKH,UAAL,KAAoB,IAAlC,IAA0C,KAAKC,UAAL,KAAoB,IAAlE,EAAwE;AACpE,WAAKE,KAAL,CAAWY,OAAX,CAAmBP,IAAI,IAAI;AACvB,cAAM9D,KAAK,GAAG8D,IAAI,CAAC9D,KAAnB;AACA,cAAMsE,QAAQ,GAAI,CAAC,KAAKtB,QAAN,IAAkBhD,KAAK,KAAK,KAAKuD,UAAlC,IACZ,KAAKP,QAAL,IAAiBhD,KAAK,IAAI,KAAKuD,UAA/B,IAA6CvD,KAAK,IAAI,KAAKsD,UADhE;AAEAQ,QAAAA,IAAI,CAACzE,MAAL,GAAciF,QAAd;AACH,OALD;AAMH;AACJ;;AAlDuB;;AAoD5BjB,qBAAqB,CAACvE,IAAtB;AAAA,mBAAkHuE,qBAAlH;AAAA;;AACAA,qBAAqB,CAACtB,IAAtB,kBAxSkG7F,EAwSlG;AAAA,QAAsGmH,qBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxSkGnH,EAwSlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAxSkGA,MAAAA,EAyS9F,4BADJ;AAxSkGA,MAAAA,EA0S5F,sEAFN;AAxSkGA,MAAAA,EAgT9F,eARJ;AAAA;;AAAA;AAxSkGA,MAAAA,EA4SzE,aAJzB;AAxSkGA,MAAAA,EA4SzE,gEAJzB;AAAA;AAAA;AAAA,eAS0CmC,EAAE,CAACkG,OAT7C,EASoJlG,EAAE,CAAC2D,OATvJ;AAAA;AAAA;AAAA;;AAUAnG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEP4F,qBAAqB,CAACpB,SAFf,EAE0B,UAF1B,EAEsC,KAAK,CAF3C,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEP4F,qBAAqB,CAACpB,SAFf,EAE0B,UAF1B,EAEsC,KAAK,CAF3C,CAAV;;AAGA;AAAA,qDAxTkG/F,EAwTlG,mBAA2FmH,qBAA3F,EAA8H,CAAC;AACnHrE,IAAAA,IAAI,EAAE5C,SAD6G;AAEnH8F,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAE9F,uBAAuB,CAAC+F,MAD1C;AAECC,MAAAA,aAAa,EAAE/F,iBAAiB,CAACgG,IAFlC;AAGCC,MAAAA,QAAQ,EAAE,gBAHX;AAICC,MAAAA,QAAQ,EAAE,cAJX;AAKCC,MAAAA,mBAAmB,EAAE,KALtB;AAMCC,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfmB,KAAD;AAF6G,GAAD,CAA9H,QAmB4B;AAAEY,IAAAA,UAAU,EAAE,CAAC;AAC3BtE,MAAAA,IAAI,EAAExC;AADqB,KAAD,CAAd;AAEZ+G,IAAAA,UAAU,EAAE,CAAC;AACbvE,MAAAA,IAAI,EAAExC;AADO,KAAD,CAFA;AAIZgH,IAAAA,UAAU,EAAE,CAAC;AACbxE,MAAAA,IAAI,EAAExC;AADO,KAAD,CAJA;AAMZ4H,IAAAA,GAAG,EAAE,CAAC;AACNpF,MAAAA,IAAI,EAAExC;AADA,KAAD,CANO;AAQZ2H,IAAAA,GAAG,EAAE,CAAC;AACNnF,MAAAA,IAAI,EAAExC;AADA,KAAD,CARO;AAUZ4E,IAAAA,QAAQ,EAAE,CAAC;AACXpC,MAAAA,IAAI,EAAExC;AADK,KAAD,CAVE;AAYZwG,IAAAA,QAAQ,EAAE,CAAC;AACXhE,MAAAA,IAAI,EAAExC;AADK,KAAD,CAZE;AAcZyD,IAAAA,OAAO,EAAE,CAAC;AACVjB,MAAAA,IAAI,EAAExC;AADI,KAAD;AAdG,GAnB5B;AAAA;;AAqCA,MAAMgI,sBAAN,CAA6B;AACzB5F,EAAAA,WAAW,GAAG;AACV,SAAK0E,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKpC,QAAL,GAAgB,KAAhB;AACA,SAAK4B,QAAL,GAAgB,KAAhB;AACA,SAAKyB,KAAL,GAAa,EAAb;AACH;;AACD5E,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAM;AAAE0D,MAAAA,UAAF;AAAcF,MAAAA,UAAd;AAA0BC,MAAAA,UAA1B;AAAsCtD,MAAAA;AAAtC,QAAkDH,OAAxD;;AACA,QAAI0D,UAAU,IAAIvD,OAAlB,EAA2B;AACvB,WAAKyE,UAAL;AACH;;AACD,QAAIlB,UAAU,IAAIF,UAAd,IAA4BC,UAA5B,IAA0CtD,OAA9C,EAAuD;AACnD,WAAK0D,iBAAL;AACH;AACJ;;AACDC,EAAAA,SAAS,CAACC,MAAD,EAASG,IAAT,EAAe;AACpB,WAAOA,IAAI,CAAChE,KAAZ;AACH;;AACD0E,EAAAA,UAAU,GAAG;AACT,UAAMR,KAAK,GAAG,KAAKC,GAAL,GAAW,KAAKC,GAA9B;AACA,SAAKK,KAAL,GAAa,KAAKjB,UAAL,CAAgBjG,GAAhB,CAAoByG,IAAI,IAAI;AACrC,YAAM;AAAEhE,QAAAA,KAAF;AAASD,QAAAA,MAAT;AAAiBkE,QAAAA;AAAjB,UAA4BD,IAAlC;AACA,YAAMzE,KAAK,GAAG,KAAKoF,aAAL,CAAmB3E,KAAnB,EAA0BkE,KAA1B,EAAiCD,MAAjC,CAAd;AACA,YAAMW,KAAK,GAAGC,cAAc,CAACZ,MAAD,CAAd,GAAyBA,MAAM,CAACW,KAAhC,GAAwCX,MAAtD;AACA,aAAO;AACHW,QAAAA,KADG;AAEH7E,QAAAA,MAFG;AAGHR,QAAAA,KAHG;AAIHS,QAAAA,KAJG;AAKHiE,QAAAA,MALG;AAMH5E,QAAAA,MAAM,EAAE;AANL,OAAP;AAQH,KAZY,CAAb;AAaH;;AACDsF,EAAAA,aAAa,CAAC3E,KAAD,EAAQkE,KAAR,EAAeD,MAAf,EAAuB;AAChC,QAAI1E,KAAJ;AACA,UAAMuF,SAAS,GAAG,KAAK7E,OAAL,GAAe,KAAKkE,GAAL,GAAW,KAAKC,GAAhB,GAAsBpE,KAArC,GAA6CA,KAA/D;;AACA,QAAI,KAAKoB,QAAT,EAAmB;AACf7B,MAAAA,KAAK,GAAG;AACJwF,QAAAA,YAAY,EAAE,MADV;AAEJC,QAAAA,MAAM,EAAG,GAAG,CAACF,SAAS,GAAG,KAAKV,GAAlB,IAAyBF,KAA1B,GAAmC,GAAI;AAF9C,OAAR;AAIH,KALD,MAMK;AACD3E,MAAAA,KAAK,GAAG;AACJ+B,QAAAA,SAAS,EAAG,yBADR;AAEJK,QAAAA,IAAI,EAAG,GAAG,CAACmD,SAAS,GAAG,KAAKV,GAAlB,IAAyBF,KAA1B,GAAmC,GAAI;AAF5C,OAAR;AAIH;;AACD,QAAIW,cAAc,CAACZ,MAAD,CAAd,IAA0BA,MAAM,CAAC1E,KAArC,EAA4C;AACxCA,MAAAA,KAAK,GAAGgC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjC,KAAlB,CAAd,EAAwC0E,MAAM,CAAC1E,KAA/C,CAAR;AACH;;AACD,WAAOA,KAAP;AACH;;AACDoE,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKc,KAAL,IAAc,KAAKnB,UAAL,KAAoB,IAAlC,IAA0C,KAAKC,UAAL,KAAoB,IAAlE,EAAwE;AACpE,WAAKkB,KAAL,CAAWJ,OAAX,CAAmBL,IAAI,IAAI;AACvB,cAAMhE,KAAK,GAAGgE,IAAI,CAAChE,KAAnB;AACA,cAAMsE,QAAQ,GAAI,CAAC,KAAKtB,QAAN,IAAkBhD,KAAK,KAAK,KAAKuD,UAAlC,IACZ,KAAKP,QAAL,IAAiBhD,KAAK,IAAI,KAAKuD,UAA/B,IAA6CvD,KAAK,IAAI,KAAKsD,UADhE;AAEAU,QAAAA,IAAI,CAAC3E,MAAL,GAAciF,QAAd;AACH,OALD;AAMH;AACJ;;AAlEwB;;AAoE7BE,sBAAsB,CAAC1F,IAAvB;AAAA,mBAAmH0F,sBAAnH;AAAA;;AACAA,sBAAsB,CAACzC,IAAvB,kBAlakG7F,EAkalG;AAAA,QAAuGsI,sBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlakGtI,EAkalG;AAAA;AAAA;AAAA;AAAA;AAAA;AAlakGA,MAAAA,EAma9F,4BADJ;AAlakGA,MAAAA,EAoa5F,uEAFN;AAlakGA,MAAAA,EA2a9F,eATJ;AAAA;;AAAA;AAlakGA,MAAAA,EAsazE,aAJzB;AAlakGA,MAAAA,EAsazE,gEAJzB;AAAA;AAAA;AAAA,eAU0CmC,EAAE,CAACkG,OAV7C,EAUoJlG,EAAE,CAAC2D,OAVvJ;AAAA;AAAA;AAAA;;AAWAnG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEP+G,sBAAsB,CAACvC,SAFhB,EAE2B,UAF3B,EAEuC,KAAK,CAF5C,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEP+G,sBAAsB,CAACvC,SAFhB,EAE2B,UAF3B,EAEuC,KAAK,CAF5C,CAAV;;AAGA;AAAA,qDAnbkG/F,EAmblG,mBAA2FsI,sBAA3F,EAA+H,CAAC;AACpHxF,IAAAA,IAAI,EAAE5C,SAD8G;AAEpH8F,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAE9F,uBAAuB,CAAC+F,MAD1C;AAECC,MAAAA,aAAa,EAAE/F,iBAAiB,CAACgG,IAFlC;AAGCG,MAAAA,mBAAmB,EAAE,KAHtB;AAICF,MAAAA,QAAQ,EAAE,iBAJX;AAKCC,MAAAA,QAAQ,EAAE,eALX;AAMCE,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBmB,KAAD;AAF8G,GAAD,CAA/H,QAoB4B;AAAEY,IAAAA,UAAU,EAAE,CAAC;AAC3BtE,MAAAA,IAAI,EAAExC;AADqB,KAAD,CAAd;AAEZ+G,IAAAA,UAAU,EAAE,CAAC;AACbvE,MAAAA,IAAI,EAAExC;AADO,KAAD,CAFA;AAIZgH,IAAAA,UAAU,EAAE,CAAC;AACbxE,MAAAA,IAAI,EAAExC;AADO,KAAD,CAJA;AAMZ4H,IAAAA,GAAG,EAAE,CAAC;AACNpF,MAAAA,IAAI,EAAExC;AADA,KAAD,CANO;AAQZ2H,IAAAA,GAAG,EAAE,CAAC;AACNnF,MAAAA,IAAI,EAAExC;AADA,KAAD,CARO;AAUZ4E,IAAAA,QAAQ,EAAE,CAAC;AACXpC,MAAAA,IAAI,EAAExC;AADK,KAAD,CAVE;AAYZwG,IAAAA,QAAQ,EAAE,CAAC;AACXhE,MAAAA,IAAI,EAAExC;AADK,KAAD,CAZE;AAcZyD,IAAAA,OAAO,EAAE,CAAC;AACVjB,MAAAA,IAAI,EAAExC;AADI,KAAD;AAdG,GApB5B;AAAA;;AAqCA,SAASqI,cAAT,CAAwBZ,MAAxB,EAAgC;AAC5B,SAAO,OAAOA,MAAP,KAAkB,QAAzB;AACH;;AAED,MAAMgB,iBAAN,CAAwB;AACpBrG,EAAAA,WAAW,CAACM,aAAD,EAAgBC,GAAhB,EAAqB+F,QAArB,EAA+BC,cAA/B,EAA+C;AACtD,SAAKjG,aAAL,GAAqBA,aAArB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAK+F,QAAL,GAAgBA,QAAhB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,KAAL,GAAa,GAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,gBAAL,GAAwB,SAAxB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAKC,eAAL,GAAuB,IAAIvJ,YAAJ,EAAvB;AACA,SAAKuD,KAAL,GAAa,IAAb;AACA,SAAKiG,gBAAL,GAAwB,IAAxB;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACA,SAAKC,gBAAL,GAAwBC,SAAxB,CArBsD,CAqBnB;;AACnC,SAAKC,KAAL,GAAa;AAAEtG,MAAAA,MAAM,EAAE,IAAV;AAAgBgD,MAAAA,MAAM,EAAE;AAAxB,KAAb,CAtBsD,CAsBT;;AAC7C,SAAKuD,OAAL,GAAe,EAAf,CAvBsD,CAuBnC;;AACnB,SAAK9C,UAAL,GAAkB,IAAlB,CAxBsD,CAwB9B;;AACxB,SAAK+C,MAAL,GAAc;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAd,CAzBsD,CAyBV;;AAC5C,SAAKnH,GAAL,GAAW,KAAX;AACA,SAAKoH,QAAL,GAAgB,IAAI1J,OAAJ,EAAhB;AACH;;AACD2J,EAAAA,QAAQ,GAAG;AACP,QAAIlG,EAAJ;;AACA,SAAKnB,GAAL,GAAW,KAAK6F,cAAL,CAAoBnF,KAA/B;AACA,KAACS,EAAE,GAAG,KAAK0E,cAAL,CAAoByB,MAA1B,MAAsC,IAAtC,IAA8CnG,EAAE,KAAK,KAAK,CAA1D,GAA8D,KAAK,CAAnE,GAAuEA,EAAE,CAACoG,IAAH,CAAQ1J,SAAS,CAAC,KAAKuJ,QAAN,CAAjB,EAAkCI,SAAlC,CAA6CC,SAAD,IAAe;AAC9H,WAAKzH,GAAL,GAAWyH,SAAX;AACA,WAAK5H,GAAL,CAASQ,aAAT;AACA,WAAKqH,qBAAL;AACA,WAAKC,aAAL,CAAmB,KAAKC,QAAL,CAAc,IAAd,CAAnB;AACH,KALsE,CAAvE;AAMA,SAAKZ,OAAL,GAAea,gBAAgB,CAAC,KAAK5B,OAAL,GAAe,CAAf,GAAmB,CAApB,CAA/B;AACA,SAAK/B,UAAL,GAAkB,KAAKkC,OAAL,GAAe,KAAK0B,iBAAL,CAAuB,KAAK1B,OAA5B,CAAf,GAAsD,IAAxE;AACA,SAAK2B,oBAAL;AACA,SAAKC,kBAAL,CAAwB,KAAKlC,UAA7B;;AACA,QAAI,KAAK8B,QAAL,OAAoB,IAAxB,EAA8B;AAC1B,WAAKK,QAAL,CAAc,KAAKC,WAAL,CAAiB,IAAjB,CAAd;AACH;AACJ;;AACD3H,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAM;AAAEsF,MAAAA,UAAF;AAAcM,MAAAA,OAAd;AAAuBH,MAAAA;AAAvB,QAAmCzF,OAAzC;;AACA,QAAIsF,UAAU,IAAI,CAACA,UAAU,CAACqC,WAA9B,EAA2C;AACvC,WAAKH,kBAAL,CAAwBlC,UAAU,CAAChF,YAAnC;AACH,KAFD,MAGK,IAAIsF,OAAO,IAAI,CAACA,OAAO,CAAC+B,WAAxB,EAAqC;AACtC,WAAKjE,UAAL,GAAkB,KAAKkC,OAAL,GAAe,KAAK0B,iBAAL,CAAuB,KAAK1B,OAA5B,CAAf,GAAsD,IAAxE;AACH,KAFI,MAGA,IAAIH,OAAO,IAAI,CAACA,OAAO,CAACkC,WAAxB,EAAqC;AACtC,WAAKnB,OAAL,GAAea,gBAAgB,CAAC5B,OAAO,CAACnF,YAAR,GAAuB,CAAvB,GAA2B,CAA5B,CAA/B;AACA,WAAKmH,QAAL,CAAc,KAAKC,WAAL,CAAiB,IAAjB,CAAd;AACH;AACJ;;AACDE,EAAAA,WAAW,GAAG;AACV,SAAKC,eAAL;AACA,SAAKjB,QAAL,CAAckB,IAAd;AACA,SAAKlB,QAAL,CAAcmB,QAAd;AACH;;AACDC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,SAAKR,QAAL,CAAcQ,GAAd,EAAmB,IAAnB;AACH;;AACDd,EAAAA,aAAa,CAACe,MAAD,EAAS,CAAG;;AACzBC,EAAAA,SAAS,GAAG,CAAG;;AACfC,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,SAAKlB,aAAL,GAAqBkB,EAArB;AACH;;AACDC,EAAAA,iBAAiB,CAACD,EAAD,EAAK;AAClB,SAAKF,SAAL,GAAiBE,EAAjB;AACH;;AACDE,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AACzB,SAAKlD,UAAL,GAAkBkD,UAAlB;AACA,SAAKhB,kBAAL,CAAwBgB,UAAxB;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,SAAS,CAACC,CAAD,EAAI;AACT,QAAI,KAAKpD,UAAT,EAAqB;AACjB;AACH;;AACD,UAAMqD,IAAI,GAAGD,CAAC,CAACE,OAAf;AACA,UAAMC,UAAU,GAAGF,IAAI,KAAK3M,WAAT,IAAwB2M,IAAI,KAAK1M,QAApD;AACA,UAAM6M,UAAU,GAAGH,IAAI,KAAKzM,UAAT,IAAuByM,IAAI,KAAKxM,UAAnD;;AACA,QAAI,EAAE0M,UAAU,IAAIC,UAAhB,CAAJ,EAAiC;AAC7B;AACH;;AACDJ,IAAAA,CAAC,CAACK,cAAF;AACA,QAAI/E,IAAI,GAAG,CAAC8E,UAAU,GAAG,CAAC,KAAK/C,MAAT,GAAkB,KAAKA,MAAlC,KAA6C,KAAKJ,SAAL,GAAiB,CAAC,CAAlB,GAAsB,CAAnE,CAAX;AACA3B,IAAAA,IAAI,GAAG,KAAKxE,GAAL,KAAa,KAAb,GAAqBwE,IAAI,GAAG,CAAC,CAA7B,GAAiCA,IAAxC;AACA,UAAMgF,MAAM,GAAG,KAAKvD,OAAL,GACT,KAAKvF,KAAL,CAAW,KAAKmG,gBAAhB,IAAoCrC,IAD3B,GAET,KAAK9D,KAAL,GAAa8D,IAFnB;AAGA,SAAKiF,cAAL,CAAoBpL,mBAAmB,CAACmL,MAAD,EAAS,KAAKlD,KAAd,EAAqB,KAAKD,KAA1B,CAAvC;AACH;;AACDqD,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACnB,SAAK9C,gBAAL,GAAwB8C,KAAxB;AACH;;AACD1B,EAAAA,QAAQ,CAACvH,KAAD,EAAQkJ,YAAY,GAAG,KAAvB,EAA8B;AAClC,QAAIA,YAAJ,EAAkB;AACd,WAAKlJ,KAAL,GAAa,KAAKwH,WAAL,CAAiBxH,KAAjB,CAAb;AACA,WAAKgH,qBAAL;AACH,KAHD,MAIK,IAAI,CAACmC,WAAW,CAAC,KAAKnJ,KAAN,EAAaA,KAAb,CAAhB,EAAqC;AACtC,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKgH,qBAAL;AACA,WAAKC,aAAL,CAAmB,KAAKC,QAAL,CAAc,IAAd,CAAnB;AACH;AACJ;;AACDA,EAAAA,QAAQ,CAACkC,YAAY,GAAG,KAAhB,EAAuB;AAC3B,QAAIA,YAAY,IAAI,KAAKpJ,KAArB,IAA8BqJ,YAAY,CAAC,KAAKrJ,KAAN,CAA9C,EAA4D;AACxD,aAAO,CAAC,GAAG,KAAKA,KAAT,EAAgBsJ,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAnC,CAAP;AACH;;AACD,WAAO,KAAKxJ,KAAZ;AACH;AACD;AACJ;AACA;;;AACIyJ,EAAAA,gBAAgB,CAACzJ,KAAD,EAAQ;AACpB,QAAI0J,eAAe,GAAG1J,KAAtB;;AACA,QAAI,OAAO0J,eAAP,KAA2B,WAA/B,EAA4C;AACxCA,MAAAA,eAAe,GAAG,KAAKxC,QAAL,CAAc,IAAd,CAAlB;AACH;;AACD,WAAOmC,YAAY,CAACK,eAAD,CAAZ,GACDA,eAAe,CAACnM,GAAhB,CAAoBwK,GAAG,IAAI,KAAK4B,aAAL,CAAmB5B,GAAnB,CAA3B,CADC,GAED,KAAK4B,aAAL,CAAmBD,eAAnB,CAFN;AAGH;AACD;AACJ;AACA;;;AACIE,EAAAA,mBAAmB,CAACC,YAAD,EAAe;AAC9B,UAAM7J,KAAK,GAAG,KAAKkH,QAAL,EAAd;;AACA,QAAImC,YAAY,CAACrJ,KAAD,CAAhB,EAAyB;AACrB,UAAI8J,OAAO,GAAG,IAAd;AACA,UAAIC,GAAJ;AACA,UAAIC,WAAW,GAAG,CAAC,CAAnB;AACAhK,MAAAA,KAAK,CAACqE,OAAN,CAAc,CAAC0D,GAAD,EAAMkB,KAAN,KAAgB;AAC1Bc,QAAAA,GAAG,GAAGE,IAAI,CAACC,GAAL,CAASL,YAAY,GAAG9B,GAAxB,CAAN;;AACA,YAAI+B,OAAO,KAAK,IAAZ,IAAoBC,GAAG,GAAGD,OAA9B,EAAuC;AACnCA,UAAAA,OAAO,GAAGC,GAAV;AACAC,UAAAA,WAAW,GAAGf,KAAd;AACH;AACJ,OAND;AAOA,WAAK9C,gBAAL,GAAwB6D,WAAxB;AACA,WAAKG,iBAAL,CAAuBC,OAAvB,GAAiCJ,WAAjC,EAA8CxJ,KAA9C;AACH,KAbD,MAcK;AACD,WAAK2J,iBAAL,CAAuBC,OAAvB,GAAiC,CAAjC,EAAoC5J,KAApC;AACH;AACJ;;AACDuI,EAAAA,cAAc,CAACc,YAAD,EAAe;AACzB,QAAIR,YAAY,CAAC,KAAKrJ,KAAN,CAAhB,EAA8B;AAC1B,YAAMqK,QAAQ,GAAG,CAAC,GAAG,KAAKrK,KAAT,CAAjB;AACAqK,MAAAA,QAAQ,CAAC,KAAKlE,gBAAN,CAAR,GAAkC0D,YAAlC;AACA,WAAKtC,QAAL,CAAc8C,QAAd;AACH,KAJD,MAKK;AACD,WAAK9C,QAAL,CAAcsC,YAAd;AACH;AACJ;AACD;AACJ;AACA;;;AACI7C,EAAAA,qBAAqB,GAAG;AACpB,UAAMhH,KAAK,GAAG,KAAKkH,QAAL,EAAd;AACA,UAAMnH,MAAM,GAAG,KAAK0J,gBAAL,CAAsBzJ,KAAtB,CAAf;AACA,UAAMsK,WAAW,GAAG,KAAKpD,QAAL,CAAc,IAAd,CAApB;AACA,UAAMqD,YAAY,GAAG,KAAKd,gBAAL,CAAsBa,WAAtB,CAArB;AACA,UAAME,UAAU,GAAGnB,YAAY,CAACiB,WAAD,CAAZ,GAA4BA,WAA5B,GAA0C,CAAC,CAAD,EAAIA,WAAJ,CAA7D;AACA,UAAMG,UAAU,GAAGpB,YAAY,CAACkB,YAAD,CAAZ,GACb,CAACA,YAAY,CAAC,CAAD,CAAb,EAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAhD,CADa,GAEb,CAAC,CAAD,EAAIA,YAAJ,CAFN;AAGA,SAAKjE,OAAL,CAAajC,OAAb,CAAqB,CAACqG,MAAD,EAASzB,KAAT,KAAmB;AACpCyB,MAAAA,MAAM,CAAC3K,MAAP,GAAgBsJ,YAAY,CAACtJ,MAAD,CAAZ,GAAuBA,MAAM,CAACkJ,KAAD,CAA7B,GAAuClJ,MAAvD;AACA2K,MAAAA,MAAM,CAAC1K,KAAP,GAAeqJ,YAAY,CAACrJ,KAAD,CAAZ,GAAsBA,KAAK,CAACiJ,KAAD,CAA3B,GAAqCjJ,KAAK,IAAI,CAA7D;AACH,KAHD;AAIA,KAAC,KAAKuG,MAAL,CAAYC,KAAb,EAAoB,KAAKD,MAAL,CAAYE,KAAhC,IAAyC+D,UAAzC;AACA,KAAC,KAAKnE,KAAL,CAAWtG,MAAZ,EAAoB,KAAKsG,KAAL,CAAWtD,MAA/B,IAAyC0H,UAAzC;AACA,SAAKtL,GAAL,CAASuC,YAAT;AACH;;AACDiJ,EAAAA,WAAW,CAAC3K,KAAD,EAAQ;AACf,SAAK4K,gBAAL,CAAsB,IAAtB;AACA,SAAKC,mBAAL;AACA,SAAKjB,mBAAL,CAAyB,KAAKkB,eAAL,CAAqB9K,KAArB,CAAzB;AACA,SAAK+I,cAAL,CAAoB,KAAK+B,eAAL,CAAqB9K,KAArB,CAApB;AACA,SAAK+K,iBAAL,CAAuB,KAAKxF,OAAL,GAAe,KAAKY,gBAApB,GAAuC,CAA9D;AACH;;AACD6E,EAAAA,UAAU,CAAChL,KAAD,EAAQ;AACd,SAAK+I,cAAL,CAAoB,KAAK+B,eAAL,CAAqB9K,KAArB,CAApB;AACA,SAAKb,GAAL,CAASuC,YAAT;AACH;;AACDoJ,EAAAA,eAAe,CAAC9K,KAAD,EAAQ;AACnB,QAAI,KAAKyF,SAAT,EAAoB;AAChB,UAAI,CAAC,KAAKD,UAAN,IAAoB,KAAKlG,GAAL,KAAa,KAArC,EAA4C;AACxC,eAAOU,KAAP;AACH;;AACD,aAAO,KAAK2F,KAAL,GAAa3F,KAAb,GAAqB,KAAK4F,KAAjC;AACH;;AACD,QAAI,CAAC,KAAKJ,UAAN,IAAoB,KAAKlG,GAAL,KAAa,KAArC,EAA4C;AACxC,aAAO,KAAKqG,KAAL,GAAa3F,KAAb,GAAqB,KAAK4F,KAAjC;AACH;;AACD,WAAO5F,KAAP;AACH;;AACDiL,EAAAA,SAAS,GAAG;AACR,SAAKjF,eAAL,CAAqBkF,IAArB,CAA0B,KAAKhE,QAAL,CAAc,IAAd,CAA1B;AACA,SAAK0D,gBAAL,CAAsB,KAAtB;AACA,SAAKC,mBAAL,CAAyB,IAAzB;AACA,SAAKM,oBAAL;AACA,SAAKhM,GAAL,CAASuC,YAAT;AACH;AACD;AACJ;AACA;;;AACI2F,EAAAA,oBAAoB,GAAG;AACnB,QAAI,CAAC,KAAKnC,QAAL,CAAckG,SAAnB,EAA8B;AAC1B;AACH;;AACD,UAAMC,SAAS,GAAG,KAAKC,MAAL,CAAY3K,aAA9B;AACA,UAAM4K,WAAW,GAAG,KAAK/F,UAAL,GAAkB,OAAlB,GAA4B,OAAhD;AACA,UAAMgG,KAAK,GAAG;AACVC,MAAAA,KAAK,EAAE,WADG;AAEVC,MAAAA,IAAI,EAAE,WAFI;AAGVC,MAAAA,GAAG,EAAE,SAHK;AAIVC,MAAAA,QAAQ,EAAE,CAACL,WAAD;AAJA,KAAd;AAMA,UAAMM,KAAK,GAAG;AACVJ,MAAAA,KAAK,EAAE,YADG;AAEVC,MAAAA,IAAI,EAAE,WAFI;AAGVC,MAAAA,GAAG,EAAE,UAHK;AAIVC,MAAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,GAAZ,EAAiBL,WAAjB,CAJA;AAKVnO,MAAAA,MAAM,EAAGoL,CAAD,IAAOA,CAAC,YAAYsD;AALlB,KAAd;AAOA,KAACN,KAAD,EAAQK,KAAR,EAAexH,OAAf,CAAuB0H,MAAM,IAAI;AAC7B,YAAM;AAAEN,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA,GAAf;AAAoBC,QAAAA,QAApB;AAA8BxO,QAAAA,MAAM,EAAE4O,UAAU,GAAG,MAAM;AAAzD,UAAkED,MAAxE;AACAA,MAAAA,MAAM,CAACE,aAAP,GAAuBhP,SAAS,CAACoO,SAAD,EAAYI,KAAZ,CAAT,CAA4B5E,IAA5B,CAAiCzJ,MAAM,CAAC4O,UAAD,CAAvC,EAAqD3O,GAAG,CAACO,WAAD,CAAxD,EAAuEN,KAAK,CAAC,GAAGsO,QAAJ,CAA5E,EAA2FrO,GAAG,CAAE2O,QAAD,IAAc,KAAKC,gBAAL,CAAsBD,QAAtB,CAAf,CAA9F,CAAvB;AACAH,MAAAA,MAAM,CAACK,IAAP,GAAcnP,SAAS,CAACoP,QAAD,EAAWV,GAAX,CAAvB;AACAI,MAAAA,MAAM,CAACO,aAAP,GAAuBrP,SAAS,CAACoP,QAAD,EAAWX,IAAX,CAAT,CAA0B7E,IAA1B,CAA+BzJ,MAAM,CAAC4O,UAAD,CAArC,EAAmD3O,GAAG,CAACO,WAAD,CAAtD,EAAqEN,KAAK,CAAC,GAAGsO,QAAJ,CAA1E,EAAyFpO,oBAAoB,EAA7G,EAAiHD,GAAG,CAAE2O,QAAD,IAAc,KAAKC,gBAAL,CAAsBD,QAAtB,CAAf,CAApH,EAAqK1O,oBAAoB,EAAzL,EAA6LL,SAAS,CAAC4O,MAAM,CAACK,IAAR,CAAtM,CAAvB;AACH,KALD;AAMA,SAAKG,UAAL,GAAkBrP,KAAK,CAACsO,KAAK,CAACS,aAAP,EAAsBJ,KAAK,CAACI,aAA5B,CAAvB;AACA,SAAKO,SAAL,GAAiBtP,KAAK,CAACsO,KAAK,CAACc,aAAP,EAAsBT,KAAK,CAACS,aAA5B,CAAtB;AACA,SAAKG,QAAL,GAAgBvP,KAAK,CAACsO,KAAK,CAACY,IAAP,EAAaP,KAAK,CAACO,IAAnB,CAArB;AACH;;AACDM,EAAAA,aAAa,CAACC,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAAX,EAAqC;AAC9C,QAAIA,OAAO,CAACC,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,IAAmC,KAAKL,UAAxC,IAAsD,CAAC,KAAKM,UAAhE,EAA4E;AACxE,WAAKA,UAAL,GAAkB,KAAKN,UAAL,CAAgBzF,SAAhB,CAA0B,KAAK6D,WAAL,CAAiBmC,IAAjB,CAAsB,IAAtB,CAA1B,CAAlB;AACH;;AACD,QAAIH,OAAO,CAACC,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IAAkC,KAAKJ,SAAvC,IAAoD,CAAC,KAAKO,SAA9D,EAAyE;AACrE,WAAKA,SAAL,GAAiB,KAAKP,SAAL,CAAe1F,SAAf,CAAyB,KAAKkE,UAAL,CAAgB8B,IAAhB,CAAqB,IAArB,CAAzB,CAAjB;AACH;;AACD,QAAIH,OAAO,CAACC,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAA5B,IAAiC,KAAKH,QAAtC,IAAkD,CAAC,KAAKO,QAA5D,EAAsE;AAClE,WAAKA,QAAL,GAAgB,KAAKP,QAAL,CAAc3F,SAAd,CAAwB,KAAKmE,SAAL,CAAe6B,IAAf,CAAoB,IAApB,CAAxB,CAAhB;AACH;AACJ;;AACDnF,EAAAA,eAAe,CAACgF,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAAX,EAAqC;AAChD,QAAIA,OAAO,CAACC,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,IAAmC,KAAKC,UAA5C,EAAwD;AACpD,WAAKA,UAAL,CAAgBI,WAAhB;AACA,WAAKJ,UAAL,GAAkB,IAAlB;AACH;;AACD,QAAIF,OAAO,CAACC,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IAAkC,KAAKG,SAA3C,EAAsD;AAClD,WAAKA,SAAL,CAAeE,WAAf;AACA,WAAKF,SAAL,GAAiB,IAAjB;AACH;;AACD,QAAIJ,OAAO,CAACC,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAA5B,IAAiC,KAAKI,QAA1C,EAAoD;AAChD,WAAKA,QAAL,CAAcC,WAAd;AACA,WAAKD,QAAL,GAAgB,IAAhB;AACH;AACJ;;AACDpC,EAAAA,gBAAgB,CAACsC,OAAD,EAAU;AACtB,UAAMP,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,CAAhB;;AACA,QAAIO,OAAJ,EAAa;AACT,WAAKhO,aAAL,CAAmBL,UAAnB,GAAgC,IAAhC;AACA,WAAK6N,aAAL,CAAmBC,OAAnB;AACH,KAHD,MAIK;AACD,WAAKzN,aAAL,CAAmBL,UAAnB,GAAgC,KAAhC;AACA,WAAK8I,eAAL,CAAqBgF,OAArB;AACH;AACJ;;AACDrF,EAAAA,kBAAkB,CAAC6F,QAAD,EAAW;AACzB,QAAIA,QAAJ,EAAc;AACV,WAAKxF,eAAL;AACH,KAFD,MAGK;AACD,WAAK+E,aAAL,CAAmB,CAAC,OAAD,CAAnB;AACH;AACJ;;AACDP,EAAAA,gBAAgB,CAACD,QAAD,EAAW;AACvB,UAAMkB,WAAW,GAAG,KAAKC,sBAAL,EAApB;AACA,UAAMC,YAAY,GAAG,KAAKC,eAAL,EAArB;AACA,UAAMC,KAAK,GAAG7P,mBAAmB,CAAC,CAACuO,QAAQ,GAAGkB,WAAZ,IAA2BE,YAA5B,EAA0C,CAA1C,EAA6C,CAA7C,CAAjC;AACA,UAAMvF,GAAG,GAAG,CAAC,KAAKpC,KAAL,GAAa,KAAKC,KAAnB,KAA6B,KAAKJ,UAAL,GAAkB,IAAIgI,KAAtB,GAA8BA,KAA3D,IAAoE,KAAK5H,KAArF;AACA,UAAM6H,MAAM,GAAG,KAAK/H,OAAL,KAAiB,IAAjB,GACT,EADS,GAETnE,MAAM,CAACmM,IAAP,CAAY,KAAKhI,OAAjB,EACGnI,GADH,CACOoQ,UADP,EAEGrE,IAFH,CAEQ,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFtB,CAFN;;AAKA,QAAI,KAAK3D,MAAL,KAAgB,CAAhB,IAAqB,CAAC,KAAKR,MAA/B,EAAuC;AACnC,YAAMuI,UAAU,GAAG3D,IAAI,CAAC4D,KAAL,CAAW9F,GAAG,GAAG,KAAKlC,MAAtB,IAAgC,KAAKA,MAAxD;AACA4H,MAAAA,MAAM,CAACK,IAAP,CAAYF,UAAZ;AACH;;AACD,UAAMG,IAAI,GAAGN,MAAM,CAAClQ,GAAP,CAAWyQ,KAAK,IAAI/D,IAAI,CAACC,GAAL,CAASnC,GAAG,GAAGiG,KAAf,CAApB,CAAb;AACA,UAAMC,OAAO,GAAGR,MAAM,CAACM,IAAI,CAACnB,OAAL,CAAa3C,IAAI,CAAC7F,GAAL,CAAS,GAAG2J,IAAZ,CAAb,CAAD,CAAtB,CAfuB,CAgBvB;;AACA,WAAO,KAAKlI,MAAL,KAAgB,CAAhB,GAAoBoI,OAApB,GAA8BN,UAAU,CAACM,OAAO,CAACC,OAAR,CAAgBrQ,YAAY,CAAC,KAAKgI,MAAN,CAA5B,CAAD,CAA/C;AACH;;AACD8D,EAAAA,aAAa,CAAC3J,KAAD,EAAQ;AACjB,WAAOlC,UAAU,CAAC,KAAK8H,KAAN,EAAa,KAAKD,KAAlB,EAAyB3F,KAAzB,CAAjB;AACH;;AACDqN,EAAAA,sBAAsB,GAAG;AACrB,QAAI,KAAKpH,gBAAL,KAA0B,IAA9B,EAAoC;AAChC,aAAO,KAAKA,gBAAZ;AACH;;AACD,UAAMlG,MAAM,GAAGhC,gBAAgB,CAAC,KAAKuN,MAAL,CAAY3K,aAAb,CAA/B;AACA,WAAO,KAAK6E,UAAL,GAAkBzF,MAAM,CAACoO,GAAzB,GAA+BpO,MAAM,CAAC4B,IAA7C;AACH;;AACD4L,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKrH,iBAAL,KAA2B,IAA/B,EAAqC;AACjC,aAAO,KAAKA,iBAAZ;AACH;;AACD,UAAMmF,SAAS,GAAG,KAAKC,MAAL,CAAY3K,aAA9B;AACA,WAAO,KAAK6E,UAAL,GAAkB6F,SAAS,CAAC+C,YAA5B,GAA2C/C,SAAS,CAACgD,WAA5D;AACH;AACD;AACJ;AACA;;;AACIxD,EAAAA,mBAAmB,CAACyD,MAAM,GAAG,KAAV,EAAiB;AAChC,SAAKrI,gBAAL,GAAwBqI,MAAM,GAAG,IAAH,GAAU,KAAKjB,sBAAL,EAAxC;AACA,SAAKnH,iBAAL,GAAyBoI,MAAM,GAAG,IAAH,GAAU,KAAKf,eAAL,EAAzC;AACH;;AACD/F,EAAAA,WAAW,CAACxH,KAAD,EAAQ;AACf,QAAIhC,KAAK,CAACgC,KAAD,CAAT,EAAkB;AACd,aAAO,KAAKuF,OAAL,GAAe,CAAC,KAAKK,KAAN,EAAa,KAAKD,KAAlB,CAAf,GAA0C,KAAKC,KAAtD;AACH,KAFD,MAGK,IAAI2I,gBAAgB,CAACvO,KAAD,EAAQ,KAAKuF,OAAb,CAApB,EAA2C;AAC5C,aAAO8D,YAAY,CAACrJ,KAAD,CAAZ,GACDA,KAAK,CAACzC,GAAN,CAAUwK,GAAG,IAAIpK,mBAAmB,CAACoK,GAAD,EAAM,KAAKnC,KAAX,EAAkB,KAAKD,KAAvB,CAApC,CADC,GAEDhI,mBAAmB,CAACqC,KAAD,EAAQ,KAAK4F,KAAb,EAAoB,KAAKD,KAAzB,CAFzB;AAGH,KAJI,MAKA;AACD,aAAO,KAAK6I,cAAL,GAAsB,KAAKA,cAA3B,GAA4C,KAAKjJ,OAAL,GAAe,CAAC,KAAKK,KAAN,EAAa,KAAKD,KAAlB,CAAf,GAA0C,KAAKC,KAAlG;AACH;AACJ;AACD;AACJ;AACA;;;AACImF,EAAAA,iBAAiB,CAAC0D,WAAW,GAAG,CAAf,EAAkB;AAC/B,SAAKnI,OAAL,CAAajC,OAAb,CAAqB,CAACqG,MAAD,EAASzB,KAAT,KAAmB;AACpCyB,MAAAA,MAAM,CAACrL,MAAP,GAAgB4J,KAAK,KAAKwF,WAA1B;AACH,KAFD;AAGH;;AACDtD,EAAAA,oBAAoB,GAAG;AACnB,SAAK7E,OAAL,CAAajC,OAAb,CAAqBqG,MAAM,IAAKA,MAAM,CAACrL,MAAP,GAAgB,KAAhD;AACH;;AACD+H,EAAAA,iBAAiB,CAAC3C,KAAD,EAAQ;AACrB,UAAMjB,UAAU,GAAG,EAAnB;;AACA,SAAK,MAAMkL,GAAX,IAAkBjK,KAAlB,EAAyB;AACrB,UAAIA,KAAK,CAACkK,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;AAC3B,cAAM1K,IAAI,GAAGS,KAAK,CAACiK,GAAD,CAAlB;AACA,cAAM3G,GAAG,GAAG,OAAO2G,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCf,UAAU,CAACe,GAAD,CAAtD;;AACA,YAAI3G,GAAG,IAAI,KAAKnC,KAAZ,IAAqBmC,GAAG,IAAI,KAAKpC,KAArC,EAA4C;AACxCnC,UAAAA,UAAU,CAACsK,IAAX,CAAgB;AAAE9N,YAAAA,KAAK,EAAE+H,GAAT;AAAchI,YAAAA,MAAM,EAAE,KAAK4J,aAAL,CAAmB5B,GAAnB,CAAtB;AAA+C9D,YAAAA,MAAM,EAAED;AAAvD,WAAhB;AACH;AACJ;AACJ;;AACD,WAAOR,UAAU,CAACT,MAAX,GAAoBS,UAApB,GAAiC,IAAxC;AACH;;AAnXmB;;AAqXxByB,iBAAiB,CAACnG,IAAlB;AAAA,mBAA8GmG,iBAA9G,EAj1BkG/I,EAi1BlG,mBAAiJyC,eAAjJ,GAj1BkGzC,EAi1BlG,mBAA6KA,EAAE,CAAC4F,iBAAhL,GAj1BkG5F,EAi1BlG,mBAA8MqC,IAAI,CAACqQ,QAAnN,GAj1BkG1S,EAi1BlG,mBAAwOuC,EAAE,CAACoQ,cAA3O;AAAA;;AACA5J,iBAAiB,CAAClD,IAAlB,kBAl1BkG7F,EAk1BlG;AAAA,QAAkG+I,iBAAlG;AAAA;AAAA;AAAA;AAl1BkG/I,MAAAA,EAk1BlG;AAl1BkGA,MAAAA,EAk1BlG,aAOsK+C,uBAPtK;AAAA;;AAAA;AAAA;;AAl1BkG/C,MAAAA,EAk1BlG,qBAl1BkGA,EAk1BlG;AAl1BkGA,MAAAA,EAk1BlG,qBAl1BkGA,EAk1BlG;AAAA;AAAA;AAAA;AAAA;AAl1BkGA,MAAAA,EAk1BlG;AAAA,eAAkG,qBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAl1BkGA,EAk1BlG,oBAAmnB,CAC3mB;AACI4S,IAAAA,OAAO,EAAE/R,iBADb;AAEIgS,IAAAA,WAAW,EAAErS,UAAU,CAAC,MAAMuI,iBAAP,CAF3B;AAGI+J,IAAAA,KAAK,EAAE;AAHX,GAD2mB,EAM3mBrQ,eAN2mB,CAAnnB,GAl1BkGzC,EAk1BlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAl1BkGA,MAAAA,EA01B9F,+BARJ;AAl1BkGA,MAAAA,EAk2B5F,uBAhBN;AAl1BkGA,MAAAA,EAm2B5F,mCAjBN;AAl1BkGA,MAAAA,EA22B5F,sFAzBN;AAl1BkGA,MAAAA,EAs3B5F,0FApCN;AAl1BkGA,MAAAA,EAm4B5F,wFAjDN;AAl1BkGA,MAAAA,EA84B9F,eA5DJ;AAAA;;AAAA;AAl1BkGA,MAAAA,EA61B5F,wKAXN;AAl1BkGA,MAAAA,EAo2B1F,aAlBR;AAl1BkGA,MAAAA,EAo2B1F,qKAlBR;AAl1BkGA,MAAAA,EA42BzF,aA1BT;AAl1BkGA,MAAAA,EA42BzF,mCA1BT;AAl1BkGA,MAAAA,EAu3BvE,aArC3B;AAl1BkGA,MAAAA,EAu3BvE,mCArC3B;AAl1BkGA,MAAAA,EAo4BzF,aAlDT;AAl1BkGA,MAAAA,EAo4BzF,mCAlDT;AAAA;AAAA;AAAA,eA6D0C4G,sBA7D1C,EA6D8MO,qBA7D9M,EA6D4YpE,uBA7D5Y,EA6D0mBuF,sBA7D1mB,EA6DyzB/F,EAAE,CAACwQ,GA7D5zB,EA6D05B5Q,EAAE,CAAC6Q,IA7D75B,EA6D2+B7Q,EAAE,CAACkG,OA7D9+B;AAAA;AAAA;AAAA;;AA8DA1I,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwH,iBAAiB,CAAChD,SAFX,EAEsB,YAFtB,EAEoC,KAAK,CAFzC,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwH,iBAAiB,CAAChD,SAFX,EAEsB,QAFtB,EAEgC,KAAK,CAFrC,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwH,iBAAiB,CAAChD,SAFX,EAEsB,YAFtB,EAEoC,KAAK,CAFzC,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwH,iBAAiB,CAAChD,SAFX,EAEsB,SAFtB,EAEiC,KAAK,CAFtC,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwH,iBAAiB,CAAChD,SAFX,EAEsB,YAFtB,EAEoC,KAAK,CAFzC,CAAV;;AAGApG,UAAU,CAAC,CACP4B,YAAY,EADL,CAAD,EAEPwH,iBAAiB,CAAChD,SAFX,EAEsB,WAFtB,EAEmC,KAAK,CAFxC,CAAV;;AAGApG,UAAU,CAAC,CACP6B,WAAW,EADJ,CAAD,EAEPuH,iBAAiB,CAAChD,SAFX,EAEsB,OAFtB,EAE+B,KAAK,CAFpC,CAAV;;AAGApG,UAAU,CAAC,CACP6B,WAAW,EADJ,CAAD,EAEPuH,iBAAiB,CAAChD,SAFX,EAEsB,OAFtB,EAE+B,KAAK,CAFpC,CAAV;;AAGApG,UAAU,CAAC,CACP6B,WAAW,EADJ,CAAD,EAEPuH,iBAAiB,CAAChD,SAFX,EAEsB,QAFtB,EAEgC,KAAK,CAFrC,CAAV;;AAGA;AAAA,qDA36BkG/F,EA26BlG,mBAA2F+I,iBAA3F,EAA0H,CAAC;AAC/GjG,IAAAA,IAAI,EAAE5C,SADyG;AAE/G8F,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,eAAe,EAAE9F,uBAAuB,CAAC+F,MAD1C;AAECC,MAAAA,aAAa,EAAE/F,iBAAiB,CAACgG,IAFlC;AAGCC,MAAAA,QAAQ,EAAE,WAHX;AAICC,MAAAA,QAAQ,EAAE,UAJX;AAKCC,MAAAA,mBAAmB,EAAE,KALtB;AAMC0M,MAAAA,SAAS,EAAE,CACP;AACIL,QAAAA,OAAO,EAAE/R,iBADb;AAEIgS,QAAAA,WAAW,EAAErS,UAAU,CAAC,MAAMuI,iBAAP,CAF3B;AAGI+J,QAAAA,KAAK,EAAE;AAHX,OADO,EAMPrQ,eANO,CANZ;AAcCgE,MAAAA,IAAI,EAAE;AACF,qBAAa;AADX,OAdP;AAiBCD,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEmB,KAAD;AAFyG,GAAD,CAA1H,EA2E4B,YAAY;AAChC,WAAO,CAAC;AAAE1D,MAAAA,IAAI,EAAEL;AAAR,KAAD,EAA4B;AAAEK,MAAAA,IAAI,EAAE9C,EAAE,CAAC4F;AAAX,KAA5B,EAA4D;AAAE9C,MAAAA,IAAI,EAAET,IAAI,CAACqQ;AAAb,KAA5D,EAAqF;AAAE5P,MAAAA,IAAI,EAAEP,EAAE,CAACoQ,cAAX;AAA2BO,MAAAA,UAAU,EAAE,CAAC;AACpHpQ,QAAAA,IAAI,EAAErC;AAD8G,OAAD;AAAvC,KAArF,CAAP;AAGH,GA/EL,EA+EuB;AAAE2O,IAAAA,MAAM,EAAE,CAAC;AAClBtM,MAAAA,IAAI,EAAEzC,SADY;AAElB2F,MAAAA,IAAI,EAAE,CAAC,QAAD,EAAW;AAAEU,QAAAA,MAAM,EAAE;AAAV,OAAX;AAFY,KAAD,CAAV;AAGPuH,IAAAA,iBAAiB,EAAE,CAAC;AACpBnL,MAAAA,IAAI,EAAEpC,YADc;AAEpBsF,MAAAA,IAAI,EAAE,CAACjD,uBAAD;AAFc,KAAD,CAHZ;AAMPmG,IAAAA,UAAU,EAAE,CAAC;AACbpG,MAAAA,IAAI,EAAExC;AADO,KAAD,CANL;AAQP6I,IAAAA,MAAM,EAAE,CAAC;AACTrG,MAAAA,IAAI,EAAExC;AADG,KAAD,CARD;AAUP8I,IAAAA,UAAU,EAAE,CAAC;AACbtG,MAAAA,IAAI,EAAExC;AADO,KAAD,CAVL;AAYP+I,IAAAA,OAAO,EAAE,CAAC;AACVvG,MAAAA,IAAI,EAAExC;AADI,KAAD,CAZF;AAcPgJ,IAAAA,UAAU,EAAE,CAAC;AACbxG,MAAAA,IAAI,EAAExC;AADO,KAAD,CAdL;AAgBPiJ,IAAAA,SAAS,EAAE,CAAC;AACZzG,MAAAA,IAAI,EAAExC;AADM,KAAD,CAhBJ;AAkBPgS,IAAAA,cAAc,EAAE,CAAC;AACjBxP,MAAAA,IAAI,EAAExC;AADW,KAAD,CAlBT;AAoBPkJ,IAAAA,OAAO,EAAE,CAAC;AACV1G,MAAAA,IAAI,EAAExC;AADI,KAAD,CApBF;AAsBPmJ,IAAAA,KAAK,EAAE,CAAC;AACR3G,MAAAA,IAAI,EAAExC;AADE,KAAD,CAtBA;AAwBPoJ,IAAAA,KAAK,EAAE,CAAC;AACR5G,MAAAA,IAAI,EAAExC;AADE,KAAD,CAxBA;AA0BPqJ,IAAAA,MAAM,EAAE,CAAC;AACT7G,MAAAA,IAAI,EAAExC;AADG,KAAD,CA1BD;AA4BPsJ,IAAAA,gBAAgB,EAAE,CAAC;AACnB9G,MAAAA,IAAI,EAAExC;AADa,KAAD,CA5BX;AA8BPuJ,IAAAA,kBAAkB,EAAE,CAAC;AACrB/G,MAAAA,IAAI,EAAExC;AADe,KAAD,CA9Bb;AAgCP6S,IAAAA,cAAc,EAAE,CAAC;AACjBrQ,MAAAA,IAAI,EAAExC;AADW,KAAD,CAhCT;AAkCPwJ,IAAAA,eAAe,EAAE,CAAC;AAClBhH,MAAAA,IAAI,EAAEnC;AADY,KAAD;AAlCV,GA/EvB;AAAA;;AAoHA,SAASyS,yBAAT,GAAqC;AACjC,SAAO,IAAIC,KAAJ,CAAW,wHAAX,CAAP;AACH;;AACD,SAASlG,YAAT,CAAsBrJ,KAAtB,EAA6B;AACzB,MAAIA,KAAK,YAAYwP,KAArB,EAA4B;AACxB,WAAOxP,KAAK,CAAC+C,MAAN,KAAiB,CAAxB;AACH,GAFD,MAGK;AACD,WAAO,KAAP;AACH;AACJ;;AACD,SAASoE,gBAAT,CAA0BsI,MAA1B,EAAkC;AAC9B,SAAOD,KAAK,CAACC,MAAD,CAAL,CACFC,IADE,CACG,CADH,EAEFnS,GAFE,CAEE,OAAO;AAAEwC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,KAAK,EAAE,IAAvB;AAA6BX,IAAAA,MAAM,EAAE;AAArC,GAAP,CAFF,CAAP;AAGH;AACD;AACA;AACA;;;AACA,SAASkP,gBAAT,CAA0BvO,KAA1B,EAAiC2P,OAAjC,EAA0C;AACtC,MAAK,CAACtG,YAAY,CAACrJ,KAAD,CAAb,IAAwB4P,KAAK,CAAC5P,KAAD,CAA9B,IAA2CqJ,YAAY,CAACrJ,KAAD,CAAZ,IAAuBA,KAAK,CAAC6P,IAAN,CAAWC,CAAC,IAAIF,KAAK,CAACE,CAAD,CAArB,CAAtE,EAAkG;AAC9F,WAAO,KAAP;AACH;;AACD,SAAOC,oBAAoB,CAAC/P,KAAD,EAAQ2P,OAAR,CAA3B;AACH;AACD;AACA;AACA;;;AACA,SAASI,oBAAT,CAA8B/P,KAA9B,EAAqC2P,OAAO,GAAG,KAA/C,EAAsD;AAClD,MAAItG,YAAY,CAACrJ,KAAD,CAAZ,KAAwB2P,OAA5B,EAAqC;AACjC,UAAML,yBAAyB,EAA/B;AACH;;AACD,SAAO,IAAP;AACH;;AACD,SAASnG,WAAT,CAAqB6G,IAArB,EAA2BC,IAA3B,EAAiC;AAC7B,MAAI,OAAOD,IAAP,KAAgB,OAAOC,IAA3B,EAAiC;AAC7B,WAAO,KAAP;AACH;;AACD,SAAO5G,YAAY,CAAC2G,IAAD,CAAZ,IAAsB3G,YAAY,CAAC4G,IAAD,CAAlC,GAA2ChS,WAAW,CAAC+R,IAAD,EAAOC,IAAP,CAAtD,GAAqED,IAAI,KAAKC,IAArF;AACH;AAED;AACA;AACA;AACA;;;AACA,MAAMC,cAAN,CAAqB;;AAErBA,cAAc,CAACpR,IAAf;AAAA,mBAA2GoR,cAA3G;AAAA;;AACAA,cAAc,CAACC,IAAf,kBA/kCkGjU,EA+kClG;AAAA,QAA4GgU;AAA5G;AASAA,cAAc,CAACE,IAAf,kBAxlCkGlU,EAwlClG;AAAA,YAAsI,CAACwC,UAAD,EAAaJ,YAAb,EAA2BE,cAA3B,EAA2CJ,eAA3C,CAAtI;AAAA;;AACA;AAAA,qDAzlCkGlC,EAylClG,mBAA2FgU,cAA3F,EAAuH,CAAC;AAC5GlR,IAAAA,IAAI,EAAElC,QADsG;AAE5GoF,IAAAA,IAAI,EAAE,CAAC;AACCmO,MAAAA,OAAO,EAAE,CACLpL,iBADK,EAELnC,sBAFK,EAGL7D,uBAHK,EAILoE,qBAJK,EAKLmB,sBALK,CADV;AAQC8L,MAAAA,YAAY,EAAE,CACVrL,iBADU,EAEVnC,sBAFU,EAGV7D,uBAHU,EAIVoE,qBAJU,EAKVmB,sBALU,CARf;AAeC+L,MAAAA,OAAO,EAAE,CAAC7R,UAAD,EAAaJ,YAAb,EAA2BE,cAA3B,EAA2CJ,eAA3C;AAfV,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAqBA;AACA;AACA;AACA;;;AACA,MAAMoS,OAAN,CAAc;AAGd;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASA,OAAT,EAAkBvL,iBAAlB,EAAqCiL,cAArC,EAAqDjR,uBAAuB,IAAIwR,wBAAhF,EAA0GjM,sBAAsB,IAAIkM,uBAApI,EAA6J/R,eAAe,IAAIgS,gBAAhL,EAAkMtN,qBAAqB,IAAIuN,sBAA3N,EAAmP9N,sBAAsB,IAAI+N,uBAA7Q","sourcesContent":["import { __decorate } from 'tslib';\nimport { RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Input, EventEmitter, forwardRef, Optional, ViewChildren, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { takeUntil, filter, tap, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { InputBoolean, InputNumber, ensureNumberInRange, silentEvent, getPrecision, getPercent, getElementOffset, isNil, arraysEqual } from 'ng-zorro-antd/core/util';\nimport * as i2 from 'ng-zorro-antd/tooltip';\nimport { NzTooltipDirective, NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSliderService {\n    constructor() {\n        this.isDragging = false;\n    }\n}\nNzSliderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzSliderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderService, decorators: [{\n            type: Injectable\n        }] });\n\nclass NzSliderHandleComponent {\n    constructor(sliderService, cdr) {\n        this.sliderService = sliderService;\n        this.cdr = cdr;\n        this.tooltipVisible = 'default';\n        this.active = false;\n        this.dir = 'ltr';\n        this.style = {};\n        this.enterHandle = () => {\n            if (!this.sliderService.isDragging) {\n                this.toggleTooltip(true);\n                this.updateTooltipPosition();\n                this.cdr.detectChanges();\n            }\n        };\n        this.leaveHandle = () => {\n            if (!this.sliderService.isDragging) {\n                this.toggleTooltip(false);\n                this.cdr.detectChanges();\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        const { offset, value, active, tooltipVisible, reverse, dir } = changes;\n        if (offset || reverse || dir) {\n            this.updateStyle();\n        }\n        if (value) {\n            this.updateTooltipTitle();\n            this.updateTooltipPosition();\n        }\n        if (active) {\n            if (active.currentValue) {\n                this.toggleTooltip(true);\n            }\n            else {\n                this.toggleTooltip(false);\n            }\n        }\n        if ((tooltipVisible === null || tooltipVisible === void 0 ? void 0 : tooltipVisible.currentValue) === 'always') {\n            Promise.resolve().then(() => this.toggleTooltip(true, true));\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.handleEl) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n    }\n    toggleTooltip(show, force = false) {\n        var _a, _b;\n        if (!force && (this.tooltipVisible !== 'default' || !this.tooltip)) {\n            return;\n        }\n        if (show) {\n            (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.show();\n        }\n        else {\n            (_b = this.tooltip) === null || _b === void 0 ? void 0 : _b.hide();\n        }\n    }\n    updateTooltipTitle() {\n        this.tooltipTitle = this.tooltipFormatter ? this.tooltipFormatter(this.value) : `${this.value}`;\n    }\n    updateTooltipPosition() {\n        if (this.tooltip) {\n            Promise.resolve().then(() => { var _a; return (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.updatePosition(); });\n        }\n    }\n    updateStyle() {\n        const vertical = this.vertical;\n        const reverse = this.reverse;\n        const offset = this.offset;\n        const positionStyle = vertical\n            ? {\n                [reverse ? 'top' : 'bottom']: `${offset}%`,\n                [reverse ? 'bottom' : 'top']: 'auto',\n                transform: reverse ? null : `translateY(+50%)`\n            }\n            : Object.assign(Object.assign({}, this.getHorizontalStylePosition()), { transform: `translateX(${reverse ? (this.dir === 'rtl' ? '-' : '+') : this.dir === 'rtl' ? '+' : '-'}50%)` });\n        this.style = positionStyle;\n        this.cdr.markForCheck();\n    }\n    getHorizontalStylePosition() {\n        let left = this.reverse ? 'auto' : `${this.offset}%`;\n        let right = this.reverse ? `${this.offset}%` : 'auto';\n        if (this.dir === 'rtl') {\n            const tmp = left;\n            left = right;\n            right = tmp;\n        }\n        return { left, right };\n    }\n}\nNzSliderHandleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderHandleComponent, deps: [{ token: NzSliderService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzSliderHandleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSliderHandleComponent, selector: \"nz-slider-handle\", inputs: { vertical: \"vertical\", reverse: \"reverse\", offset: \"offset\", value: \"value\", tooltipVisible: \"tooltipVisible\", tooltipPlacement: \"tooltipPlacement\", tooltipFormatter: \"tooltipFormatter\", active: \"active\", dir: \"dir\" }, host: { listeners: { \"mouseenter\": \"enterHandle()\", \"mouseleave\": \"leaveHandle()\" } }, viewQueries: [{ propertyName: \"handleEl\", first: true, predicate: [\"handle\"], descendants: true }, { propertyName: \"tooltip\", first: true, predicate: NzTooltipDirective, descendants: true }], exportAs: [\"nzSliderHandle\"], usesOnChanges: true, ngImport: i0, template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `, isInline: true, directives: [{ type: i2.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzSliderHandleComponent.prototype, \"active\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderHandleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider-handle',\n                    exportAs: 'nzSliderHandle',\n                    preserveWhitespaces: false,\n                    template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `,\n                    host: {\n                        '(mouseenter)': 'enterHandle()',\n                        '(mouseleave)': 'leaveHandle()'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: NzSliderService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { handleEl: [{\n                type: ViewChild,\n                args: ['handle', { static: false }]\n            }], tooltip: [{\n                type: ViewChild,\n                args: [NzTooltipDirective, { static: false }]\n            }], vertical: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tooltipVisible: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipFormatter: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass NzSliderTrackComponent {\n    constructor() {\n        this.offset = 0;\n        this.reverse = false;\n        this.dir = 'ltr';\n        this.length = 0;\n        this.vertical = false;\n        this.included = false;\n        this.style = {};\n    }\n    ngOnChanges() {\n        const vertical = this.vertical;\n        const reverse = this.reverse;\n        const visibility = this.included ? 'visible' : 'hidden';\n        const offset = this.offset;\n        const length = this.length;\n        const positonStyle = vertical\n            ? {\n                [reverse ? 'top' : 'bottom']: `${offset}%`,\n                [reverse ? 'bottom' : 'top']: 'auto',\n                height: `${length}%`,\n                visibility\n            }\n            : Object.assign(Object.assign({}, this.getHorizontalStylePosition()), { width: `${length}%`, visibility });\n        this.style = positonStyle;\n    }\n    getHorizontalStylePosition() {\n        let left = this.reverse ? 'auto' : `${this.offset}%`;\n        let right = this.reverse ? `${this.offset}%` : 'auto';\n        if (this.dir === 'rtl') {\n            const tmp = left;\n            left = right;\n            right = tmp;\n        }\n        return { left, right };\n    }\n}\nNzSliderTrackComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderTrackComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSliderTrackComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSliderTrackComponent, selector: \"nz-slider-track\", inputs: { offset: \"offset\", reverse: \"reverse\", dir: \"dir\", length: \"length\", vertical: \"vertical\", included: \"included\" }, exportAs: [\"nzSliderTrack\"], usesOnChanges: true, ngImport: i0, template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `, isInline: true, directives: [{ type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputNumber()\n], NzSliderTrackComponent.prototype, \"offset\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderTrackComponent.prototype, \"reverse\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderTrackComponent.prototype, \"length\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderTrackComponent.prototype, \"vertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderTrackComponent.prototype, \"included\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderTrackComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider-track',\n                    exportAs: 'nzSliderTrack',\n                    preserveWhitespaces: false,\n                    template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `\n                }]\n        }], propDecorators: { offset: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }], dir: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], included: [{\n                type: Input\n            }] } });\n\nclass NzSliderStepComponent {\n    constructor() {\n        this.lowerBound = null;\n        this.upperBound = null;\n        this.marksArray = [];\n        this.vertical = false;\n        this.included = false;\n        this.steps = [];\n    }\n    ngOnChanges(changes) {\n        const { marksArray, lowerBound, upperBound, reverse } = changes;\n        if (marksArray || reverse) {\n            this.buildSteps();\n        }\n        if (marksArray || lowerBound || upperBound || reverse) {\n            this.togglePointActive();\n        }\n    }\n    trackById(_index, step) {\n        return step.value;\n    }\n    buildSteps() {\n        const orient = this.vertical ? 'bottom' : 'left';\n        this.steps = this.marksArray.map(mark => {\n            const { value, config } = mark;\n            let offset = mark.offset;\n            const range = this.max - this.min;\n            if (this.reverse) {\n                offset = ((this.max - value) / range) * 100;\n            }\n            return {\n                value,\n                offset,\n                config,\n                active: false,\n                style: {\n                    [orient]: `${offset}%`\n                }\n            };\n        });\n    }\n    togglePointActive() {\n        if (this.steps && this.lowerBound !== null && this.upperBound !== null) {\n            this.steps.forEach(step => {\n                const value = step.value;\n                const isActive = (!this.included && value === this.upperBound) ||\n                    (this.included && value <= this.upperBound && value >= this.lowerBound);\n                step.active = isActive;\n            });\n        }\n    }\n}\nNzSliderStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderStepComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSliderStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSliderStepComponent, selector: \"nz-slider-step\", inputs: { lowerBound: \"lowerBound\", upperBound: \"upperBound\", marksArray: \"marksArray\", min: \"min\", max: \"max\", vertical: \"vertical\", included: \"included\", reverse: \"reverse\" }, exportAs: [\"nzSliderStep\"], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ant-slider-step\">\n      <span\n        class=\"ant-slider-dot\"\n        *ngFor=\"let mark of steps; trackBy: trackById\"\n        [class.ant-slider-dot-active]=\"mark.active\"\n        [ngStyle]=\"mark.style!\"\n      ></span>\n    </div>\n  `, isInline: true, directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzSliderStepComponent.prototype, \"vertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderStepComponent.prototype, \"included\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderStepComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider-step',\n                    exportAs: 'nzSliderStep',\n                    preserveWhitespaces: false,\n                    template: `\n    <div class=\"ant-slider-step\">\n      <span\n        class=\"ant-slider-dot\"\n        *ngFor=\"let mark of steps; trackBy: trackById\"\n        [class.ant-slider-dot-active]=\"mark.active\"\n        [ngStyle]=\"mark.style!\"\n      ></span>\n    </div>\n  `\n                }]\n        }], propDecorators: { lowerBound: [{\n                type: Input\n            }], upperBound: [{\n                type: Input\n            }], marksArray: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], included: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }] } });\n\nclass NzSliderMarksComponent {\n    constructor() {\n        this.lowerBound = null;\n        this.upperBound = null;\n        this.marksArray = [];\n        this.vertical = false;\n        this.included = false;\n        this.marks = [];\n    }\n    ngOnChanges(changes) {\n        const { marksArray, lowerBound, upperBound, reverse } = changes;\n        if (marksArray || reverse) {\n            this.buildMarks();\n        }\n        if (marksArray || lowerBound || upperBound || reverse) {\n            this.togglePointActive();\n        }\n    }\n    trackById(_index, mark) {\n        return mark.value;\n    }\n    buildMarks() {\n        const range = this.max - this.min;\n        this.marks = this.marksArray.map(mark => {\n            const { value, offset, config } = mark;\n            const style = this.getMarkStyles(value, range, config);\n            const label = isConfigObject(config) ? config.label : config;\n            return {\n                label,\n                offset,\n                style,\n                value,\n                config,\n                active: false\n            };\n        });\n    }\n    getMarkStyles(value, range, config) {\n        let style;\n        const markValue = this.reverse ? this.max + this.min - value : value;\n        if (this.vertical) {\n            style = {\n                marginBottom: '-50%',\n                bottom: `${((markValue - this.min) / range) * 100}%`\n            };\n        }\n        else {\n            style = {\n                transform: `translate3d(-50%, 0, 0)`,\n                left: `${((markValue - this.min) / range) * 100}%`\n            };\n        }\n        if (isConfigObject(config) && config.style) {\n            style = Object.assign(Object.assign({}, style), config.style);\n        }\n        return style;\n    }\n    togglePointActive() {\n        if (this.marks && this.lowerBound !== null && this.upperBound !== null) {\n            this.marks.forEach(mark => {\n                const value = mark.value;\n                const isActive = (!this.included && value === this.upperBound) ||\n                    (this.included && value <= this.upperBound && value >= this.lowerBound);\n                mark.active = isActive;\n            });\n        }\n    }\n}\nNzSliderMarksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderMarksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSliderMarksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSliderMarksComponent, selector: \"nz-slider-marks\", inputs: { lowerBound: \"lowerBound\", upperBound: \"upperBound\", marksArray: \"marksArray\", min: \"min\", max: \"max\", vertical: \"vertical\", included: \"included\", reverse: \"reverse\" }, exportAs: [\"nzSliderMarks\"], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ant-slider-mark\">\n      <span\n        class=\"ant-slider-mark-text\"\n        *ngFor=\"let attr of marks; trackBy: trackById\"\n        [class.ant-slider-mark-active]=\"attr.active\"\n        [ngStyle]=\"attr.style!\"\n        [innerHTML]=\"attr.label\"\n      ></span>\n    </div>\n  `, isInline: true, directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzSliderMarksComponent.prototype, \"vertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderMarksComponent.prototype, \"included\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderMarksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    selector: 'nz-slider-marks',\n                    exportAs: 'nzSliderMarks',\n                    template: `\n    <div class=\"ant-slider-mark\">\n      <span\n        class=\"ant-slider-mark-text\"\n        *ngFor=\"let attr of marks; trackBy: trackById\"\n        [class.ant-slider-mark-active]=\"attr.active\"\n        [ngStyle]=\"attr.style!\"\n        [innerHTML]=\"attr.label\"\n      ></span>\n    </div>\n  `\n                }]\n        }], propDecorators: { lowerBound: [{\n                type: Input\n            }], upperBound: [{\n                type: Input\n            }], marksArray: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], included: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }] } });\nfunction isConfigObject(config) {\n    return typeof config !== 'string';\n}\n\nclass NzSliderComponent {\n    constructor(sliderService, cdr, platform, directionality) {\n        this.sliderService = sliderService;\n        this.cdr = cdr;\n        this.platform = platform;\n        this.directionality = directionality;\n        this.nzDisabled = false;\n        this.nzDots = false;\n        this.nzIncluded = true;\n        this.nzRange = false;\n        this.nzVertical = false;\n        this.nzReverse = false;\n        this.nzMarks = null;\n        this.nzMax = 100;\n        this.nzMin = 0;\n        this.nzStep = 1;\n        this.nzTooltipVisible = 'default';\n        this.nzTooltipPlacement = 'top';\n        this.nzOnAfterChange = new EventEmitter();\n        this.value = null;\n        this.cacheSliderStart = null;\n        this.cacheSliderLength = null;\n        this.activeValueIndex = undefined; // Current activated handle's index ONLY for range=true\n        this.track = { offset: null, length: null }; // Track's offset and length\n        this.handles = []; // Handles' offset\n        this.marksArray = null; // \"steps\" in array type with more data & FILTER out the invalid mark\n        this.bounds = { lower: null, upper: null }; // now for nz-slider-step\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        var _a;\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n            this.updateTrackAndHandles();\n            this.onValueChange(this.getValue(true));\n        });\n        this.handles = generateHandlers(this.nzRange ? 2 : 1);\n        this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n        this.bindDraggingHandlers();\n        this.toggleDragDisabled(this.nzDisabled);\n        if (this.getValue() === null) {\n            this.setValue(this.formatValue(null));\n        }\n    }\n    ngOnChanges(changes) {\n        const { nzDisabled, nzMarks, nzRange } = changes;\n        if (nzDisabled && !nzDisabled.firstChange) {\n            this.toggleDragDisabled(nzDisabled.currentValue);\n        }\n        else if (nzMarks && !nzMarks.firstChange) {\n            this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n        }\n        else if (nzRange && !nzRange.firstChange) {\n            this.handles = generateHandlers(nzRange.currentValue ? 2 : 1);\n            this.setValue(this.formatValue(null));\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribeDrag();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(val) {\n        this.setValue(val, true);\n    }\n    onValueChange(_value) { }\n    onTouched() { }\n    registerOnChange(fn) {\n        this.onValueChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.nzDisabled = isDisabled;\n        this.toggleDragDisabled(isDisabled);\n    }\n    /**\n     * Event handler is only triggered when a slider handler is focused.\n     */\n    onKeyDown(e) {\n        if (this.nzDisabled) {\n            return;\n        }\n        const code = e.keyCode;\n        const isIncrease = code === RIGHT_ARROW || code === UP_ARROW;\n        const isDecrease = code === LEFT_ARROW || code === DOWN_ARROW;\n        if (!(isIncrease || isDecrease)) {\n            return;\n        }\n        e.preventDefault();\n        let step = (isDecrease ? -this.nzStep : this.nzStep) * (this.nzReverse ? -1 : 1);\n        step = this.dir === 'rtl' ? step * -1 : step;\n        const newVal = this.nzRange\n            ? this.value[this.activeValueIndex] + step\n            : this.value + step;\n        this.setActiveValue(ensureNumberInRange(newVal, this.nzMin, this.nzMax));\n    }\n    onHandleFocusIn(index) {\n        this.activeValueIndex = index;\n    }\n    setValue(value, isWriteValue = false) {\n        if (isWriteValue) {\n            this.value = this.formatValue(value);\n            this.updateTrackAndHandles();\n        }\n        else if (!valuesEqual(this.value, value)) {\n            this.value = value;\n            this.updateTrackAndHandles();\n            this.onValueChange(this.getValue(true));\n        }\n    }\n    getValue(cloneAndSort = false) {\n        if (cloneAndSort && this.value && isValueRange(this.value)) {\n            return [...this.value].sort((a, b) => a - b);\n        }\n        return this.value;\n    }\n    /**\n     * Clone & sort current value and convert them to offsets, then return the new one.\n     */\n    getValueToOffset(value) {\n        let normalizedValue = value;\n        if (typeof normalizedValue === 'undefined') {\n            normalizedValue = this.getValue(true);\n        }\n        return isValueRange(normalizedValue)\n            ? normalizedValue.map(val => this.valueToOffset(val))\n            : this.valueToOffset(normalizedValue);\n    }\n    /**\n     * Find the closest value to be activated.\n     */\n    setActiveValueIndex(pointerValue) {\n        const value = this.getValue();\n        if (isValueRange(value)) {\n            let minimal = null;\n            let gap;\n            let activeIndex = -1;\n            value.forEach((val, index) => {\n                gap = Math.abs(pointerValue - val);\n                if (minimal === null || gap < minimal) {\n                    minimal = gap;\n                    activeIndex = index;\n                }\n            });\n            this.activeValueIndex = activeIndex;\n            this.handlerComponents.toArray()[activeIndex].focus();\n        }\n        else {\n            this.handlerComponents.toArray()[0].focus();\n        }\n    }\n    setActiveValue(pointerValue) {\n        if (isValueRange(this.value)) {\n            const newValue = [...this.value];\n            newValue[this.activeValueIndex] = pointerValue;\n            this.setValue(newValue);\n        }\n        else {\n            this.setValue(pointerValue);\n        }\n    }\n    /**\n     * Update track and handles' position and length.\n     */\n    updateTrackAndHandles() {\n        const value = this.getValue();\n        const offset = this.getValueToOffset(value);\n        const valueSorted = this.getValue(true);\n        const offsetSorted = this.getValueToOffset(valueSorted);\n        const boundParts = isValueRange(valueSorted) ? valueSorted : [0, valueSorted];\n        const trackParts = isValueRange(offsetSorted)\n            ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]]\n            : [0, offsetSorted];\n        this.handles.forEach((handle, index) => {\n            handle.offset = isValueRange(offset) ? offset[index] : offset;\n            handle.value = isValueRange(value) ? value[index] : value || 0;\n        });\n        [this.bounds.lower, this.bounds.upper] = boundParts;\n        [this.track.offset, this.track.length] = trackParts;\n        this.cdr.markForCheck();\n    }\n    onDragStart(value) {\n        this.toggleDragMoving(true);\n        this.cacheSliderProperty();\n        this.setActiveValueIndex(this.getLogicalValue(value));\n        this.setActiveValue(this.getLogicalValue(value));\n        this.showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n    }\n    onDragMove(value) {\n        this.setActiveValue(this.getLogicalValue(value));\n        this.cdr.markForCheck();\n    }\n    getLogicalValue(value) {\n        if (this.nzReverse) {\n            if (!this.nzVertical && this.dir === 'rtl') {\n                return value;\n            }\n            return this.nzMax - value + this.nzMin;\n        }\n        if (!this.nzVertical && this.dir === 'rtl') {\n            return this.nzMax - value + this.nzMin;\n        }\n        return value;\n    }\n    onDragEnd() {\n        this.nzOnAfterChange.emit(this.getValue(true));\n        this.toggleDragMoving(false);\n        this.cacheSliderProperty(true);\n        this.hideAllHandleTooltip();\n        this.cdr.markForCheck();\n    }\n    /**\n     * Create user interactions handles.\n     */\n    bindDraggingHandlers() {\n        if (!this.platform.isBrowser) {\n            return;\n        }\n        const sliderDOM = this.slider.nativeElement;\n        const orientField = this.nzVertical ? 'pageY' : 'pageX';\n        const mouse = {\n            start: 'mousedown',\n            move: 'mousemove',\n            end: 'mouseup',\n            pluckKey: [orientField]\n        };\n        const touch = {\n            start: 'touchstart',\n            move: 'touchmove',\n            end: 'touchend',\n            pluckKey: ['touches', '0', orientField],\n            filter: (e) => e instanceof TouchEvent\n        };\n        [mouse, touch].forEach(source => {\n            const { start, move, end, pluckKey, filter: filterFunc = () => true } = source;\n            source.startPlucked$ = fromEvent(sliderDOM, start).pipe(filter(filterFunc), tap(silentEvent), pluck(...pluckKey), map((position) => this.findClosestValue(position)));\n            source.end$ = fromEvent(document, end);\n            source.moveResolved$ = fromEvent(document, move).pipe(filter(filterFunc), tap(silentEvent), pluck(...pluckKey), distinctUntilChanged(), map((position) => this.findClosestValue(position)), distinctUntilChanged(), takeUntil(source.end$));\n        });\n        this.dragStart$ = merge(mouse.startPlucked$, touch.startPlucked$);\n        this.dragMove$ = merge(mouse.moveResolved$, touch.moveResolved$);\n        this.dragEnd$ = merge(mouse.end$, touch.end$);\n    }\n    subscribeDrag(periods = ['start', 'move', 'end']) {\n        if (periods.indexOf('start') !== -1 && this.dragStart$ && !this.dragStart_) {\n            this.dragStart_ = this.dragStart$.subscribe(this.onDragStart.bind(this));\n        }\n        if (periods.indexOf('move') !== -1 && this.dragMove$ && !this.dragMove_) {\n            this.dragMove_ = this.dragMove$.subscribe(this.onDragMove.bind(this));\n        }\n        if (periods.indexOf('end') !== -1 && this.dragEnd$ && !this.dragEnd_) {\n            this.dragEnd_ = this.dragEnd$.subscribe(this.onDragEnd.bind(this));\n        }\n    }\n    unsubscribeDrag(periods = ['start', 'move', 'end']) {\n        if (periods.indexOf('start') !== -1 && this.dragStart_) {\n            this.dragStart_.unsubscribe();\n            this.dragStart_ = null;\n        }\n        if (periods.indexOf('move') !== -1 && this.dragMove_) {\n            this.dragMove_.unsubscribe();\n            this.dragMove_ = null;\n        }\n        if (periods.indexOf('end') !== -1 && this.dragEnd_) {\n            this.dragEnd_.unsubscribe();\n            this.dragEnd_ = null;\n        }\n    }\n    toggleDragMoving(movable) {\n        const periods = ['move', 'end'];\n        if (movable) {\n            this.sliderService.isDragging = true;\n            this.subscribeDrag(periods);\n        }\n        else {\n            this.sliderService.isDragging = false;\n            this.unsubscribeDrag(periods);\n        }\n    }\n    toggleDragDisabled(disabled) {\n        if (disabled) {\n            this.unsubscribeDrag();\n        }\n        else {\n            this.subscribeDrag(['start']);\n        }\n    }\n    findClosestValue(position) {\n        const sliderStart = this.getSliderStartPosition();\n        const sliderLength = this.getSliderLength();\n        const ratio = ensureNumberInRange((position - sliderStart) / sliderLength, 0, 1);\n        const val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n        const points = this.nzMarks === null\n            ? []\n            : Object.keys(this.nzMarks)\n                .map(parseFloat)\n                .sort((a, b) => a - b);\n        if (this.nzStep !== 0 && !this.nzDots) {\n            const closestOne = Math.round(val / this.nzStep) * this.nzStep;\n            points.push(closestOne);\n        }\n        const gaps = points.map(point => Math.abs(val - point));\n        const closest = points[gaps.indexOf(Math.min(...gaps))];\n        // return parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n        return this.nzStep === 0 ? closest : parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n    }\n    valueToOffset(value) {\n        return getPercent(this.nzMin, this.nzMax, value);\n    }\n    getSliderStartPosition() {\n        if (this.cacheSliderStart !== null) {\n            return this.cacheSliderStart;\n        }\n        const offset = getElementOffset(this.slider.nativeElement);\n        return this.nzVertical ? offset.top : offset.left;\n    }\n    getSliderLength() {\n        if (this.cacheSliderLength !== null) {\n            return this.cacheSliderLength;\n        }\n        const sliderDOM = this.slider.nativeElement;\n        return this.nzVertical ? sliderDOM.clientHeight : sliderDOM.clientWidth;\n    }\n    /**\n     * Cache DOM layout/reflow operations for performance (may not necessary?)\n     */\n    cacheSliderProperty(remove = false) {\n        this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n        this.cacheSliderLength = remove ? null : this.getSliderLength();\n    }\n    formatValue(value) {\n        if (isNil(value)) {\n            return this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n        }\n        else if (assertValueValid(value, this.nzRange)) {\n            return isValueRange(value)\n                ? value.map(val => ensureNumberInRange(val, this.nzMin, this.nzMax))\n                : ensureNumberInRange(value, this.nzMin, this.nzMax);\n        }\n        else {\n            return this.nzDefaultValue ? this.nzDefaultValue : this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n        }\n    }\n    /**\n     * Show one handle's tooltip and hide others'.\n     */\n    showHandleTooltip(handleIndex = 0) {\n        this.handles.forEach((handle, index) => {\n            handle.active = index === handleIndex;\n        });\n    }\n    hideAllHandleTooltip() {\n        this.handles.forEach(handle => (handle.active = false));\n    }\n    generateMarkItems(marks) {\n        const marksArray = [];\n        for (const key in marks) {\n            if (marks.hasOwnProperty(key)) {\n                const mark = marks[key];\n                const val = typeof key === 'number' ? key : parseFloat(key);\n                if (val >= this.nzMin && val <= this.nzMax) {\n                    marksArray.push({ value: val, offset: this.valueToOffset(val), config: mark });\n                }\n            }\n        }\n        return marksArray.length ? marksArray : null;\n    }\n}\nNzSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderComponent, deps: [{ token: NzSliderService }, { token: i0.ChangeDetectorRef }, { token: i2$1.Platform }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSliderComponent, selector: \"nz-slider\", inputs: { nzDisabled: \"nzDisabled\", nzDots: \"nzDots\", nzIncluded: \"nzIncluded\", nzRange: \"nzRange\", nzVertical: \"nzVertical\", nzReverse: \"nzReverse\", nzDefaultValue: \"nzDefaultValue\", nzMarks: \"nzMarks\", nzMax: \"nzMax\", nzMin: \"nzMin\", nzStep: \"nzStep\", nzTooltipVisible: \"nzTooltipVisible\", nzTooltipPlacement: \"nzTooltipPlacement\", nzTipFormatter: \"nzTipFormatter\" }, outputs: { nzOnAfterChange: \"nzOnAfterChange\" }, host: { listeners: { \"keydown\": \"onKeyDown($event)\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzSliderComponent),\n            multi: true\n        },\n        NzSliderService\n    ], viewQueries: [{ propertyName: \"slider\", first: true, predicate: [\"slider\"], descendants: true, static: true }, { propertyName: \"handlerComponents\", predicate: NzSliderHandleComponent, descendants: true }], exportAs: [\"nzSlider\"], usesOnChanges: true, ngImport: i0, template: `\n    <div\n      #slider\n      class=\"ant-slider\"\n      [class.ant-slider-rtl]=\"dir === 'rtl'\"\n      [class.ant-slider-disabled]=\"nzDisabled\"\n      [class.ant-slider-vertical]=\"nzVertical\"\n      [class.ant-slider-with-marks]=\"marksArray\"\n    >\n      <div class=\"ant-slider-rail\"></div>\n      <nz-slider-track\n        [vertical]=\"nzVertical\"\n        [included]=\"nzIncluded\"\n        [offset]=\"track.offset!\"\n        [length]=\"track.length!\"\n        [reverse]=\"nzReverse\"\n        [dir]=\"dir\"\n      ></nz-slider-track>\n      <nz-slider-step\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-step>\n      <nz-slider-handle\n        *ngFor=\"let handle of handles; index as handleIndex\"\n        [vertical]=\"nzVertical\"\n        [reverse]=\"nzReverse\"\n        [offset]=\"handle.offset!\"\n        [value]=\"handle.value!\"\n        [active]=\"handle.active\"\n        [tooltipFormatter]=\"nzTipFormatter\"\n        [tooltipVisible]=\"nzTooltipVisible\"\n        [tooltipPlacement]=\"nzTooltipPlacement\"\n        [dir]=\"dir\"\n        (focusin)=\"onHandleFocusIn(handleIndex)\"\n      ></nz-slider-handle>\n      <nz-slider-marks\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-marks>\n    </div>\n  `, isInline: true, components: [{ type: NzSliderTrackComponent, selector: \"nz-slider-track\", inputs: [\"offset\", \"reverse\", \"dir\", \"length\", \"vertical\", \"included\"], exportAs: [\"nzSliderTrack\"] }, { type: NzSliderStepComponent, selector: \"nz-slider-step\", inputs: [\"lowerBound\", \"upperBound\", \"marksArray\", \"min\", \"max\", \"vertical\", \"included\", \"reverse\"], exportAs: [\"nzSliderStep\"] }, { type: NzSliderHandleComponent, selector: \"nz-slider-handle\", inputs: [\"vertical\", \"reverse\", \"offset\", \"value\", \"tooltipVisible\", \"tooltipPlacement\", \"tooltipFormatter\", \"active\", \"dir\"], exportAs: [\"nzSliderHandle\"] }, { type: NzSliderMarksComponent, selector: \"nz-slider-marks\", inputs: [\"lowerBound\", \"upperBound\", \"marksArray\", \"min\", \"max\", \"vertical\", \"included\", \"reverse\"], exportAs: [\"nzSliderMarks\"] }], directives: [{ type: i3.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzDots\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzIncluded\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzRange\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzVertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzReverse\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderComponent.prototype, \"nzMax\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderComponent.prototype, \"nzMin\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderComponent.prototype, \"nzStep\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider',\n                    exportAs: 'nzSlider',\n                    preserveWhitespaces: false,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzSliderComponent),\n                            multi: true\n                        },\n                        NzSliderService\n                    ],\n                    host: {\n                        '(keydown)': 'onKeyDown($event)'\n                    },\n                    template: `\n    <div\n      #slider\n      class=\"ant-slider\"\n      [class.ant-slider-rtl]=\"dir === 'rtl'\"\n      [class.ant-slider-disabled]=\"nzDisabled\"\n      [class.ant-slider-vertical]=\"nzVertical\"\n      [class.ant-slider-with-marks]=\"marksArray\"\n    >\n      <div class=\"ant-slider-rail\"></div>\n      <nz-slider-track\n        [vertical]=\"nzVertical\"\n        [included]=\"nzIncluded\"\n        [offset]=\"track.offset!\"\n        [length]=\"track.length!\"\n        [reverse]=\"nzReverse\"\n        [dir]=\"dir\"\n      ></nz-slider-track>\n      <nz-slider-step\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-step>\n      <nz-slider-handle\n        *ngFor=\"let handle of handles; index as handleIndex\"\n        [vertical]=\"nzVertical\"\n        [reverse]=\"nzReverse\"\n        [offset]=\"handle.offset!\"\n        [value]=\"handle.value!\"\n        [active]=\"handle.active\"\n        [tooltipFormatter]=\"nzTipFormatter\"\n        [tooltipVisible]=\"nzTooltipVisible\"\n        [tooltipPlacement]=\"nzTooltipPlacement\"\n        [dir]=\"dir\"\n        (focusin)=\"onHandleFocusIn(handleIndex)\"\n      ></nz-slider-handle>\n      <nz-slider-marks\n        *ngIf=\"marksArray\"\n        [vertical]=\"nzVertical\"\n        [min]=\"nzMin\"\n        [max]=\"nzMax\"\n        [lowerBound]=\"$any(bounds.lower)\"\n        [upperBound]=\"$any(bounds.upper)\"\n        [marksArray]=\"marksArray\"\n        [included]=\"nzIncluded\"\n        [reverse]=\"nzReverse\"\n      ></nz-slider-marks>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NzSliderService }, { type: i0.ChangeDetectorRef }, { type: i2$1.Platform }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { slider: [{\n                type: ViewChild,\n                args: ['slider', { static: true }]\n            }], handlerComponents: [{\n                type: ViewChildren,\n                args: [NzSliderHandleComponent]\n            }], nzDisabled: [{\n                type: Input\n            }], nzDots: [{\n                type: Input\n            }], nzIncluded: [{\n                type: Input\n            }], nzRange: [{\n                type: Input\n            }], nzVertical: [{\n                type: Input\n            }], nzReverse: [{\n                type: Input\n            }], nzDefaultValue: [{\n                type: Input\n            }], nzMarks: [{\n                type: Input\n            }], nzMax: [{\n                type: Input\n            }], nzMin: [{\n                type: Input\n            }], nzStep: [{\n                type: Input\n            }], nzTooltipVisible: [{\n                type: Input\n            }], nzTooltipPlacement: [{\n                type: Input\n            }], nzTipFormatter: [{\n                type: Input\n            }], nzOnAfterChange: [{\n                type: Output\n            }] } });\nfunction getValueTypeNotMatchError() {\n    return new Error(`The \"nzRange\" can't match the \"ngModel\"'s type, please check these properties: \"nzRange\", \"ngModel\", \"nzDefaultValue\".`);\n}\nfunction isValueRange(value) {\n    if (value instanceof Array) {\n        return value.length === 2;\n    }\n    else {\n        return false;\n    }\n}\nfunction generateHandlers(amount) {\n    return Array(amount)\n        .fill(0)\n        .map(() => ({ offset: null, value: null, active: false }));\n}\n/**\n * Check if value is valid and throw error if value-type/range not match.\n */\nfunction assertValueValid(value, isRange) {\n    if ((!isValueRange(value) && isNaN(value)) || (isValueRange(value) && value.some(v => isNaN(v)))) {\n        return false;\n    }\n    return assertValueTypeMatch(value, isRange);\n}\n/**\n * Assert that if `this.nzRange` is `true`, value is also a range, vice versa.\n */\nfunction assertValueTypeMatch(value, isRange = false) {\n    if (isValueRange(value) !== isRange) {\n        throw getValueTypeNotMatchError();\n    }\n    return true;\n}\nfunction valuesEqual(valA, valB) {\n    if (typeof valA !== typeof valB) {\n        return false;\n    }\n    return isValueRange(valA) && isValueRange(valB) ? arraysEqual(valA, valB) : valA === valB;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSliderModule {\n}\nNzSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderModule, declarations: [NzSliderComponent,\n        NzSliderTrackComponent,\n        NzSliderHandleComponent,\n        NzSliderStepComponent,\n        NzSliderMarksComponent], imports: [BidiModule, CommonModule, PlatformModule, NzToolTipModule], exports: [NzSliderComponent,\n        NzSliderTrackComponent,\n        NzSliderHandleComponent,\n        NzSliderStepComponent,\n        NzSliderMarksComponent] });\nNzSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderModule, imports: [[BidiModule, CommonModule, PlatformModule, NzToolTipModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        NzSliderComponent,\n                        NzSliderTrackComponent,\n                        NzSliderHandleComponent,\n                        NzSliderStepComponent,\n                        NzSliderMarksComponent\n                    ],\n                    declarations: [\n                        NzSliderComponent,\n                        NzSliderTrackComponent,\n                        NzSliderHandleComponent,\n                        NzSliderStepComponent,\n                        NzSliderMarksComponent\n                    ],\n                    imports: [BidiModule, CommonModule, PlatformModule, NzToolTipModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMarks {\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMarks, NzSliderComponent, NzSliderModule, NzSliderHandleComponent as ɵNzSliderHandleComponent, NzSliderMarksComponent as ɵNzSliderMarksComponent, NzSliderService as ɵNzSliderService, NzSliderStepComponent as ɵNzSliderStepComponent, NzSliderTrackComponent as ɵNzSliderTrackComponent };\n"]},"metadata":{},"sourceType":"module"}