{"ast":null,"code":"import * as i1$2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, ConnectionPositionPair, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, Optional, Output, forwardRef, Directive, Inject, TemplateRef, Host, ContentChildren, ViewChildren, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i2$1 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i2 from 'ng-zorro-antd/input';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent, Subscription, defer, merge } from 'rxjs';\nimport { filter, takeUntil, tap, delay, take, switchMap } from 'rxjs/operators';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzAutocompleteOptgroupComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.nzLabel);\n  }\n}\n\nconst _c0 = [[[\"nz-auto-option\"]]];\nconst _c1 = [\"nz-auto-option\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"panel\"];\nconst _c4 = [\"content\"];\n\nfunction NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template(rf, ctx) {}\n\nfunction NzAutocompleteComponent_ng_template_0_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-auto-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzValue\", option_r9)(\"nzLabel\", option_r9 && option_r9.label ? option_r9.label : option_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r9 && option_r9.label ? option_r9.label : option_r9, \" \");\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template, 2, 3, \"nz-auto-option\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.nzDataSource);\n  }\n}\n\nfunction NzAutocompleteComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 0, 1);\n    i0.ɵɵlistener(\"@slideMotion.done\", function NzAutocompleteComponent_ng_template_0_Template_div_animation_slideMotion_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onAnimationEvent($event);\n    });\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtemplate(4, NzAutocompleteComponent_ng_template_0_4_Template, 1, 0, null, 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, NzAutocompleteComponent_ng_template_0_ng_template_5_Template, 1, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, NzAutocompleteComponent_ng_template_0_ng_template_7_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(6);\n\n    const _r5 = i0.ɵɵreference(8);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-dropdown-hidden\", !ctx_r0.showPanel)(\"ant-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.nzOverlayClassName)(\"ngStyle\", ctx_r0.nzOverlayStyle)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"@slideMotion\", undefined)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzDataSource ? _r5 : _r3);\n  }\n}\n\nclass NzAutocompleteOptgroupComponent {\n  constructor() {}\n\n}\n\nNzAutocompleteOptgroupComponent.ɵfac = function NzAutocompleteOptgroupComponent_Factory(t) {\n  return new (t || NzAutocompleteOptgroupComponent)();\n};\n\nNzAutocompleteOptgroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAutocompleteOptgroupComponent,\n  selectors: [[\"nz-auto-optgroup\"]],\n  inputs: {\n    nzLabel: \"nzLabel\"\n  },\n  exportAs: [\"nzAutoOptgroup\"],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"ant-select-item\", \"ant-select-item-group\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzAutocompleteOptgroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzAutocompleteOptgroupComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzLabel);\n    }\n  },\n  directives: [i1.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteOptgroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-auto-optgroup',\n      exportAs: 'nzAutoOptgroup',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzOptionSelectionChange {\n  constructor(source, isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n\n}\n\nclass NzAutocompleteOptionComponent {\n  constructor(ngZone, changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n    this.ngZone = ngZone;\n    this.changeDetectorRef = changeDetectorRef;\n    this.element = element;\n    this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n    this.nzDisabled = false;\n    this.selectionChange = new EventEmitter();\n    this.mouseEntered = new EventEmitter();\n    this.active = false;\n    this.selected = false;\n    this.destroy$ = new Subject();\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.element.nativeElement, 'mouseenter').pipe(filter(() => this.mouseEntered.observers.length > 0), takeUntil(this.destroy$)).subscribe(() => {\n        this.ngZone.run(() => this.mouseEntered.emit(this));\n      });\n      fromEvent(this.element.nativeElement, 'mousedown').pipe(takeUntil(this.destroy$)).subscribe(event => event.preventDefault());\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  select(emit = true) {\n    this.selected = true;\n    this.changeDetectorRef.markForCheck();\n\n    if (emit) {\n      this.emitSelectionChangeEvent();\n    }\n  }\n\n  deselect() {\n    this.selected = false;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n  /** Git display label */\n\n\n  getLabel() {\n    return this.nzLabel || this.nzValue.toString();\n  }\n  /** Set active (only styles) */\n\n\n  setActiveStyles() {\n    if (!this.active) {\n      this.active = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n  /** Unset active (only styles) */\n\n\n  setInactiveStyles() {\n    if (this.active) {\n      this.active = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  scrollIntoViewIfNeeded() {\n    scrollIntoView(this.element.nativeElement);\n  }\n\n  selectViaInteraction() {\n    if (!this.nzDisabled) {\n      this.selected = !this.selected;\n\n      if (this.selected) {\n        this.setActiveStyles();\n      } else {\n        this.setInactiveStyles();\n      }\n\n      this.emitSelectionChangeEvent(true);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  emitSelectionChangeEvent(isUserInput = false) {\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n  }\n\n}\n\nNzAutocompleteOptionComponent.ɵfac = function NzAutocompleteOptionComponent_Factory(t) {\n  return new (t || NzAutocompleteOptionComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzAutocompleteOptgroupComponent, 8));\n};\n\nNzAutocompleteOptionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAutocompleteOptionComponent,\n  selectors: [[\"nz-auto-option\"]],\n  hostAttrs: [\"role\", \"menuitem\", 1, \"ant-select-item\", \"ant-select-item-option\"],\n  hostVars: 10,\n  hostBindings: function NzAutocompleteOptionComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzAutocompleteOptionComponent_click_HostBindingHandler() {\n        return ctx.selectViaInteraction();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.nzDisabled.toString());\n      i0.ɵɵclassProp(\"ant-select-item-option-grouped\", ctx.nzAutocompleteOptgroupComponent)(\"ant-select-item-option-selected\", ctx.selected)(\"ant-select-item-option-active\", ctx.active)(\"ant-select-item-option-disabled\", ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzValue: \"nzValue\",\n    nzLabel: \"nzLabel\",\n    nzDisabled: \"nzDisabled\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    mouseEntered: \"mouseEntered\"\n  },\n  exportAs: [\"nzAutoOption\"],\n  ngContentSelectors: _c2,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"ant-select-item-option-content\"]],\n  template: function NzAutocompleteOptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteOptionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-auto-option',\n      exportAs: 'nzAutoOption',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        role: 'menuitem',\n        class: 'ant-select-item ant-select-item-option',\n        '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n        '[class.ant-select-item-option-selected]': 'selected',\n        '[class.ant-select-item-option-active]': 'active',\n        '[class.ant-select-item-option-disabled]': 'nzDisabled',\n        '[attr.aria-selected]': 'selected.toString()',\n        '[attr.aria-disabled]': 'nzDisabled.toString()',\n        '(click)': 'selectViaInteraction()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NzAutocompleteOptgroupComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzValue: [{\n      type: Input\n    }],\n    nzLabel: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    mouseEntered: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n  multi: true\n};\n\nfunction getNzAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' + 'Make sure that the id passed to the `nzAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n\nclass NzAutocompleteTriggerDirective {\n  constructor(elementRef, overlay, viewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective, document) {\n    this.elementRef = elementRef;\n    this.overlay = overlay;\n    this.viewContainerRef = viewContainerRef;\n    this.nzInputGroupWhitSuffixOrPrefixDirective = nzInputGroupWhitSuffixOrPrefixDirective;\n    this.document = document;\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.panelOpen = false;\n    this.destroy$ = new Subject();\n    this.overlayRef = null;\n    this.portal = null;\n    this.previousValue = null;\n  }\n  /** Current active option */\n\n\n  get activeOption() {\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n      return this.nzAutocomplete.activeItem;\n    } else {\n      return null;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.nzAutocomplete) {\n      this.nzAutocomplete.animationStateChange.pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (event.toState === 'void') {\n          if (this.overlayRef) {\n            this.overlayRef.dispose();\n            this.overlayRef = null;\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.destroyPanel();\n  }\n\n  writeValue(value) {\n    Promise.resolve(null).then(() => this.setTriggerValue(value));\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    const element = this.elementRef.nativeElement;\n    element.disabled = isDisabled;\n    this.closePanel();\n  }\n\n  openPanel() {\n    this.previousValue = this.elementRef.nativeElement.value;\n    this.attachOverlay();\n    this.updateStatus();\n  }\n\n  closePanel() {\n    if (this.panelOpen) {\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\n\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n        this.selectionChangeSubscription.unsubscribe();\n        this.overlayOutsideClickSubscription.unsubscribe();\n        this.optionsChangeSubscription.unsubscribe();\n        this.portal = null;\n      }\n    }\n  }\n\n  handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n      // Reset value when tab / ESC close\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n        this.setTriggerValue(this.previousValue);\n      }\n\n      this.closePanel();\n    } else if (this.panelOpen && keyCode === ENTER) {\n      if (this.nzAutocomplete.showPanel) {\n        event.preventDefault();\n\n        if (this.activeOption) {\n          this.activeOption.selectViaInteraction();\n        } else {\n          this.closePanel();\n        }\n      }\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (keyCode === UP_ARROW) {\n        this.nzAutocomplete.setPreviousItemActive();\n      } else {\n        this.nzAutocomplete.setNextItemActive();\n      }\n\n      if (this.activeOption) {\n        this.activeOption.scrollIntoViewIfNeeded();\n      }\n\n      this.doBackfill();\n    }\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const document = this.document;\n    let value = target.value;\n\n    if (target.type === 'number') {\n      value = value === '' ? null : parseFloat(value);\n    }\n\n    if (this.previousValue !== value) {\n      this.previousValue = value;\n      this.onChange(value);\n\n      if (this.canOpen() && document.activeElement === event.target) {\n        this.openPanel();\n      }\n    }\n  }\n\n  handleFocus() {\n    if (this.canOpen()) {\n      this.openPanel();\n    }\n  }\n\n  handleBlur() {\n    this.onTouched();\n  }\n  /**\n   * Subscription data source changes event\n   */\n\n\n  subscribeOptionsChange() {\n    const optionChanges = this.nzAutocomplete.options.changes.pipe(tap(() => this.positionStrategy.reapplyLastPosition()), delay(0));\n    return optionChanges.subscribe(() => {\n      this.resetActiveItem();\n\n      if (this.panelOpen) {\n        this.overlayRef.updatePosition();\n      }\n    });\n  }\n  /**\n   * Subscription option changes event and set the value\n   */\n\n\n  subscribeSelectionChange() {\n    return this.nzAutocomplete.selectionChange.subscribe(option => {\n      this.setValueAndClose(option);\n    });\n  }\n\n  subscribeOverlayOutsideClick() {\n    return this.overlayRef.outsidePointerEvents().pipe(filter(e => !this.elementRef.nativeElement.contains(e.target))).subscribe(() => {\n      this.closePanel();\n    });\n  }\n\n  attachOverlay() {\n    if (!this.nzAutocomplete) {\n      throw getNzAutocompleteMissingPanelError();\n    }\n\n    if (!this.portal && this.nzAutocomplete.template) {\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n    }\n\n    if (!this.overlayRef) {\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    }\n\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\n      this.overlayOutsideClickSubscription = this.subscribeOverlayOutsideClick();\n      this.overlayRef.detachments().pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.closePanel();\n      });\n    }\n\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\n  }\n\n  updateStatus() {\n    if (this.overlayRef) {\n      this.overlayRef.updateSize({\n        width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n      });\n    }\n\n    this.nzAutocomplete.setVisibility();\n    this.resetActiveItem();\n\n    if (this.activeOption) {\n      this.activeOption.scrollIntoViewIfNeeded();\n    }\n  }\n\n  destroyPanel() {\n    if (this.overlayRef) {\n      this.closePanel();\n    }\n  }\n\n  getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this.getOverlayPosition(),\n      disposeOnNavigation: true,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      // default host element width\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n    });\n  }\n\n  getConnectedElement() {\n    return this.nzInputGroupWhitSuffixOrPrefixDirective ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef : this.elementRef;\n  }\n\n  getHostWidth() {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  getOverlayPosition() {\n    const positions = [new ConnectionPositionPair({\n      originX: 'start',\n      originY: 'bottom'\n    }, {\n      overlayX: 'start',\n      overlayY: 'top'\n    }), new ConnectionPositionPair({\n      originX: 'start',\n      originY: 'top'\n    }, {\n      overlayX: 'start',\n      overlayY: 'bottom'\n    })];\n    this.positionStrategy = this.overlay.position().flexibleConnectedTo(this.getConnectedElement()).withFlexibleDimensions(false).withPush(false).withPositions(positions).withTransformOriginOn('.ant-select-dropdown');\n    return this.positionStrategy;\n  }\n\n  resetActiveItem() {\n    const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n    this.nzAutocomplete.clearSelectedOptions(null, true);\n\n    if (index !== -1) {\n      this.nzAutocomplete.setActiveItem(index);\n      this.nzAutocomplete.activeItem.select(false);\n    } else {\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n    }\n  }\n\n  setValueAndClose(option) {\n    const value = option.nzValue;\n    this.setTriggerValue(option.getLabel());\n    this.onChange(value);\n    this.elementRef.nativeElement.focus();\n    this.closePanel();\n  }\n\n  setTriggerValue(value) {\n    const option = this.nzAutocomplete.getOption(value);\n    const displayValue = option ? option.getLabel() : value;\n    this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n\n    if (!this.nzAutocomplete.nzBackfill) {\n      this.previousValue = displayValue;\n    }\n  }\n\n  doBackfill() {\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n    }\n  }\n\n  canOpen() {\n    const element = this.elementRef.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n\n}\n\nNzAutocompleteTriggerDirective.ɵfac = function NzAutocompleteTriggerDirective_Factory(t) {\n  return new (t || NzAutocompleteTriggerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.NzInputGroupWhitSuffixOrPrefixDirective, 8), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\n\nNzAutocompleteTriggerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzAutocompleteTriggerDirective,\n  selectors: [[\"input\", \"nzAutocomplete\", \"\"], [\"textarea\", \"nzAutocomplete\", \"\"]],\n  hostAttrs: [\"autocomplete\", \"off\", \"aria-autocomplete\", \"list\"],\n  hostBindings: function NzAutocompleteTriggerDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function NzAutocompleteTriggerDirective_focusin_HostBindingHandler() {\n        return ctx.handleFocus();\n      })(\"blur\", function NzAutocompleteTriggerDirective_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"input\", function NzAutocompleteTriggerDirective_input_HostBindingHandler($event) {\n        return ctx.handleInput($event);\n      })(\"keydown\", function NzAutocompleteTriggerDirective_keydown_HostBindingHandler($event) {\n        return ctx.handleKeydown($event);\n      });\n    }\n  },\n  inputs: {\n    nzAutocomplete: \"nzAutocomplete\"\n  },\n  exportAs: [\"nzAutocompleteTrigger\"],\n  features: [i0.ɵɵProvidersFeature([NZ_AUTOCOMPLETE_VALUE_ACCESSOR])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteTriggerDirective, [{\n    type: Directive,\n    args: [{\n      selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n      exportAs: 'nzAutocompleteTrigger',\n      providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n      host: {\n        autocomplete: 'off',\n        'aria-autocomplete': 'list',\n        '(focusin)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1$1.Overlay\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.NzInputGroupWhitSuffixOrPrefixDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    nzAutocomplete: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzAutocompleteComponent {\n  constructor(changeDetectorRef, ngZone, directionality, noAnimation) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.ngZone = ngZone;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this.nzOverlayClassName = '';\n    this.nzOverlayStyle = {};\n    this.nzDefaultActiveFirstOption = true;\n    this.nzBackfill = false;\n\n    this.compareWith = (o1, o2) => o1 === o2;\n\n    this.selectionChange = new EventEmitter();\n    this.showPanel = true;\n    this.isOpen = false;\n    this.activeItem = null;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.animationStateChange = new EventEmitter();\n    this.activeItemIndex = -1;\n    this.selectionChangeSubscription = Subscription.EMPTY;\n    this.optionMouseEnterSubscription = Subscription.EMPTY;\n    this.dataSourceChangeSubscription = Subscription.EMPTY;\n    /** Options changes listener */\n\n    this.optionSelectionChanges = defer(() => {\n      if (this.options) {\n        return merge(...this.options.map(option => option.selectionChange));\n      }\n\n      return this.ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n    this.optionMouseEnter = defer(() => {\n      if (this.options) {\n        return merge(...this.options.map(option => option.mouseEntered));\n      }\n\n      return this.ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionMouseEnter));\n    });\n  }\n  /**\n   * Options accessor, its source may be content or dataSource\n   */\n\n\n  get options() {\n    // first dataSource\n    if (this.nzDataSource) {\n      return this.fromDataSourceOptions;\n    } else {\n      return this.fromContentOptions;\n    }\n  }\n\n  ngOnInit() {\n    var _a;\n\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.changeDetectorRef.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  onAnimationEvent(event) {\n    this.animationStateChange.emit(event);\n  }\n\n  ngAfterContentInit() {\n    if (!this.nzDataSource) {\n      this.optionsInit();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.nzDataSource) {\n      this.optionsInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.dataSourceChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription.unsubscribe();\n    this.optionMouseEnterSubscription.unsubscribe(); // Caretaker note: we have to set these subscriptions to `null` since these will be closed subscriptions, but they\n    // still keep references to destinations (which are `SafeSubscriber`s). Destinations keep referencing `next` functions,\n    // which we pass, for instance, to `this.optionSelectionChanges.subscribe(...)`.\n\n    this.dataSourceChangeSubscription = this.selectionChangeSubscription = this.optionMouseEnterSubscription = null;\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setVisibility() {\n    this.showPanel = !!this.options.length;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  setActiveItem(index) {\n    const activeItem = this.options.get(index);\n\n    if (activeItem && !activeItem.active) {\n      this.activeItem = activeItem;\n      this.activeItemIndex = index;\n      this.clearSelectedOptions(this.activeItem);\n      this.activeItem.setActiveStyles();\n    } else {\n      this.activeItem = null;\n      this.activeItemIndex = -1;\n      this.clearSelectedOptions();\n    }\n\n    this.changeDetectorRef.markForCheck();\n  }\n\n  setNextItemActive() {\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n    this.setActiveItem(nextIndex);\n  }\n\n  setPreviousItemActive() {\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n    this.setActiveItem(previousIndex);\n  }\n\n  getOptionIndex(value) {\n    return this.options.reduce((result, current, index) => result === -1 ? this.compareWith(value, current.nzValue) ? index : -1 : result, -1);\n  }\n\n  getOption(value) {\n    return this.options.find(item => this.compareWith(value, item.nzValue)) || null;\n  }\n\n  optionsInit() {\n    this.setVisibility();\n    this.subscribeOptionChanges();\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes; // async\n\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\n      if (!e.dirty && this.isOpen) {\n        setTimeout(() => this.setVisibility());\n      }\n\n      this.subscribeOptionChanges();\n    });\n  }\n  /**\n   * Clear the status of options\n   */\n\n\n  clearSelectedOptions(skip, deselect = false) {\n    this.options.forEach(option => {\n      if (option !== skip) {\n        if (deselect) {\n          option.deselect();\n        }\n\n        option.setInactiveStyles();\n      }\n    });\n  }\n\n  subscribeOptionChanges() {\n    this.selectionChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription = this.optionSelectionChanges.pipe(filter(event => event.isUserInput)).subscribe(event => {\n      event.source.select();\n      event.source.setActiveStyles();\n      this.activeItem = event.source;\n      this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n      this.clearSelectedOptions(event.source, true);\n      this.selectionChange.emit(event.source);\n    });\n    this.optionMouseEnterSubscription.unsubscribe();\n    this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe(event => {\n      event.setActiveStyles();\n      this.activeItem = event;\n      this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n      this.clearSelectedOptions(event);\n    });\n  }\n\n}\n\nNzAutocompleteComponent.ɵfac = function NzAutocompleteComponent_Factory(t) {\n  return new (t || NzAutocompleteComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$2.Directionality, 8), i0.ɵɵdirectiveInject(i2$1.NzNoAnimationDirective, 9));\n};\n\nNzAutocompleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAutocompleteComponent,\n  selectors: [[\"nz-autocomplete\"]],\n  contentQueries: function NzAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzAutocompleteOptionComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fromContentOptions = _t);\n    }\n  },\n  viewQuery: function NzAutocompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(NzAutocompleteOptionComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fromDataSourceOptions = _t);\n    }\n  },\n  inputs: {\n    nzWidth: \"nzWidth\",\n    nzOverlayClassName: \"nzOverlayClassName\",\n    nzOverlayStyle: \"nzOverlayStyle\",\n    nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\",\n    nzBackfill: \"nzBackfill\",\n    compareWith: \"compareWith\",\n    nzDataSource: \"nzDataSource\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"nzAutocomplete\"],\n  ngContentSelectors: _c2,\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"ant-select-dropdown\", \"ant-select-dropdown-placement-bottomLeft\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [\"panel\", \"\"], [2, \"max-height\", \"256px\", \"overflow-y\", \"auto\", \"overflow-anchor\", \"none\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [4, \"ngTemplateOutlet\"], [\"contentTemplate\", \"\"], [\"optionsTemplate\", \"\"], [3, \"nzValue\", \"nzLabel\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzValue\", \"nzLabel\"]],\n  template: function NzAutocompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_Template, 9, 10, \"ng-template\");\n    }\n  },\n  directives: [NzAutocompleteOptionComponent, i4.NgClass, i4.NgStyle, i2$1.NzNoAnimationDirective, i4.NgTemplateOutlet, i4.NgForOf],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  },\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n\n__decorate([InputBoolean()], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-autocomplete',\n      exportAs: 'nzAutocomplete',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option\n          *ngFor=\"let option of nzDataSource!\"\n          [nzValue]=\"option\"\n          [nzLabel]=\"option && $any(option).label ? $any(option).label : $any(option)\"\n        >\n          {{ option && $any(option).label ? $any(option).label : $any(option) }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n      animations: [slideMotion]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzWidth: [{\n      type: Input\n    }],\n    nzOverlayClassName: [{\n      type: Input\n    }],\n    nzOverlayStyle: [{\n      type: Input\n    }],\n    nzDefaultActiveFirstOption: [{\n      type: Input\n    }],\n    nzBackfill: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    nzDataSource: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    fromContentOptions: [{\n      type: ContentChildren,\n      args: [NzAutocompleteOptionComponent, {\n        descendants: true\n      }]\n    }],\n    fromDataSourceOptions: [{\n      type: ViewChildren,\n      args: [NzAutocompleteOptionComponent]\n    }],\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel', {\n        static: false\n      }]\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzAutocompleteModule {}\n\nNzAutocompleteModule.ɵfac = function NzAutocompleteModule_Factory(t) {\n  return new (t || NzAutocompleteModule)();\n};\n\nNzAutocompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzAutocompleteModule\n});\nNzAutocompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n      exports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n      imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-auto-complete.mjs"],"names":["i1$2","BidiModule","i1$1","OverlayConfig","ConnectionPositionPair","OverlayModule","i4","DOCUMENT","CommonModule","i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","EventEmitter","Optional","Output","forwardRef","Directive","Inject","TemplateRef","Host","ContentChildren","ViewChildren","ViewChild","NgModule","NG_VALUE_ACCESSOR","FormsModule","i2$1","NzNoAnimationModule","i1","NzOutletModule","i2","NzInputModule","__decorate","Subject","fromEvent","Subscription","defer","merge","filter","takeUntil","tap","delay","take","switchMap","scrollIntoView","InputBoolean","UP_ARROW","DOWN_ARROW","ESCAPE","TAB","ENTER","TemplatePortal","slideMotion","NzAutocompleteOptgroupComponent","constructor","ɵfac","ɵcmp","NzStringTemplateOutletDirective","type","args","selector","exportAs","preserveWhitespaces","changeDetection","OnPush","encapsulation","None","template","nzLabel","NzOptionSelectionChange","source","isUserInput","NzAutocompleteOptionComponent","ngZone","changeDetectorRef","element","nzAutocompleteOptgroupComponent","nzDisabled","selectionChange","mouseEntered","active","selected","destroy$","ngOnInit","runOutsideAngular","nativeElement","pipe","observers","length","subscribe","run","emit","event","preventDefault","ngOnDestroy","next","select","markForCheck","emitSelectionChangeEvent","deselect","getLabel","nzValue","toString","setActiveStyles","setInactiveStyles","scrollIntoViewIfNeeded","selectViaInteraction","NgZone","ChangeDetectorRef","ElementRef","prototype","host","role","class","decorators","NZ_AUTOCOMPLETE_VALUE_ACCESSOR","provide","useExisting","NzAutocompleteTriggerDirective","multi","getNzAutocompleteMissingPanelError","Error","elementRef","overlay","viewContainerRef","nzInputGroupWhitSuffixOrPrefixDirective","document","onChange","onTouched","panelOpen","overlayRef","portal","previousValue","activeOption","nzAutocomplete","options","activeItem","ngAfterViewInit","animationStateChange","toState","dispose","complete","destroyPanel","writeValue","value","Promise","resolve","then","setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","closePanel","openPanel","attachOverlay","updateStatus","isOpen","hasAttached","detach","selectionChangeSubscription","unsubscribe","overlayOutsideClickSubscription","optionsChangeSubscription","handleKeydown","keyCode","isArrowKey","showPanel","stopPropagation","setPreviousItemActive","setNextItemActive","doBackfill","handleInput","target","parseFloat","canOpen","activeElement","handleFocus","handleBlur","subscribeOptionsChange","optionChanges","changes","positionStrategy","reapplyLastPosition","resetActiveItem","updatePosition","subscribeSelectionChange","option","setValueAndClose","subscribeOverlayOutsideClick","outsidePointerEvents","e","contains","create","getOverlayConfig","attach","detachments","updateSize","width","nzWidth","getHostWidth","setVisibility","getOverlayPosition","disposeOnNavigation","scrollStrategy","scrollStrategies","reposition","getConnectedElement","getBoundingClientRect","positions","originX","originY","overlayX","overlayY","position","flexibleConnectedTo","withFlexibleDimensions","withPush","withPositions","withTransformOriginOn","index","getOptionIndex","clearSelectedOptions","setActiveItem","nzDefaultActiveFirstOption","focus","getOption","displayValue","nzBackfill","readOnly","Overlay","ViewContainerRef","NzInputGroupWhitSuffixOrPrefixDirective","ɵdir","providers","autocomplete","undefined","NzAutocompleteComponent","directionality","noAnimation","nzOverlayClassName","nzOverlayStyle","compareWith","o1","o2","dir","activeItemIndex","EMPTY","optionMouseEnterSubscription","dataSourceChangeSubscription","optionSelectionChanges","map","onStable","asObservable","optionMouseEnter","nzDataSource","fromDataSourceOptions","fromContentOptions","_a","change","direction","detectChanges","onAnimationEvent","ngAfterContentInit","optionsInit","get","nextIndex","previousIndex","reduce","result","current","find","item","subscribeOptionChanges","dirty","setTimeout","skip","forEach","Directionality","NzNoAnimationDirective","NgClass","NgStyle","NgTemplateOutlet","NgForOf","animations","descendants","static","panel","content","NzAutocompleteModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,mBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,sBAAtB;AACA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,aAAhD,QAAqE,sBAArE;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,iBAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,uBAApB,EAA6CC,iBAA7C,EAAgEC,KAAhE,EAAuEC,YAAvE,EAAqFC,QAArF,EAA+FC,MAA/F,EAAuGC,UAAvG,EAAmHC,SAAnH,EAA8HC,MAA9H,EAAsIC,WAAtI,EAAmJC,IAAnJ,EAAyJC,eAAzJ,EAA0KC,YAA1K,EAAwLC,SAAxL,EAAmMC,QAAnM,QAAmN,eAAnN;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,gBAA/C;AACA,OAAO,KAAKC,IAAZ,MAAsB,iCAAtB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,EAA2CC,KAA3C,EAAkDC,KAAlD,QAA+D,MAA/D;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,SAA9C,QAA+D,gBAA/D;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,yBAA7C;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,GAAvC,EAA4CC,KAA5C,QAAyD,uBAAzD;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA;AACA;AACA;AACA;;;;AAIkH7C,IAAAA,EAG5G,2B;AAH4GA,IAAAA,EAG5D,U;AAH4DA,IAAAA,EAG/C,wB;;;;mBAH+CA,E;AAAAA,IAAAA,EAG5D,a;AAH4DA,IAAAA,EAG5D,kC;;;;;;;;;;;;;;AAH4DA,IAAAA,EAuoBtG,mG;;;;;;AAvoBsGA,IAAAA,EA4oB1G,gB;;;;;;AA5oB0GA,IAAAA,EA+oB1G,uC;AA/oB0GA,IAAAA,EAopBxG,U;AAppBwGA,IAAAA,EAqpB1G,e;;;;;AArpB0GA,IAAAA,EAipBxG,wG;AAjpBwGA,IAAAA,EAopBxG,a;AAppBwGA,IAAAA,EAopBxG,yF;;;;;;AAppBwGA,IAAAA,EA+oB1G,wH;;;;mBA/oB0GA,E;AAAAA,IAAAA,EAgpBrF,2C;;;;;;iBAhpBqFA,E;;AAAAA,IAAAA,EAynB5G,+B;AAznB4GA,IAAAA,EAkoB1G;AAloB0GA,MAAAA,EAkoB1G;AAAA,sBAloB0GA,EAkoB1G;AAAA,aAAqB,gCAArB;AAAA,M;AAloB0GA,IAAAA,EAqoB1G,4B;AAroB0GA,IAAAA,EAsoBxG,4B;AAtoBwGA,IAAAA,EAuoBtG,+E;AAvoBsGA,IAAAA,EAwoBxG,e;AAxoBwGA,IAAAA,EAyoB1G,e;AAzoB0GA,IAAAA,EA0oB5G,e;AA1oB4GA,IAAAA,EA2oB5G,2GA3oB4GA,EA2oB5G,wB;AA3oB4GA,IAAAA,EA8oB5G,2GA9oB4GA,EA8oB5G,wB;;;;gBA9oB4GA,E;;gBAAAA,E;;mBAAAA,E;AAAAA,IAAAA,EA4nB1G,8G;AA5nB0GA,IAAAA,EA8nB1G,yR;AA9nB0GA,IAAAA,EAuoBxF,a;AAvoBwFA,IAAAA,EAuoBxF,gE;;;;AA1oB1B,MAAM8C,+BAAN,CAAsC;AAClCC,EAAAA,WAAW,GAAG,CAAG;;AADiB;;AAGtCD,+BAA+B,CAACE,IAAhC;AAAA,mBAA4HF,+BAA5H;AAAA;;AACAA,+BAA+B,CAACG,IAAhC,kBADkHjD,EAClH;AAAA,QAAgH8C,+BAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADkH9C,MAAAA,EAClH;AADkHA,MAAAA,EAE9G,4BADJ;AADkHA,MAAAA,EAG5G,gGAFN;AADkHA,MAAAA,EAI9G,eAHJ;AADkHA,MAAAA,EAK9G,gBAJJ;AAAA;;AAAA;AADkHA,MAAAA,EAG7F,aAFrB;AADkHA,MAAAA,EAG7F,kDAFrB;AAAA;AAAA;AAAA,eAK0CqB,EAAE,CAAC6B,+BAL7C;AAAA;AAAA;AAAA;;AAMA;AAAA,qDAPkHlD,EAOlH,mBAA2F8C,+BAA3F,EAAwI,CAAC;AAC7HK,IAAAA,IAAI,EAAElD,SADuH;AAE7HmD,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,kBADX;AAECC,MAAAA,QAAQ,EAAE,gBAFX;AAGCC,MAAAA,mBAAmB,EAAE,KAHtB;AAICC,MAAAA,eAAe,EAAEtD,uBAAuB,CAACuD,MAJ1C;AAKCC,MAAAA,aAAa,EAAEvD,iBAAiB,CAACwD,IALlC;AAMCC,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AAXmB,KAAD;AAFuH,GAAD,CAAxI,EAe4B,YAAY;AAAE,WAAO,EAAP;AAAY,GAftD,EAewE;AAAEC,IAAAA,OAAO,EAAE,CAAC;AACpEV,MAAAA,IAAI,EAAE/C;AAD8D,KAAD;AAAX,GAfxE;AAAA;;AAmBA,MAAM0D,uBAAN,CAA8B;AAC1Bf,EAAAA,WAAW,CAACgB,MAAD,EAASC,WAAW,GAAG,KAAvB,EAA8B;AACrC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AAJyB;;AAM9B,MAAMC,6BAAN,CAAoC;AAChClB,EAAAA,WAAW,CAACmB,MAAD,EAASC,iBAAT,EAA4BC,OAA5B,EAAqCC,+BAArC,EAAsE;AAC7E,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,+BAAL,GAAuCA,+BAAvC;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,eAAL,GAAuB,IAAIlE,YAAJ,EAAvB;AACA,SAAKmE,YAAL,GAAoB,IAAInE,YAAJ,EAApB;AACA,SAAKoE,MAAL,GAAc,KAAd;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIjD,OAAJ,EAAhB;AACH;;AACDkD,EAAAA,QAAQ,GAAG;AACP,SAAKV,MAAL,CAAYW,iBAAZ,CAA8B,MAAM;AAChClD,MAAAA,SAAS,CAAC,KAAKyC,OAAL,CAAaU,aAAd,EAA6B,YAA7B,CAAT,CACKC,IADL,CACUhD,MAAM,CAAC,MAAM,KAAKyC,YAAL,CAAkBQ,SAAlB,CAA4BC,MAA5B,GAAqC,CAA5C,CADhB,EACgEjD,SAAS,CAAC,KAAK2C,QAAN,CADzE,EAEKO,SAFL,CAEe,MAAM;AACjB,aAAKhB,MAAL,CAAYiB,GAAZ,CAAgB,MAAM,KAAKX,YAAL,CAAkBY,IAAlB,CAAuB,IAAvB,CAAtB;AACH,OAJD;AAKAzD,MAAAA,SAAS,CAAC,KAAKyC,OAAL,CAAaU,aAAd,EAA6B,WAA7B,CAAT,CACKC,IADL,CACU/C,SAAS,CAAC,KAAK2C,QAAN,CADnB,EAEKO,SAFL,CAEeG,KAAK,IAAIA,KAAK,CAACC,cAAN,EAFxB;AAGH,KATD;AAUH;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKZ,QAAL,CAAca,IAAd;AACH;;AACDC,EAAAA,MAAM,CAACL,IAAI,GAAG,IAAR,EAAc;AAChB,SAAKV,QAAL,GAAgB,IAAhB;AACA,SAAKP,iBAAL,CAAuBuB,YAAvB;;AACA,QAAIN,IAAJ,EAAU;AACN,WAAKO,wBAAL;AACH;AACJ;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKlB,QAAL,GAAgB,KAAhB;AACA,SAAKP,iBAAL,CAAuBuB,YAAvB;AACA,SAAKC,wBAAL;AACH;AACD;;;AACAE,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKhC,OAAL,IAAgB,KAAKiC,OAAL,CAAaC,QAAb,EAAvB;AACH;AACD;;;AACAC,EAAAA,eAAe,GAAG;AACd,QAAI,CAAC,KAAKvB,MAAV,EAAkB;AACd,WAAKA,MAAL,GAAc,IAAd;AACA,WAAKN,iBAAL,CAAuBuB,YAAvB;AACH;AACJ;AACD;;;AACAO,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKxB,MAAT,EAAiB;AACb,WAAKA,MAAL,GAAc,KAAd;AACA,WAAKN,iBAAL,CAAuBuB,YAAvB;AACH;AACJ;;AACDQ,EAAAA,sBAAsB,GAAG;AACrB7D,IAAAA,cAAc,CAAC,KAAK+B,OAAL,CAAaU,aAAd,CAAd;AACH;;AACDqB,EAAAA,oBAAoB,GAAG;AACnB,QAAI,CAAC,KAAK7B,UAAV,EAAsB;AAClB,WAAKI,QAAL,GAAgB,CAAC,KAAKA,QAAtB;;AACA,UAAI,KAAKA,QAAT,EAAmB;AACf,aAAKsB,eAAL;AACH,OAFD,MAGK;AACD,aAAKC,iBAAL;AACH;;AACD,WAAKN,wBAAL,CAA8B,IAA9B;AACA,WAAKxB,iBAAL,CAAuBuB,YAAvB;AACH;AACJ;;AACDC,EAAAA,wBAAwB,CAAC3B,WAAW,GAAG,KAAf,EAAsB;AAC1C,SAAKO,eAAL,CAAqBa,IAArB,CAA0B,IAAItB,uBAAJ,CAA4B,IAA5B,EAAkCE,WAAlC,CAA1B;AACH;;AA5E+B;;AA8EpCC,6BAA6B,CAACjB,IAA9B;AAAA,mBAA0HiB,6BAA1H,EA9GkHjE,EA8GlH,mBAAyKA,EAAE,CAACoG,MAA5K,GA9GkHpG,EA8GlH,mBAA+LA,EAAE,CAACqG,iBAAlM,GA9GkHrG,EA8GlH,mBAAgOA,EAAE,CAACsG,UAAnO,GA9GkHtG,EA8GlH,mBAA0P8C,+BAA1P;AAAA;;AACAmB,6BAA6B,CAAChB,IAA9B,kBA/GkHjD,EA+GlH;AAAA,QAA8GiE,6BAA9G;AAAA;AAAA,sBAAoW,UAApW;AAAA;AAAA;AAAA;AA/GkHjE,MAAAA,EA+GlH;AAAA,eAA8G,0BAA9G;AAAA;AAAA;;AAAA;AA/GkHA,MAAAA,EA+GlH;AA/GkHA,MAAAA,EA+GlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/GkHA,MAAAA,EA+GlH;AA/GkHA,MAAAA,EAgH9G,4BADJ;AA/GkHA,MAAAA,EAiH5G,gBAFN;AA/GkHA,MAAAA,EAkH9G,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAyB,UAAU,CAAC,CACPa,YAAY,EADL,CAAD,EAEP2B,6BAA6B,CAACsC,SAFvB,EAEkC,YAFlC,EAEgD,KAAK,CAFrD,CAAV;;AAGA;AAAA,qDAvHkHvG,EAuHlH,mBAA2FiE,6BAA3F,EAAsI,CAAC;AAC3Hd,IAAAA,IAAI,EAAElD,SADqH;AAE3HmD,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,gBADX;AAECC,MAAAA,QAAQ,EAAE,cAFX;AAGCC,MAAAA,mBAAmB,EAAE,KAHtB;AAICC,MAAAA,eAAe,EAAEtD,uBAAuB,CAACuD,MAJ1C;AAKCC,MAAAA,aAAa,EAAEvD,iBAAiB,CAACwD,IALlC;AAMCC,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA,GAVmB;AAWC4C,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,UADJ;AAEFC,QAAAA,KAAK,EAAE,wCAFL;AAGF,kDAA0C,iCAHxC;AAIF,mDAA2C,UAJzC;AAKF,iDAAyC,QALvC;AAMF,mDAA2C,YANzC;AAOF,gCAAwB,qBAPtB;AAQF,gCAAwB,uBARtB;AASF,mBAAW;AATT;AAXP,KAAD;AAFqH,GAAD,CAAtI,EAyB4B,YAAY;AAChC,WAAO,CAAC;AAAEvD,MAAAA,IAAI,EAAEnD,EAAE,CAACoG;AAAX,KAAD,EAAsB;AAAEjD,MAAAA,IAAI,EAAEnD,EAAE,CAACqG;AAAX,KAAtB,EAAsD;AAAElD,MAAAA,IAAI,EAAEnD,EAAE,CAACsG;AAAX,KAAtD,EAA+E;AAAEnD,MAAAA,IAAI,EAAEL,+BAAR;AAAyC6D,MAAAA,UAAU,EAAE,CAAC;AAC5HxD,QAAAA,IAAI,EAAE7C;AADsH,OAAD;AAArD,KAA/E,CAAP;AAGH,GA7BL,EA6BuB;AAAEwF,IAAAA,OAAO,EAAE,CAAC;AACnB3C,MAAAA,IAAI,EAAE/C;AADa,KAAD,CAAX;AAEPyD,IAAAA,OAAO,EAAE,CAAC;AACVV,MAAAA,IAAI,EAAE/C;AADI,KAAD,CAFF;AAIPkE,IAAAA,UAAU,EAAE,CAAC;AACbnB,MAAAA,IAAI,EAAE/C;AADO,KAAD,CAJL;AAMPmE,IAAAA,eAAe,EAAE,CAAC;AAClBpB,MAAAA,IAAI,EAAE5C;AADY,KAAD,CANV;AAQPiE,IAAAA,YAAY,EAAE,CAAC;AACfrB,MAAAA,IAAI,EAAE5C;AADS,KAAD;AARP,GA7BvB;AAAA;AAyCA;AACA;AACA;AACA;;;AACA,MAAMqG,8BAA8B,GAAG;AACnCC,EAAAA,OAAO,EAAE5F,iBAD0B;AAEnC6F,EAAAA,WAAW,EAAEtG,UAAU,CAAC,MAAMuG,8BAAP,CAFY;AAGnCC,EAAAA,KAAK,EAAE;AAH4B,CAAvC;;AAKA,SAASC,kCAAT,GAA8C;AAC1C,SAAOC,KAAK,CAAC,oEACT,2EADS,GAET,iEAFQ,CAAZ;AAGH;;AACD,MAAMH,8BAAN,CAAqC;AACjChE,EAAAA,WAAW,CAACoE,UAAD,EAAaC,OAAb,EAAsBC,gBAAtB,EAAwCC,uCAAxC,EAAiFC,QAAjF,EAA2F;AAClG,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,uCAAL,GAA+CA,uCAA/C;AACA,SAAKC,QAAL,GAAgBA,QAAhB;;AACA,SAAKC,QAAL,GAAgB,MAAM,CAAG,CAAzB;;AACA,SAAKC,SAAL,GAAiB,MAAM,CAAG,CAA1B;;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAK/C,QAAL,GAAgB,IAAIjD,OAAJ,EAAhB;AACA,SAAKiG,UAAL,GAAkB,IAAlB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,aAAL,GAAqB,IAArB;AACH;AACD;;;AACgB,MAAZC,YAAY,GAAG;AACf,QAAI,KAAKC,cAAL,IAAuB,KAAKA,cAAL,CAAoBC,OAApB,CAA4B/C,MAAvD,EAA+D;AAC3D,aAAO,KAAK8C,cAAL,CAAoBE,UAA3B;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ;;AACDC,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKH,cAAT,EAAyB;AACrB,WAAKA,cAAL,CAAoBI,oBAApB,CAAyCpD,IAAzC,CAA8C/C,SAAS,CAAC,KAAK2C,QAAN,CAAvD,EAAwEO,SAAxE,CAAkFG,KAAK,IAAI;AACvF,YAAIA,KAAK,CAAC+C,OAAN,KAAkB,MAAtB,EAA8B;AAC1B,cAAI,KAAKT,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBU,OAAhB;AACA,iBAAKV,UAAL,GAAkB,IAAlB;AACH;AACJ;AACJ,OAPD;AAQH;AACJ;;AACDpC,EAAAA,WAAW,GAAG;AACV,SAAKZ,QAAL,CAAca,IAAd;AACA,SAAKb,QAAL,CAAc2D,QAAd;AACA,SAAKC,YAAL;AACH;;AACDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACdC,IAAAA,OAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsBC,IAAtB,CAA2B,MAAM,KAAKC,eAAL,CAAqBJ,KAArB,CAAjC;AACH;;AACDK,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,SAAKvB,QAAL,GAAgBuB,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,CAACD,EAAD,EAAK;AAClB,SAAKtB,SAAL,GAAiBsB,EAAjB;AACH;;AACDE,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AACzB,UAAM9E,OAAO,GAAG,KAAK+C,UAAL,CAAgBrC,aAAhC;AACAV,IAAAA,OAAO,CAAC+E,QAAR,GAAmBD,UAAnB;AACA,SAAKE,UAAL;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,SAAKxB,aAAL,GAAqB,KAAKV,UAAL,CAAgBrC,aAAhB,CAA8B2D,KAAnD;AACA,SAAKa,aAAL;AACA,SAAKC,YAAL;AACH;;AACDH,EAAAA,UAAU,GAAG;AACT,QAAI,KAAK1B,SAAT,EAAoB;AAChB,WAAKK,cAAL,CAAoByB,MAApB,GAA6B,KAAK9B,SAAL,GAAiB,KAA9C;;AACA,UAAI,KAAKC,UAAL,IAAmB,KAAKA,UAAL,CAAgB8B,WAAhB,EAAvB,EAAsD;AAClD,aAAK9B,UAAL,CAAgB+B,MAAhB;AACA,aAAKC,2BAAL,CAAiCC,WAAjC;AACA,aAAKC,+BAAL,CAAqCD,WAArC;AACA,aAAKE,yBAAL,CAA+BF,WAA/B;AACA,aAAKhC,MAAL,GAAc,IAAd;AACH;AACJ;AACJ;;AACDmC,EAAAA,aAAa,CAAC1E,KAAD,EAAQ;AACjB,UAAM2E,OAAO,GAAG3E,KAAK,CAAC2E,OAAtB;AACA,UAAMC,UAAU,GAAGD,OAAO,KAAKzH,QAAZ,IAAwByH,OAAO,KAAKxH,UAAvD;;AACA,QAAIwH,OAAO,KAAKvH,MAAhB,EAAwB;AACpB4C,MAAAA,KAAK,CAACC,cAAN;AACH;;AACD,QAAI,KAAKoC,SAAL,KAAmBsC,OAAO,KAAKvH,MAAZ,IAAsBuH,OAAO,KAAKtH,GAArD,CAAJ,EAA+D;AAC3D;AACA,UAAI,KAAKoF,YAAL,IAAqB,KAAKA,YAAL,CAAkBjC,QAAlB,OAAiC,KAAKgC,aAA/D,EAA8E;AAC1E,aAAKgB,eAAL,CAAqB,KAAKhB,aAA1B;AACH;;AACD,WAAKuB,UAAL;AACH,KAND,MAOK,IAAI,KAAK1B,SAAL,IAAkBsC,OAAO,KAAKrH,KAAlC,EAAyC;AAC1C,UAAI,KAAKoF,cAAL,CAAoBmC,SAAxB,EAAmC;AAC/B7E,QAAAA,KAAK,CAACC,cAAN;;AACA,YAAI,KAAKwC,YAAT,EAAuB;AACnB,eAAKA,YAAL,CAAkB3B,oBAAlB;AACH,SAFD,MAGK;AACD,eAAKiD,UAAL;AACH;AACJ;AACJ,KAVI,MAWA,IAAI,KAAK1B,SAAL,IAAkBuC,UAAlB,IAAgC,KAAKlC,cAAL,CAAoBmC,SAAxD,EAAmE;AACpE7E,MAAAA,KAAK,CAAC8E,eAAN;AACA9E,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI0E,OAAO,KAAKzH,QAAhB,EAA0B;AACtB,aAAKwF,cAAL,CAAoBqC,qBAApB;AACH,OAFD,MAGK;AACD,aAAKrC,cAAL,CAAoBsC,iBAApB;AACH;;AACD,UAAI,KAAKvC,YAAT,EAAuB;AACnB,aAAKA,YAAL,CAAkB5B,sBAAlB;AACH;;AACD,WAAKoE,UAAL;AACH;AACJ;;AACDC,EAAAA,WAAW,CAAClF,KAAD,EAAQ;AACf,UAAMmF,MAAM,GAAGnF,KAAK,CAACmF,MAArB;AACA,UAAMjD,QAAQ,GAAG,KAAKA,QAAtB;AACA,QAAIkB,KAAK,GAAG+B,MAAM,CAAC/B,KAAnB;;AACA,QAAI+B,MAAM,CAACrH,IAAP,KAAgB,QAApB,EAA8B;AAC1BsF,MAAAA,KAAK,GAAGA,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsBgC,UAAU,CAAChC,KAAD,CAAxC;AACH;;AACD,QAAI,KAAKZ,aAAL,KAAuBY,KAA3B,EAAkC;AAC9B,WAAKZ,aAAL,GAAqBY,KAArB;AACA,WAAKjB,QAAL,CAAciB,KAAd;;AACA,UAAI,KAAKiC,OAAL,MAAkBnD,QAAQ,CAACoD,aAAT,KAA2BtF,KAAK,CAACmF,MAAvD,EAA+D;AAC3D,aAAKnB,SAAL;AACH;AACJ;AACJ;;AACDuB,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKF,OAAL,EAAJ,EAAoB;AAChB,WAAKrB,SAAL;AACH;AACJ;;AACDwB,EAAAA,UAAU,GAAG;AACT,SAAKpD,SAAL;AACH;AACD;AACJ;AACA;;;AACIqD,EAAAA,sBAAsB,GAAG;AACrB,UAAMC,aAAa,GAAG,KAAKhD,cAAL,CAAoBC,OAApB,CAA4BgD,OAA5B,CAAoCjG,IAApC,CAAyC9C,GAAG,CAAC,MAAM,KAAKgJ,gBAAL,CAAsBC,mBAAtB,EAAP,CAA5C,EAAiGhJ,KAAK,CAAC,CAAD,CAAtG,CAAtB;AACA,WAAO6I,aAAa,CAAC7F,SAAd,CAAwB,MAAM;AACjC,WAAKiG,eAAL;;AACA,UAAI,KAAKzD,SAAT,EAAoB;AAChB,aAAKC,UAAL,CAAgByD,cAAhB;AACH;AACJ,KALM,CAAP;AAMH;AACD;AACJ;AACA;;;AACIC,EAAAA,wBAAwB,GAAG;AACvB,WAAO,KAAKtD,cAAL,CAAoBxD,eAApB,CAAoCW,SAApC,CAA+CoG,MAAD,IAAY;AAC7D,WAAKC,gBAAL,CAAsBD,MAAtB;AACH,KAFM,CAAP;AAGH;;AACDE,EAAAA,4BAA4B,GAAG;AAC3B,WAAO,KAAK7D,UAAL,CAAgB8D,oBAAhB,GACF1G,IADE,CACGhD,MAAM,CAAE2J,CAAD,IAAO,CAAC,KAAKvE,UAAL,CAAgBrC,aAAhB,CAA8B6G,QAA9B,CAAuCD,CAAC,CAAClB,MAAzC,CAAT,CADT,EAEFtF,SAFE,CAEQ,MAAM;AACjB,WAAKkE,UAAL;AACH,KAJM,CAAP;AAKH;;AACDE,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKvB,cAAV,EAA0B;AACtB,YAAMd,kCAAkC,EAAxC;AACH;;AACD,QAAI,CAAC,KAAKW,MAAN,IAAgB,KAAKG,cAAL,CAAoBnE,QAAxC,EAAkD;AAC9C,WAAKgE,MAAL,GAAc,IAAIhF,cAAJ,CAAmB,KAAKmF,cAAL,CAAoBnE,QAAvC,EAAiD,KAAKyD,gBAAtD,CAAd;AACH;;AACD,QAAI,CAAC,KAAKM,UAAV,EAAsB;AAClB,WAAKA,UAAL,GAAkB,KAAKP,OAAL,CAAawE,MAAb,CAAoB,KAAKC,gBAAL,EAApB,CAAlB;AACH;;AACD,QAAI,KAAKlE,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgB8B,WAAhB,EAAxB,EAAuD;AACnD,WAAK9B,UAAL,CAAgBmE,MAAhB,CAAuB,KAAKlE,MAA5B;AACA,WAAK+B,2BAAL,GAAmC,KAAK0B,wBAAL,EAAnC;AACA,WAAKvB,yBAAL,GAAiC,KAAKgB,sBAAL,EAAjC;AACA,WAAKjB,+BAAL,GAAuC,KAAK2B,4BAAL,EAAvC;AACA,WAAK7D,UAAL,CACKoE,WADL,GAEKhH,IAFL,CAEU/C,SAAS,CAAC,KAAK2C,QAAN,CAFnB,EAGKO,SAHL,CAGe,MAAM;AACjB,aAAKkE,UAAL;AACH,OALD;AAMH;;AACD,SAAKrB,cAAL,CAAoByB,MAApB,GAA6B,KAAK9B,SAAL,GAAiB,IAA9C;AACH;;AACD6B,EAAAA,YAAY,GAAG;AACX,QAAI,KAAK5B,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBqE,UAAhB,CAA2B;AAAEC,QAAAA,KAAK,EAAE,KAAKlE,cAAL,CAAoBmE,OAApB,IAA+B,KAAKC,YAAL;AAAxC,OAA3B;AACH;;AACD,SAAKpE,cAAL,CAAoBqE,aAApB;AACA,SAAKjB,eAAL;;AACA,QAAI,KAAKrD,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkB5B,sBAAlB;AACH;AACJ;;AACDqC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKZ,UAAT,EAAqB;AACjB,WAAKyB,UAAL;AACH;AACJ;;AACDyC,EAAAA,gBAAgB,GAAG;AACf,WAAO,IAAInM,aAAJ,CAAkB;AACrBuL,MAAAA,gBAAgB,EAAE,KAAKoB,kBAAL,EADG;AAErBC,MAAAA,mBAAmB,EAAE,IAFA;AAGrBC,MAAAA,cAAc,EAAE,KAAKnF,OAAL,CAAaoF,gBAAb,CAA8BC,UAA9B,EAHK;AAIrB;AACAR,MAAAA,KAAK,EAAE,KAAKlE,cAAL,CAAoBmE,OAApB,IAA+B,KAAKC,YAAL;AALjB,KAAlB,CAAP;AAOH;;AACDO,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKpF,uCAAL,GACD,KAAKA,uCAAL,CAA6CH,UAD5C,GAED,KAAKA,UAFX;AAGH;;AACDgF,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKO,mBAAL,GAA2B5H,aAA3B,CAAyC6H,qBAAzC,GAAiEV,KAAxE;AACH;;AACDI,EAAAA,kBAAkB,GAAG;AACjB,UAAMO,SAAS,GAAG,CACd,IAAIjN,sBAAJ,CAA2B;AAAEkN,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KAA3B,EAAoE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAApE,CADc,EAEd,IAAIrN,sBAAJ,CAA2B;AAAEkN,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KAA3B,EAAiE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAjE,CAFc,CAAlB;AAIA,SAAK/B,gBAAL,GAAwB,KAAK7D,OAAL,CACnB6F,QADmB,GAEnBC,mBAFmB,CAEC,KAAKR,mBAAL,EAFD,EAGnBS,sBAHmB,CAGI,KAHJ,EAInBC,QAJmB,CAIV,KAJU,EAKnBC,aALmB,CAKLT,SALK,EAMnBU,qBANmB,CAMG,sBANH,CAAxB;AAOA,WAAO,KAAKrC,gBAAZ;AACH;;AACDE,EAAAA,eAAe,GAAG;AACd,UAAMoC,KAAK,GAAG,KAAKxF,cAAL,CAAoByF,cAApB,CAAmC,KAAK3F,aAAxC,CAAd;AACA,SAAKE,cAAL,CAAoB0F,oBAApB,CAAyC,IAAzC,EAA+C,IAA/C;;AACA,QAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,WAAKxF,cAAL,CAAoB2F,aAApB,CAAkCH,KAAlC;AACA,WAAKxF,cAAL,CAAoBE,UAApB,CAA+BxC,MAA/B,CAAsC,KAAtC;AACH,KAHD,MAIK;AACD,WAAKsC,cAAL,CAAoB2F,aAApB,CAAkC,KAAK3F,cAAL,CAAoB4F,0BAApB,GAAiD,CAAjD,GAAqD,CAAC,CAAxF;AACH;AACJ;;AACDpC,EAAAA,gBAAgB,CAACD,MAAD,EAAS;AACrB,UAAM7C,KAAK,GAAG6C,MAAM,CAACxF,OAArB;AACA,SAAK+C,eAAL,CAAqByC,MAAM,CAACzF,QAAP,EAArB;AACA,SAAK2B,QAAL,CAAciB,KAAd;AACA,SAAKtB,UAAL,CAAgBrC,aAAhB,CAA8B8I,KAA9B;AACA,SAAKxE,UAAL;AACH;;AACDP,EAAAA,eAAe,CAACJ,KAAD,EAAQ;AACnB,UAAM6C,MAAM,GAAG,KAAKvD,cAAL,CAAoB8F,SAApB,CAA8BpF,KAA9B,CAAf;AACA,UAAMqF,YAAY,GAAGxC,MAAM,GAAGA,MAAM,CAACzF,QAAP,EAAH,GAAuB4C,KAAlD;AACA,SAAKtB,UAAL,CAAgBrC,aAAhB,CAA8B2D,KAA9B,GAAsCqF,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsC,EAA5E;;AACA,QAAI,CAAC,KAAK/F,cAAL,CAAoBgG,UAAzB,EAAqC;AACjC,WAAKlG,aAAL,GAAqBiG,YAArB;AACH;AACJ;;AACDxD,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKvC,cAAL,CAAoBgG,UAApB,IAAkC,KAAKhG,cAAL,CAAoBE,UAA1D,EAAsE;AAClE,WAAKY,eAAL,CAAqB,KAAKd,cAAL,CAAoBE,UAApB,CAA+BpC,QAA/B,EAArB;AACH;AACJ;;AACD6E,EAAAA,OAAO,GAAG;AACN,UAAMtG,OAAO,GAAG,KAAK+C,UAAL,CAAgBrC,aAAhC;AACA,WAAO,CAACV,OAAO,CAAC4J,QAAT,IAAqB,CAAC5J,OAAO,CAAC+E,QAArC;AACH;;AAzQgC;;AA2QrCpC,8BAA8B,CAAC/D,IAA/B;AAAA,mBAA2H+D,8BAA3H,EAzbkH/G,EAyblH,mBAA2KA,EAAE,CAACsG,UAA9K,GAzbkHtG,EAyblH,mBAAqMP,IAAI,CAACwO,OAA1M,GAzbkHjO,EAyblH,mBAA8NA,EAAE,CAACkO,gBAAjO,GAzbkHlO,EAyblH,mBAA8PuB,EAAE,CAAC4M,uCAAjQ,MAzbkHnO,EAyblH,mBAAqUF,QAArU;AAAA;;AACAiH,8BAA8B,CAACqH,IAA/B,kBA1bkHpO,EA0blH;AAAA,QAA+G+G,8BAA/G;AAAA;AAAA,8BAAgS,KAAhS,uBAA4T,MAA5T;AAAA;AAAA;AA1bkH/G,MAAAA,EA0blH;AAAA,eAA+G,iBAA/G;AAAA;AAAA,eAA+G,gBAA/G;AAAA;AAAA,eAA+G,uBAA/G;AAAA;AAAA,eAA+G,yBAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1bkHA,EA0blH,oBAA0d,CAAC4G,8BAAD,CAA1d;AAAA;;AACA;AAAA,qDA3bkH5G,EA2blH,mBAA2F+G,8BAA3F,EAAuI,CAAC;AAC5H5D,IAAAA,IAAI,EAAE1C,SADsH;AAE5H2C,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAG,iDADZ;AAECC,MAAAA,QAAQ,EAAE,uBAFX;AAGC+K,MAAAA,SAAS,EAAE,CAACzH,8BAAD,CAHZ;AAICJ,MAAAA,IAAI,EAAE;AACF8H,QAAAA,YAAY,EAAE,KADZ;AAEF,6BAAqB,MAFnB;AAGF,qBAAa,eAHX;AAIF,kBAAU,cAJR;AAKF,mBAAW,qBALT;AAMF,qBAAa;AANX;AAJP,KAAD;AAFsH,GAAD,CAAvI,EAe4B,YAAY;AAChC,WAAO,CAAC;AAAEnL,MAAAA,IAAI,EAAEnD,EAAE,CAACsG;AAAX,KAAD,EAA0B;AAAEnD,MAAAA,IAAI,EAAE1D,IAAI,CAACwO;AAAb,KAA1B,EAAkD;AAAE9K,MAAAA,IAAI,EAAEnD,EAAE,CAACkO;AAAX,KAAlD,EAAiF;AAAE/K,MAAAA,IAAI,EAAE5B,EAAE,CAAC4M,uCAAX;AAAoDxH,MAAAA,UAAU,EAAE,CAAC;AACzIxD,QAAAA,IAAI,EAAE7C;AADmI,OAAD;AAAhE,KAAjF,EAEW;AAAE6C,MAAAA,IAAI,EAAEoL,SAAR;AAAmB5H,MAAAA,UAAU,EAAE,CAAC;AAClCxD,QAAAA,IAAI,EAAE7C;AAD4B,OAAD,EAElC;AACC6C,QAAAA,IAAI,EAAEzC,MADP;AAEC0C,QAAAA,IAAI,EAAE,CAACtD,QAAD;AAFP,OAFkC;AAA/B,KAFX,CAAP;AAQH,GAxBL,EAwBuB;AAAEiI,IAAAA,cAAc,EAAE,CAAC;AAC1B5E,MAAAA,IAAI,EAAE/C;AADoB,KAAD;AAAlB,GAxBvB;AAAA;;AA4BA,MAAMoO,uBAAN,CAA8B;AAC1BzL,EAAAA,WAAW,CAACoB,iBAAD,EAAoBD,MAApB,EAA4BuK,cAA5B,EAA4CC,WAA5C,EAAyD;AAChE,SAAKvK,iBAAL,GAAyBA,iBAAzB;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKuK,cAAL,GAAsBA,cAAtB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKjB,0BAAL,GAAkC,IAAlC;AACA,SAAKI,UAAL,GAAkB,KAAlB;;AACA,SAAKc,WAAL,GAAmB,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAAE,KAAKC,EAAtC;;AACA,SAAKxK,eAAL,GAAuB,IAAIlE,YAAJ,EAAvB;AACA,SAAK6J,SAAL,GAAiB,IAAjB;AACA,SAAKV,MAAL,GAAc,KAAd;AACA,SAAKvB,UAAL,GAAkB,IAAlB;AACA,SAAK+G,GAAL,GAAW,KAAX;AACA,SAAKrK,QAAL,GAAgB,IAAIjD,OAAJ,EAAhB;AACA,SAAKyG,oBAAL,GAA4B,IAAI9H,YAAJ,EAA5B;AACA,SAAK4O,eAAL,GAAuB,CAAC,CAAxB;AACA,SAAKtF,2BAAL,GAAmC/H,YAAY,CAACsN,KAAhD;AACA,SAAKC,4BAAL,GAAoCvN,YAAY,CAACsN,KAAjD;AACA,SAAKE,4BAAL,GAAoCxN,YAAY,CAACsN,KAAjD;AACA;;AACA,SAAKG,sBAAL,GAA8BxN,KAAK,CAAC,MAAM;AACtC,UAAI,KAAKmG,OAAT,EAAkB;AACd,eAAOlG,KAAK,CAAC,GAAG,KAAKkG,OAAL,CAAasH,GAAb,CAAiBhE,MAAM,IAAIA,MAAM,CAAC/G,eAAlC,CAAJ,CAAZ;AACH;;AACD,aAAO,KAAKL,MAAL,CAAYqL,QAAZ,CAAqBC,YAArB,GAAoCzK,IAApC,CAAyC5C,IAAI,CAAC,CAAD,CAA7C,EAAkDC,SAAS,CAAC,MAAM,KAAKiN,sBAAZ,CAA3D,CAAP;AACH,KALkC,CAAnC;AAMA,SAAKI,gBAAL,GAAwB5N,KAAK,CAAC,MAAM;AAChC,UAAI,KAAKmG,OAAT,EAAkB;AACd,eAAOlG,KAAK,CAAC,GAAG,KAAKkG,OAAL,CAAasH,GAAb,CAAiBhE,MAAM,IAAIA,MAAM,CAAC9G,YAAlC,CAAJ,CAAZ;AACH;;AACD,aAAO,KAAKN,MAAL,CAAYqL,QAAZ,CAAqBC,YAArB,GAAoCzK,IAApC,CAAyC5C,IAAI,CAAC,CAAD,CAA7C,EAAkDC,SAAS,CAAC,MAAM,KAAKqN,gBAAZ,CAA3D,CAAP;AACH,KAL4B,CAA7B;AAMH;AACD;AACJ;AACA;;;AACe,MAAPzH,OAAO,GAAG;AACV;AACA,QAAI,KAAK0H,YAAT,EAAuB;AACnB,aAAO,KAAKC,qBAAZ;AACH,KAFD,MAGK;AACD,aAAO,KAAKC,kBAAZ;AACH;AACJ;;AACDhL,EAAAA,QAAQ,GAAG;AACP,QAAIiL,EAAJ;;AACA,KAACA,EAAE,GAAG,KAAKpB,cAAL,CAAoBqB,MAA1B,MAAsC,IAAtC,IAA8CD,EAAE,KAAK,KAAK,CAA1D,GAA8D,KAAK,CAAnE,GAAuEA,EAAE,CAAC9K,IAAH,CAAQ/C,SAAS,CAAC,KAAK2C,QAAN,CAAjB,EAAkCO,SAAlC,CAA6C6K,SAAD,IAAe;AAC9H,WAAKf,GAAL,GAAWe,SAAX;AACA,WAAK5L,iBAAL,CAAuB6L,aAAvB;AACH,KAHsE,CAAvE;AAIA,SAAKhB,GAAL,GAAW,KAAKP,cAAL,CAAoBhG,KAA/B;AACH;;AACDwH,EAAAA,gBAAgB,CAAC5K,KAAD,EAAQ;AACpB,SAAK8C,oBAAL,CAA0B/C,IAA1B,CAA+BC,KAA/B;AACH;;AACD6K,EAAAA,kBAAkB,GAAG;AACjB,QAAI,CAAC,KAAKR,YAAV,EAAwB;AACpB,WAAKS,WAAL;AACH;AACJ;;AACDjI,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKwH,YAAT,EAAuB;AACnB,WAAKS,WAAL;AACH;AACJ;;AACD5K,EAAAA,WAAW,GAAG;AACV,SAAK6J,4BAAL,CAAkCxF,WAAlC;AACA,SAAKD,2BAAL,CAAiCC,WAAjC;AACA,SAAKuF,4BAAL,CAAkCvF,WAAlC,GAHU,CAIV;AACA;AACA;;AACA,SAAKwF,4BAAL,GAAoC,KAAKzF,2BAAL,GAAmC,KAAKwF,4BAAL,GAAoC,IAA3G;AACA,SAAKxK,QAAL,CAAca,IAAd;AACA,SAAKb,QAAL,CAAc2D,QAAd;AACH;;AACD8D,EAAAA,aAAa,GAAG;AACZ,SAAKlC,SAAL,GAAiB,CAAC,CAAC,KAAKlC,OAAL,CAAa/C,MAAhC;AACA,SAAKd,iBAAL,CAAuBuB,YAAvB;AACH;;AACDgI,EAAAA,aAAa,CAACH,KAAD,EAAQ;AACjB,UAAMtF,UAAU,GAAG,KAAKD,OAAL,CAAaoI,GAAb,CAAiB7C,KAAjB,CAAnB;;AACA,QAAItF,UAAU,IAAI,CAACA,UAAU,CAACxD,MAA9B,EAAsC;AAClC,WAAKwD,UAAL,GAAkBA,UAAlB;AACA,WAAKgH,eAAL,GAAuB1B,KAAvB;AACA,WAAKE,oBAAL,CAA0B,KAAKxF,UAA/B;AACA,WAAKA,UAAL,CAAgBjC,eAAhB;AACH,KALD,MAMK;AACD,WAAKiC,UAAL,GAAkB,IAAlB;AACA,WAAKgH,eAAL,GAAuB,CAAC,CAAxB;AACA,WAAKxB,oBAAL;AACH;;AACD,SAAKtJ,iBAAL,CAAuBuB,YAAvB;AACH;;AACD2E,EAAAA,iBAAiB,GAAG;AAChB,UAAMgG,SAAS,GAAG,KAAKpB,eAAL,GAAuB,CAAvB,IAA4B,KAAKjH,OAAL,CAAa/C,MAAb,GAAsB,CAAlD,GAAsD,KAAKgK,eAAL,GAAuB,CAA7E,GAAiF,CAAnG;AACA,SAAKvB,aAAL,CAAmB2C,SAAnB;AACH;;AACDjG,EAAAA,qBAAqB,GAAG;AACpB,UAAMkG,aAAa,GAAG,KAAKrB,eAAL,GAAuB,CAAvB,GAA2B,CAA3B,GAA+B,KAAKjH,OAAL,CAAa/C,MAAb,GAAsB,CAArD,GAAyD,KAAKgK,eAAL,GAAuB,CAAtG;AACA,SAAKvB,aAAL,CAAmB4C,aAAnB;AACH;;AACD9C,EAAAA,cAAc,CAAC/E,KAAD,EAAQ;AAClB,WAAO,KAAKT,OAAL,CAAauI,MAAb,CAAoB,CAACC,MAAD,EAASC,OAAT,EAAkBlD,KAAlB,KAA4BiD,MAAM,KAAK,CAAC,CAAZ,GAAiB,KAAK3B,WAAL,CAAiBpG,KAAjB,EAAwBgI,OAAO,CAAC3K,OAAhC,IAA2CyH,KAA3C,GAAmD,CAAC,CAArE,GAA0EiD,MAA1H,EAAkI,CAAC,CAAnI,CAAP;AACH;;AACD3C,EAAAA,SAAS,CAACpF,KAAD,EAAQ;AACb,WAAO,KAAKT,OAAL,CAAa0I,IAAb,CAAkBC,IAAI,IAAI,KAAK9B,WAAL,CAAiBpG,KAAjB,EAAwBkI,IAAI,CAAC7K,OAA7B,CAA1B,KAAoE,IAA3E;AACH;;AACDqK,EAAAA,WAAW,GAAG;AACV,SAAK/D,aAAL;AACA,SAAKwE,sBAAL;AACA,UAAM5F,OAAO,GAAG,KAAK0E,YAAL,GAAoB,KAAKC,qBAAL,CAA2B3E,OAA/C,GAAyD,KAAK4E,kBAAL,CAAwB5E,OAAjG,CAHU,CAIV;;AACA,SAAKoE,4BAAL,GAAoCpE,OAAO,CAAC9F,SAAR,CAAkBwG,CAAC,IAAI;AACvD,UAAI,CAACA,CAAC,CAACmF,KAAH,IAAY,KAAKrH,MAArB,EAA6B;AACzBsH,QAAAA,UAAU,CAAC,MAAM,KAAK1E,aAAL,EAAP,CAAV;AACH;;AACD,WAAKwE,sBAAL;AACH,KALmC,CAApC;AAMH;AACD;AACJ;AACA;;;AACInD,EAAAA,oBAAoB,CAACsD,IAAD,EAAOnL,QAAQ,GAAG,KAAlB,EAAyB;AACzC,SAAKoC,OAAL,CAAagJ,OAAb,CAAqB1F,MAAM,IAAI;AAC3B,UAAIA,MAAM,KAAKyF,IAAf,EAAqB;AACjB,YAAInL,QAAJ,EAAc;AACV0F,UAAAA,MAAM,CAAC1F,QAAP;AACH;;AACD0F,QAAAA,MAAM,CAACrF,iBAAP;AACH;AACJ,KAPD;AAQH;;AACD2K,EAAAA,sBAAsB,GAAG;AACrB,SAAKjH,2BAAL,CAAiCC,WAAjC;AACA,SAAKD,2BAAL,GAAmC,KAAK0F,sBAAL,CAC9BtK,IAD8B,CACzBhD,MAAM,CAAEsD,KAAD,IAAWA,KAAK,CAACrB,WAAlB,CADmB,EAE9BkB,SAF8B,CAEnBG,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACtB,MAAN,CAAa0B,MAAb;AACAJ,MAAAA,KAAK,CAACtB,MAAN,CAAaiC,eAAb;AACA,WAAKiC,UAAL,GAAkB5C,KAAK,CAACtB,MAAxB;AACA,WAAKkL,eAAL,GAAuB,KAAKzB,cAAL,CAAoB,KAAKvF,UAAL,CAAgBnC,OAApC,CAAvB;AACA,WAAK2H,oBAAL,CAA0BpI,KAAK,CAACtB,MAAhC,EAAwC,IAAxC;AACA,WAAKQ,eAAL,CAAqBa,IAArB,CAA0BC,KAAK,CAACtB,MAAhC;AACH,KATkC,CAAnC;AAUA,SAAKoL,4BAAL,CAAkCvF,WAAlC;AACA,SAAKuF,4BAAL,GAAoC,KAAKM,gBAAL,CAAsBvK,SAAtB,CAAiCG,KAAD,IAAW;AAC3EA,MAAAA,KAAK,CAACW,eAAN;AACA,WAAKiC,UAAL,GAAkB5C,KAAlB;AACA,WAAK4J,eAAL,GAAuB,KAAKzB,cAAL,CAAoB,KAAKvF,UAAL,CAAgBnC,OAApC,CAAvB;AACA,WAAK2H,oBAAL,CAA0BpI,KAA1B;AACH,KALmC,CAApC;AAMH;;AA7JyB;;AA+J9BmJ,uBAAuB,CAACxL,IAAxB;AAAA,mBAAoHwL,uBAApH,EAtnBkHxO,EAsnBlH,mBAA6JA,EAAE,CAACqG,iBAAhK,GAtnBkHrG,EAsnBlH,mBAA8LA,EAAE,CAACoG,MAAjM,GAtnBkHpG,EAsnBlH,mBAAoNT,IAAI,CAAC0R,cAAzN,MAtnBkHjR,EAsnBlH,mBAAoQmB,IAAI,CAAC+P,sBAAzQ;AAAA;;AACA1C,uBAAuB,CAACvL,IAAxB,kBAvnBkHjD,EAunBlH;AAAA,QAAwGwO,uBAAxG;AAAA;AAAA;AAAA;AAvnBkHxO,MAAAA,EAunBlH,0BAAogBiE,6BAApgB;AAAA;;AAAA;AAAA;;AAvnBkHjE,MAAAA,EAunBlH,qBAvnBkHA,EAunBlH;AAAA;AAAA;AAAA;AAAA;AAvnBkHA,MAAAA,EAunBlH,aAA2nBW,WAA3nB;AAvnBkHX,MAAAA,EAunBlH;AAvnBkHA,MAAAA,EAunBlH;AAvnBkHA,MAAAA,EAunBlH,aAAu3BiE,6BAAv3B;AAAA;;AAAA;AAAA;;AAvnBkHjE,MAAAA,EAunBlH,qBAvnBkHA,EAunBlH;AAvnBkHA,MAAAA,EAunBlH,qBAvnBkHA,EAunBlH;AAvnBkHA,MAAAA,EAunBlH,qBAvnBkHA,EAunBlH;AAvnBkHA,MAAAA,EAunBlH,qBAvnBkHA,EAunBlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvnBkHA,MAAAA,EAunBlH;AAvnBkHA,MAAAA,EAwnB9G,oFADJ;AAAA;AAAA;AAAA,eAiC0CiE,6BAjC1C,EAiCqPpE,EAAE,CAACsR,OAjCxP,EAiCgUtR,EAAE,CAACuR,OAjCnU,EAiCkYjQ,IAAI,CAAC+P,sBAjCvY,EAiC8frR,EAAE,CAACwR,gBAjCjgB,EAiCsnBxR,EAAE,CAACyR,OAjCznB;AAAA;AAAA;AAAA,eAiCquB,CAACzO,WAAD;AAjCruB;AAAA;AAAA;;AAkCApB,UAAU,CAAC,CACPa,YAAY,EADL,CAAD,EAEPkM,uBAAuB,CAACjI,SAFjB,EAE4B,4BAF5B,EAE0D,KAAK,CAF/D,CAAV;;AAGA9E,UAAU,CAAC,CACPa,YAAY,EADL,CAAD,EAEPkM,uBAAuB,CAACjI,SAFjB,EAE4B,YAF5B,EAE0C,KAAK,CAF/C,CAAV;;AAGA;AAAA,qDA/pBkHvG,EA+pBlH,mBAA2FwO,uBAA3F,EAAgI,CAAC;AACrHrL,IAAAA,IAAI,EAAElD,SAD+G;AAErHmD,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,iBADX;AAECC,MAAAA,QAAQ,EAAE,gBAFX;AAGCC,MAAAA,mBAAmB,EAAE,KAHtB;AAICC,MAAAA,eAAe,EAAEtD,uBAAuB,CAACuD,MAJ1C;AAKCC,MAAAA,aAAa,EAAEvD,iBAAiB,CAACwD,IALlC;AAMCC,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAvCmB;AAwCC2N,MAAAA,UAAU,EAAE,CAAC1O,WAAD;AAxCb,KAAD;AAF+G,GAAD,CAAhI,EA4C4B,YAAY;AAChC,WAAO,CAAC;AAAEM,MAAAA,IAAI,EAAEnD,EAAE,CAACqG;AAAX,KAAD,EAAiC;AAAElD,MAAAA,IAAI,EAAEnD,EAAE,CAACoG;AAAX,KAAjC,EAAsD;AAAEjD,MAAAA,IAAI,EAAE5D,IAAI,CAAC0R,cAAb;AAA6BtK,MAAAA,UAAU,EAAE,CAAC;AACvFxD,QAAAA,IAAI,EAAE7C;AADiF,OAAD;AAAzC,KAAtD,EAEW;AAAE6C,MAAAA,IAAI,EAAEhC,IAAI,CAAC+P,sBAAb;AAAqCvK,MAAAA,UAAU,EAAE,CAAC;AACpDxD,QAAAA,IAAI,EAAEvC;AAD8C,OAAD,EAEpD;AACCuC,QAAAA,IAAI,EAAE7C;AADP,OAFoD;AAAjD,KAFX,CAAP;AAOH,GApDL,EAoDuB;AAAE4L,IAAAA,OAAO,EAAE,CAAC;AACnB/I,MAAAA,IAAI,EAAE/C;AADa,KAAD,CAAX;AAEPuO,IAAAA,kBAAkB,EAAE,CAAC;AACrBxL,MAAAA,IAAI,EAAE/C;AADe,KAAD,CAFb;AAIPwO,IAAAA,cAAc,EAAE,CAAC;AACjBzL,MAAAA,IAAI,EAAE/C;AADW,KAAD,CAJT;AAMPuN,IAAAA,0BAA0B,EAAE,CAAC;AAC7BxK,MAAAA,IAAI,EAAE/C;AADuB,KAAD,CANrB;AAQP2N,IAAAA,UAAU,EAAE,CAAC;AACb5K,MAAAA,IAAI,EAAE/C;AADO,KAAD,CARL;AAUPyO,IAAAA,WAAW,EAAE,CAAC;AACd1L,MAAAA,IAAI,EAAE/C;AADQ,KAAD,CAVN;AAYPsP,IAAAA,YAAY,EAAE,CAAC;AACfvM,MAAAA,IAAI,EAAE/C;AADS,KAAD,CAZP;AAcPmE,IAAAA,eAAe,EAAE,CAAC;AAClBpB,MAAAA,IAAI,EAAE5C;AADY,KAAD,CAdV;AAgBPqP,IAAAA,kBAAkB,EAAE,CAAC;AACrBzM,MAAAA,IAAI,EAAEtC,eADe;AAErBuC,MAAAA,IAAI,EAAE,CAACa,6BAAD,EAAgC;AAAEuN,QAAAA,WAAW,EAAE;AAAf,OAAhC;AAFe,KAAD,CAhBb;AAmBP7B,IAAAA,qBAAqB,EAAE,CAAC;AACxBxM,MAAAA,IAAI,EAAErC,YADkB;AAExBsC,MAAAA,IAAI,EAAE,CAACa,6BAAD;AAFkB,KAAD,CAnBhB;AAsBPL,IAAAA,QAAQ,EAAE,CAAC;AACXT,MAAAA,IAAI,EAAEpC,SADK;AAEXqC,MAAAA,IAAI,EAAE,CAACzC,WAAD,EAAc;AAAE8Q,QAAAA,MAAM,EAAE;AAAV,OAAd;AAFK,KAAD,CAtBH;AAyBPC,IAAAA,KAAK,EAAE,CAAC;AACRvO,MAAAA,IAAI,EAAEpC,SADE;AAERqC,MAAAA,IAAI,EAAE,CAAC,OAAD,EAAU;AAAEqO,QAAAA,MAAM,EAAE;AAAV,OAAV;AAFE,KAAD,CAzBA;AA4BPE,IAAAA,OAAO,EAAE,CAAC;AACVxO,MAAAA,IAAI,EAAEpC,SADI;AAEVqC,MAAAA,IAAI,EAAE,CAAC,SAAD,EAAY;AAAEqO,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAFI,KAAD;AA5BF,GApDvB;AAAA;AAqFA;AACA;AACA;AACA;;;AACA,MAAMG,oBAAN,CAA2B;;AAE3BA,oBAAoB,CAAC5O,IAArB;AAAA,mBAAiH4O,oBAAjH;AAAA;;AACAA,oBAAoB,CAACC,IAArB,kBA3vBkH7R,EA2vBlH;AAAA,QAAkH4R;AAAlH;AAOAA,oBAAoB,CAACE,IAArB,kBAlwBkH9R,EAkwBlH;AAAA,YAAkJ,CAACR,UAAD,EAAaO,YAAb,EAA2BH,aAA3B,EAA0CsB,WAA1C,EAAuDI,cAAvD,EAAuEF,mBAAvE,EAA4FI,aAA5F,CAAlJ;AAAA;;AACA;AAAA,qDAnwBkHxB,EAmwBlH,mBAA2F4R,oBAA3F,EAA6H,CAAC;AAClHzO,IAAAA,IAAI,EAAEnC,QAD4G;AAElHoC,IAAAA,IAAI,EAAE,CAAC;AACC2O,MAAAA,YAAY,EAAE,CACVvD,uBADU,EAEVvK,6BAFU,EAGV8C,8BAHU,EAIVjE,+BAJU,CADf;AAOCkP,MAAAA,OAAO,EAAE,CACLxD,uBADK,EAELvK,6BAFK,EAGL8C,8BAHK,EAILjE,+BAJK,CAPV;AAaCmP,MAAAA,OAAO,EAAE,CAACzS,UAAD,EAAaO,YAAb,EAA2BH,aAA3B,EAA0CsB,WAA1C,EAAuDI,cAAvD,EAAuEF,mBAAvE,EAA4FI,aAA5F;AAbV,KAAD;AAF4G,GAAD,CAA7H;AAAA;AAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASoF,8BAAT,EAAyC4H,uBAAzC,EAAkEoD,oBAAlE,EAAwF9O,+BAAxF,EAAyHmB,6BAAzH,EAAwJ8C,8BAAxJ,EAAwLjD,uBAAxL,EAAiNmD,kCAAjN","sourcesContent":["import * as i1$2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, ConnectionPositionPair, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, Optional, Output, forwardRef, Directive, Inject, TemplateRef, Host, ContentChildren, ViewChildren, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i2$1 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i2 from 'ng-zorro-antd/input';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent, Subscription, defer, merge } from 'rxjs';\nimport { filter, takeUntil, tap, delay, take, switchMap } from 'rxjs/operators';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteOptgroupComponent {\n    constructor() { }\n}\nNzAutocompleteOptgroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteOptgroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzAutocompleteOptgroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAutocompleteOptgroupComponent, selector: \"nz-auto-optgroup\", inputs: { nzLabel: \"nzLabel\" }, exportAs: [\"nzAutoOptgroup\"], ngImport: i0, template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `, isInline: true, directives: [{ type: i1.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteOptgroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-auto-optgroup',\n                    exportAs: 'nzAutoOptgroup',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzLabel: [{\n                type: Input\n            }] } });\n\nclass NzOptionSelectionChange {\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass NzAutocompleteOptionComponent {\n    constructor(ngZone, changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n        this.ngZone = ngZone;\n        this.changeDetectorRef = changeDetectorRef;\n        this.element = element;\n        this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n        this.nzDisabled = false;\n        this.selectionChange = new EventEmitter();\n        this.mouseEntered = new EventEmitter();\n        this.active = false;\n        this.selected = false;\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.element.nativeElement, 'mouseenter')\n                .pipe(filter(() => this.mouseEntered.observers.length > 0), takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.ngZone.run(() => this.mouseEntered.emit(this));\n            });\n            fromEvent(this.element.nativeElement, 'mousedown')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => event.preventDefault());\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n    select(emit = true) {\n        this.selected = true;\n        this.changeDetectorRef.markForCheck();\n        if (emit) {\n            this.emitSelectionChangeEvent();\n        }\n    }\n    deselect() {\n        this.selected = false;\n        this.changeDetectorRef.markForCheck();\n        this.emitSelectionChangeEvent();\n    }\n    /** Git display label */\n    getLabel() {\n        return this.nzLabel || this.nzValue.toString();\n    }\n    /** Set active (only styles) */\n    setActiveStyles() {\n        if (!this.active) {\n            this.active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /** Unset active (only styles) */\n    setInactiveStyles() {\n        if (this.active) {\n            this.active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    scrollIntoViewIfNeeded() {\n        scrollIntoView(this.element.nativeElement);\n    }\n    selectViaInteraction() {\n        if (!this.nzDisabled) {\n            this.selected = !this.selected;\n            if (this.selected) {\n                this.setActiveStyles();\n            }\n            else {\n                this.setInactiveStyles();\n            }\n            this.emitSelectionChangeEvent(true);\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    emitSelectionChangeEvent(isUserInput = false) {\n        this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n    }\n}\nNzAutocompleteOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteOptionComponent, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: NzAutocompleteOptgroupComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzAutocompleteOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAutocompleteOptionComponent, selector: \"nz-auto-option\", inputs: { nzValue: \"nzValue\", nzLabel: \"nzLabel\", nzDisabled: \"nzDisabled\" }, outputs: { selectionChange: \"selectionChange\", mouseEntered: \"mouseEntered\" }, host: { attributes: { \"role\": \"menuitem\" }, listeners: { \"click\": \"selectViaInteraction()\" }, properties: { \"class.ant-select-item-option-grouped\": \"nzAutocompleteOptgroupComponent\", \"class.ant-select-item-option-selected\": \"selected\", \"class.ant-select-item-option-active\": \"active\", \"class.ant-select-item-option-disabled\": \"nzDisabled\", \"attr.aria-selected\": \"selected.toString()\", \"attr.aria-disabled\": \"nzDisabled.toString()\" }, classAttribute: \"ant-select-item ant-select-item-option\" }, exportAs: [\"nzAutoOption\"], ngImport: i0, template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteOptionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-auto-option',\n                    exportAs: 'nzAutoOption',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                    host: {\n                        role: 'menuitem',\n                        class: 'ant-select-item ant-select-item-option',\n                        '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n                        '[class.ant-select-item-option-selected]': 'selected',\n                        '[class.ant-select-item-option-active]': 'active',\n                        '[class.ant-select-item-option-disabled]': 'nzDisabled',\n                        '[attr.aria-selected]': 'selected.toString()',\n                        '[attr.aria-disabled]': 'nzDisabled.toString()',\n                        '(click)': 'selectViaInteraction()'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: NzAutocompleteOptgroupComponent, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzValue: [{\n                type: Input\n            }], nzLabel: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], mouseEntered: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n    multi: true\n};\nfunction getNzAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' +\n        'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\nclass NzAutocompleteTriggerDirective {\n    constructor(elementRef, overlay, viewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective, document) {\n        this.elementRef = elementRef;\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.nzInputGroupWhitSuffixOrPrefixDirective = nzInputGroupWhitSuffixOrPrefixDirective;\n        this.document = document;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.panelOpen = false;\n        this.destroy$ = new Subject();\n        this.overlayRef = null;\n        this.portal = null;\n        this.previousValue = null;\n    }\n    /** Current active option */\n    get activeOption() {\n        if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n            return this.nzAutocomplete.activeItem;\n        }\n        else {\n            return null;\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzAutocomplete) {\n            this.nzAutocomplete.animationStateChange.pipe(takeUntil(this.destroy$)).subscribe(event => {\n                if (event.toState === 'void') {\n                    if (this.overlayRef) {\n                        this.overlayRef.dispose();\n                        this.overlayRef = null;\n                    }\n                }\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.destroyPanel();\n    }\n    writeValue(value) {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        const element = this.elementRef.nativeElement;\n        element.disabled = isDisabled;\n        this.closePanel();\n    }\n    openPanel() {\n        this.previousValue = this.elementRef.nativeElement.value;\n        this.attachOverlay();\n        this.updateStatus();\n    }\n    closePanel() {\n        if (this.panelOpen) {\n            this.nzAutocomplete.isOpen = this.panelOpen = false;\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this.overlayRef.detach();\n                this.selectionChangeSubscription.unsubscribe();\n                this.overlayOutsideClickSubscription.unsubscribe();\n                this.optionsChangeSubscription.unsubscribe();\n                this.portal = null;\n            }\n        }\n    }\n    handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n            // Reset value when tab / ESC close\n            if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n                this.setTriggerValue(this.previousValue);\n            }\n            this.closePanel();\n        }\n        else if (this.panelOpen && keyCode === ENTER) {\n            if (this.nzAutocomplete.showPanel) {\n                event.preventDefault();\n                if (this.activeOption) {\n                    this.activeOption.selectViaInteraction();\n                }\n                else {\n                    this.closePanel();\n                }\n            }\n        }\n        else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (keyCode === UP_ARROW) {\n                this.nzAutocomplete.setPreviousItemActive();\n            }\n            else {\n                this.nzAutocomplete.setNextItemActive();\n            }\n            if (this.activeOption) {\n                this.activeOption.scrollIntoViewIfNeeded();\n            }\n            this.doBackfill();\n        }\n    }\n    handleInput(event) {\n        const target = event.target;\n        const document = this.document;\n        let value = target.value;\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n        if (this.previousValue !== value) {\n            this.previousValue = value;\n            this.onChange(value);\n            if (this.canOpen() && document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    handleFocus() {\n        if (this.canOpen()) {\n            this.openPanel();\n        }\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    /**\n     * Subscription data source changes event\n     */\n    subscribeOptionsChange() {\n        const optionChanges = this.nzAutocomplete.options.changes.pipe(tap(() => this.positionStrategy.reapplyLastPosition()), delay(0));\n        return optionChanges.subscribe(() => {\n            this.resetActiveItem();\n            if (this.panelOpen) {\n                this.overlayRef.updatePosition();\n            }\n        });\n    }\n    /**\n     * Subscription option changes event and set the value\n     */\n    subscribeSelectionChange() {\n        return this.nzAutocomplete.selectionChange.subscribe((option) => {\n            this.setValueAndClose(option);\n        });\n    }\n    subscribeOverlayOutsideClick() {\n        return this.overlayRef.outsidePointerEvents()\n            .pipe(filter((e) => !this.elementRef.nativeElement.contains(e.target)))\n            .subscribe(() => {\n            this.closePanel();\n        });\n    }\n    attachOverlay() {\n        if (!this.nzAutocomplete) {\n            throw getNzAutocompleteMissingPanelError();\n        }\n        if (!this.portal && this.nzAutocomplete.template) {\n            this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n        }\n        if (!this.overlayRef) {\n            this.overlayRef = this.overlay.create(this.getOverlayConfig());\n        }\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\n            this.overlayRef.attach(this.portal);\n            this.selectionChangeSubscription = this.subscribeSelectionChange();\n            this.optionsChangeSubscription = this.subscribeOptionsChange();\n            this.overlayOutsideClickSubscription = this.subscribeOverlayOutsideClick();\n            this.overlayRef\n                .detachments()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.closePanel();\n            });\n        }\n        this.nzAutocomplete.isOpen = this.panelOpen = true;\n    }\n    updateStatus() {\n        if (this.overlayRef) {\n            this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n        }\n        this.nzAutocomplete.setVisibility();\n        this.resetActiveItem();\n        if (this.activeOption) {\n            this.activeOption.scrollIntoViewIfNeeded();\n        }\n    }\n    destroyPanel() {\n        if (this.overlayRef) {\n            this.closePanel();\n        }\n    }\n    getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this.getOverlayPosition(),\n            disposeOnNavigation: true,\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\n            // default host element width\n            width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n        });\n    }\n    getConnectedElement() {\n        return this.nzInputGroupWhitSuffixOrPrefixDirective\n            ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef\n            : this.elementRef;\n    }\n    getHostWidth() {\n        return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    getOverlayPosition() {\n        const positions = [\n            new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n            new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n        ];\n        this.positionStrategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions(positions)\n            .withTransformOriginOn('.ant-select-dropdown');\n        return this.positionStrategy;\n    }\n    resetActiveItem() {\n        const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n        this.nzAutocomplete.clearSelectedOptions(null, true);\n        if (index !== -1) {\n            this.nzAutocomplete.setActiveItem(index);\n            this.nzAutocomplete.activeItem.select(false);\n        }\n        else {\n            this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n        }\n    }\n    setValueAndClose(option) {\n        const value = option.nzValue;\n        this.setTriggerValue(option.getLabel());\n        this.onChange(value);\n        this.elementRef.nativeElement.focus();\n        this.closePanel();\n    }\n    setTriggerValue(value) {\n        const option = this.nzAutocomplete.getOption(value);\n        const displayValue = option ? option.getLabel() : value;\n        this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n        if (!this.nzAutocomplete.nzBackfill) {\n            this.previousValue = displayValue;\n        }\n    }\n    doBackfill() {\n        if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n            this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n        }\n    }\n    canOpen() {\n        const element = this.elementRef.nativeElement;\n        return !element.readOnly && !element.disabled;\n    }\n}\nNzAutocompleteTriggerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteTriggerDirective, deps: [{ token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i2.NzInputGroupWhitSuffixOrPrefixDirective, optional: true }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzAutocompleteTriggerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAutocompleteTriggerDirective, selector: \"input[nzAutocomplete], textarea[nzAutocomplete]\", inputs: { nzAutocomplete: \"nzAutocomplete\" }, host: { attributes: { \"autocomplete\": \"off\", \"aria-autocomplete\": \"list\" }, listeners: { \"focusin\": \"handleFocus()\", \"blur\": \"handleBlur()\", \"input\": \"handleInput($event)\", \"keydown\": \"handleKeydown($event)\" } }, providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"nzAutocompleteTrigger\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteTriggerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n                    exportAs: 'nzAutocompleteTrigger',\n                    providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n                    host: {\n                        autocomplete: 'off',\n                        'aria-autocomplete': 'list',\n                        '(focusin)': 'handleFocus()',\n                        '(blur)': 'handleBlur()',\n                        '(input)': 'handleInput($event)',\n                        '(keydown)': 'handleKeydown($event)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i2.NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { nzAutocomplete: [{\n                type: Input\n            }] } });\n\nclass NzAutocompleteComponent {\n    constructor(changeDetectorRef, ngZone, directionality, noAnimation) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.ngZone = ngZone;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this.nzOverlayClassName = '';\n        this.nzOverlayStyle = {};\n        this.nzDefaultActiveFirstOption = true;\n        this.nzBackfill = false;\n        this.compareWith = (o1, o2) => o1 === o2;\n        this.selectionChange = new EventEmitter();\n        this.showPanel = true;\n        this.isOpen = false;\n        this.activeItem = null;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.animationStateChange = new EventEmitter();\n        this.activeItemIndex = -1;\n        this.selectionChangeSubscription = Subscription.EMPTY;\n        this.optionMouseEnterSubscription = Subscription.EMPTY;\n        this.dataSourceChangeSubscription = Subscription.EMPTY;\n        /** Options changes listener */\n        this.optionSelectionChanges = defer(() => {\n            if (this.options) {\n                return merge(...this.options.map(option => option.selectionChange));\n            }\n            return this.ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        this.optionMouseEnter = defer(() => {\n            if (this.options) {\n                return merge(...this.options.map(option => option.mouseEntered));\n            }\n            return this.ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionMouseEnter));\n        });\n    }\n    /**\n     * Options accessor, its source may be content or dataSource\n     */\n    get options() {\n        // first dataSource\n        if (this.nzDataSource) {\n            return this.fromDataSourceOptions;\n        }\n        else {\n            return this.fromContentOptions;\n        }\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.changeDetectorRef.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    onAnimationEvent(event) {\n        this.animationStateChange.emit(event);\n    }\n    ngAfterContentInit() {\n        if (!this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    ngOnDestroy() {\n        this.dataSourceChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription.unsubscribe();\n        this.optionMouseEnterSubscription.unsubscribe();\n        // Caretaker note: we have to set these subscriptions to `null` since these will be closed subscriptions, but they\n        // still keep references to destinations (which are `SafeSubscriber`s). Destinations keep referencing `next` functions,\n        // which we pass, for instance, to `this.optionSelectionChanges.subscribe(...)`.\n        this.dataSourceChangeSubscription = this.selectionChangeSubscription = this.optionMouseEnterSubscription = null;\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setVisibility() {\n        this.showPanel = !!this.options.length;\n        this.changeDetectorRef.markForCheck();\n    }\n    setActiveItem(index) {\n        const activeItem = this.options.get(index);\n        if (activeItem && !activeItem.active) {\n            this.activeItem = activeItem;\n            this.activeItemIndex = index;\n            this.clearSelectedOptions(this.activeItem);\n            this.activeItem.setActiveStyles();\n        }\n        else {\n            this.activeItem = null;\n            this.activeItemIndex = -1;\n            this.clearSelectedOptions();\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    setNextItemActive() {\n        const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n        this.setActiveItem(nextIndex);\n    }\n    setPreviousItemActive() {\n        const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n        this.setActiveItem(previousIndex);\n    }\n    getOptionIndex(value) {\n        return this.options.reduce((result, current, index) => result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result, -1);\n    }\n    getOption(value) {\n        return this.options.find(item => this.compareWith(value, item.nzValue)) || null;\n    }\n    optionsInit() {\n        this.setVisibility();\n        this.subscribeOptionChanges();\n        const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n        // async\n        this.dataSourceChangeSubscription = changes.subscribe(e => {\n            if (!e.dirty && this.isOpen) {\n                setTimeout(() => this.setVisibility());\n            }\n            this.subscribeOptionChanges();\n        });\n    }\n    /**\n     * Clear the status of options\n     */\n    clearSelectedOptions(skip, deselect = false) {\n        this.options.forEach(option => {\n            if (option !== skip) {\n                if (deselect) {\n                    option.deselect();\n                }\n                option.setInactiveStyles();\n            }\n        });\n    }\n    subscribeOptionChanges() {\n        this.selectionChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription = this.optionSelectionChanges\n            .pipe(filter((event) => event.isUserInput))\n            .subscribe((event) => {\n            event.source.select();\n            event.source.setActiveStyles();\n            this.activeItem = event.source;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event.source, true);\n            this.selectionChange.emit(event.source);\n        });\n        this.optionMouseEnterSubscription.unsubscribe();\n        this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe((event) => {\n            event.setActiveStyles();\n            this.activeItem = event;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event);\n        });\n    }\n}\nNzAutocompleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i1$2.Directionality, optional: true }, { token: i2$1.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzAutocompleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAutocompleteComponent, selector: \"nz-autocomplete\", inputs: { nzWidth: \"nzWidth\", nzOverlayClassName: \"nzOverlayClassName\", nzOverlayStyle: \"nzOverlayStyle\", nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\", nzBackfill: \"nzBackfill\", compareWith: \"compareWith\", nzDataSource: \"nzDataSource\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"fromContentOptions\", predicate: NzAutocompleteOptionComponent, descendants: true }], viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"content\", first: true, predicate: [\"content\"], descendants: true }, { propertyName: \"fromDataSourceOptions\", predicate: NzAutocompleteOptionComponent, descendants: true }], exportAs: [\"nzAutocomplete\"], ngImport: i0, template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option\n          *ngFor=\"let option of nzDataSource!\"\n          [nzValue]=\"option\"\n          [nzLabel]=\"option && $any(option).label ? $any(option).label : $any(option)\"\n        >\n          {{ option && $any(option).label ? $any(option).label : $any(option) }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `, isInline: true, components: [{ type: NzAutocompleteOptionComponent, selector: \"nz-auto-option\", inputs: [\"nzValue\", \"nzLabel\", \"nzDisabled\"], outputs: [\"selectionChange\", \"mouseEntered\"], exportAs: [\"nzAutoOption\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2$1.NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n__decorate([\n    InputBoolean()\n], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-autocomplete',\n                    exportAs: 'nzAutocomplete',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option\n          *ngFor=\"let option of nzDataSource!\"\n          [nzValue]=\"option\"\n          [nzLabel]=\"option && $any(option).label ? $any(option).label : $any(option)\"\n        >\n          {{ option && $any(option).label ? $any(option).label : $any(option) }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n                    animations: [slideMotion]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i1$2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$1.NzNoAnimationDirective, decorators: [{\n                        type: Host\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzWidth: [{\n                type: Input\n            }], nzOverlayClassName: [{\n                type: Input\n            }], nzOverlayStyle: [{\n                type: Input\n            }], nzDefaultActiveFirstOption: [{\n                type: Input\n            }], nzBackfill: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], nzDataSource: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], fromContentOptions: [{\n                type: ContentChildren,\n                args: [NzAutocompleteOptionComponent, { descendants: true }]\n            }], fromDataSourceOptions: [{\n                type: ViewChildren,\n                args: [NzAutocompleteOptionComponent]\n            }], template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: false }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel', { static: false }]\n            }], content: [{\n                type: ViewChild,\n                args: ['content', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteModule {\n}\nNzAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteModule, declarations: [NzAutocompleteComponent,\n        NzAutocompleteOptionComponent,\n        NzAutocompleteTriggerDirective,\n        NzAutocompleteOptgroupComponent], imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule], exports: [NzAutocompleteComponent,\n        NzAutocompleteOptionComponent,\n        NzAutocompleteTriggerDirective,\n        NzAutocompleteOptgroupComponent] });\nNzAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteModule, imports: [[BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzAutocompleteComponent,\n                        NzAutocompleteOptionComponent,\n                        NzAutocompleteTriggerDirective,\n                        NzAutocompleteOptgroupComponent\n                    ],\n                    exports: [\n                        NzAutocompleteComponent,\n                        NzAutocompleteOptionComponent,\n                        NzAutocompleteTriggerDirective,\n                        NzAutocompleteOptgroupComponent\n                    ],\n                    imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzOutletModule, NzNoAnimationModule, NzInputModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };\n"]},"metadata":{},"sourceType":"module"}