{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, BACKSPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport * as i8 from '@angular/cdk/overlay';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Injectable, EventEmitter, forwardRef, Optional, Host, ViewChild, ViewChildren, Output, HostListener, NgModule } from '@angular/core';\nimport * as i10 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { BehaviorSubject, Subject, fromEvent } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i12 from 'ng-zorro-antd/core/overlay';\nimport { DEFAULT_CASCADER_POSITIONS, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { isNotNil, arraysEqual, toArray, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i9 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/core/highlight';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport * as i3$1 from 'ng-zorro-antd/i18n';\nimport * as i4$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i6 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = [\"nz-cascader-option\", \"\"];\n\nfunction NzCascaderOptionComponent_ng_container_0_ng_template_1_Template(rf, ctx) {}\n\nconst _c1 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction NzCascaderOptionComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzCascaderOptionComponent_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.optionTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, ctx_r0.option, ctx_r0.columnIndex));\n  }\n}\n\nfunction NzCascaderOptionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 4);\n    i0.ɵɵpipe(1, \"nzHighlight\");\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind4(1, 1, ctx_r2.optionLabel, ctx_r2.highlightText, \"g\", \"ant-cascader-menu-item-keyword\"), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzCascaderOptionComponent_div_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n}\n\nfunction NzCascaderOptionComponent_div_3_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", ctx_r8.expandIcon);\n  }\n}\n\nfunction NzCascaderOptionComponent_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzCascaderOptionComponent_div_3_ng_template_2_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r7.expandIcon);\n  }\n}\n\nfunction NzCascaderOptionComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, NzCascaderOptionComponent_div_3_i_1_Template, 1, 0, \"i\", 6);\n    i0.ɵɵtemplate(2, NzCascaderOptionComponent_div_3_ng_template_2_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(3);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.option.loading)(\"ngIfElse\", _r6);\n  }\n}\n\nconst _c2 = [\"selectContainer\"];\nconst _c3 = [\"input\"];\nconst _c4 = [\"menu\"];\n\nfunction NzCascaderComponent_ng_container_3_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.labelRenderText);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_6_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction NzCascaderComponent_ng_container_3_span_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzCascaderComponent_ng_container_3_span_6_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.nzLabelRender)(\"ngTemplateOutletContext\", ctx_r12.labelRenderContext);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtemplate(1, NzCascaderComponent_ng_container_3_span_6_ng_container_1_Template, 2, 1, \"ng-container\", 14);\n    i0.ɵɵtemplate(2, NzCascaderComponent_ng_container_3_span_6_ng_template_2_Template, 1, 2, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(3);\n\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"title\", ctx_r6.labelRenderText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isLabelRenderTemplate)(\"ngIfElse\", _r11);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"visibility\", !ctx_r7.inputValue ? \"visible\" : \"hidden\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.showPlaceholder ? ctx_r7.nzPlaceHolder || (ctx_r7.locale == null ? null : ctx_r7.locale.placeholder) : null);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_8_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"ant-cascader-picker-arrow-expand\", ctx_r14.menuVisible);\n    i0.ɵɵproperty(\"nzType\", ctx_r14.nzSuffixIcon);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_8_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 22);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, NzCascaderComponent_ng_container_3_span_8_i_1_Template, 1, 3, \"i\", 19);\n    i0.ɵɵtemplate(2, NzCascaderComponent_ng_container_3_span_8_i_2_Template, 1, 0, \"i\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"ant-select-arrow-loading\", ctx_r8.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isLoading);\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵelementStart(1, \"i\", 24);\n    i0.ɵɵlistener(\"click\", function NzCascaderComponent_ng_container_3_span_9_Template_i_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.clearSelection($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzCascaderComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 4, 5);\n    i0.ɵɵelementStart(3, \"span\", 6);\n    i0.ɵɵelementStart(4, \"input\", 7, 8);\n    i0.ɵɵlistener(\"ngModelChange\", function NzCascaderComponent_ng_container_3_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.inputValue = $event;\n    })(\"blur\", function NzCascaderComponent_ng_container_3_Template_input_blur_4_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.handleInputBlur();\n    })(\"focus\", function NzCascaderComponent_ng_container_3_Template_input_focus_4_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.handleInputFocus();\n    })(\"change\", function NzCascaderComponent_ng_container_3_Template_input_change_4_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NzCascaderComponent_ng_container_3_span_6_Template, 4, 3, \"span\", 9);\n    i0.ɵɵtemplate(7, NzCascaderComponent_ng_container_3_span_7_Template, 2, 3, \"span\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, NzCascaderComponent_ng_container_3_span_8_Template, 3, 4, \"span\", 11);\n    i0.ɵɵtemplate(9, NzCascaderComponent_ng_container_3_span_9_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleProp(\"opacity\", ctx_r2.nzShowSearch ? \"\" : \"0\");\n    i0.ɵɵproperty(\"readonly\", !ctx_r2.nzShowSearch)(\"disabled\", ctx_r2.nzDisabled)(\"ngModel\", ctx_r2.inputValue);\n    i0.ɵɵattribute(\"autoComplete\", \"off\")(\"expanded\", ctx_r2.menuVisible)(\"autofocus\", ctx_r2.nzAutoFocus ? \"autofocus\" : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showLabelRender);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.showLabelRender);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nzShowArrow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.clearIconVisible);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 30);\n    i0.ɵɵelementStart(1, \"li\", 31);\n    i0.ɵɵelement(2, \"nz-embed-empty\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r24.dropdownWidthStyle)(\"height\", ctx_r24.dropdownHeightStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzComponentName\", \"cascader\")(\"specificContent\", ctx_r24.nzNotFoundContent);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 36);\n    i0.ɵɵlistener(\"mouseenter\", function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template_li_mouseenter_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const option_r31 = restoredCtx.$implicit;\n      const i_r29 = i0.ɵɵnextContext().index;\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return ctx_r32.onOptionMouseEnter(option_r31, i_r29, $event);\n    })(\"mouseleave\", function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template_li_mouseleave_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const option_r31 = restoredCtx.$implicit;\n      const i_r29 = i0.ɵɵnextContext().index;\n      const ctx_r35 = i0.ɵɵnextContext(3);\n      return ctx_r35.onOptionMouseLeave(option_r31, i_r29, $event);\n    })(\"click\", function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template_li_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const option_r31 = restoredCtx.$implicit;\n      const i_r29 = i0.ɵɵnextContext().index;\n      const ctx_r37 = i0.ɵɵnextContext(3);\n      return ctx_r37.onOptionClick(option_r31, i_r29, $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r31 = ctx.$implicit;\n    const i_r29 = i0.ɵɵnextContext().index;\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"expandIcon\", ctx_r30.nzExpandIcon)(\"columnIndex\", i_r29)(\"nzLabelProperty\", ctx_r30.nzLabelProperty)(\"optionTemplate\", ctx_r30.nzOptionRender)(\"activated\", ctx_r30.isOptionActivated(option_r31, i_r29))(\"highlightText\", ctx_r30.inSearchingMode ? ctx_r30.inputValue : \"\")(\"option\", option_r31)(\"dir\", ctx_r30.dir);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_4_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 34);\n    i0.ɵɵtemplate(1, NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template, 1, 8, \"li\", 35);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const options_r28 = ctx.$implicit;\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"height\", ctx_r27.dropdownHeightStyle)(\"width\", ctx_r27.dropdownWidthStyle);\n    i0.ɵɵproperty(\"ngClass\", ctx_r27.menuColumnCls);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", options_r28);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzCascaderComponent_ng_template_5_ng_template_4_ul_0_Template, 2, 6, \"ul\", 33);\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r26.cascaderService.columns);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵlistener(\"mouseleave\", function NzCascaderComponent_ng_template_5_Template_div_mouseleave_0_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.onTriggerMouseLeave($event);\n    });\n    i0.ɵɵelementStart(1, \"div\", 26, 27);\n    i0.ɵɵtemplate(3, NzCascaderComponent_ng_template_5_ul_3_Template, 3, 6, \"ul\", 28);\n    i0.ɵɵtemplate(4, NzCascaderComponent_ng_template_5_ng_template_4_Template, 1, 1, \"ng-template\", null, 29, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r25 = i0.ɵɵreference(5);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-cascader-dropdown-rtl\", ctx_r3.dir === \"rtl\");\n    i0.ɵɵproperty(\"@slideMotion\", \"enter\")(\"@.disabled\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ant-cascader-rtl\", ctx_r3.dir === \"rtl\")(\"ant-cascader-menus-hidden\", !ctx_r3.menuVisible)(\"ant-cascader-menu-empty\", ctx_r3.shouldShowEmpty);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.menuCls)(\"ngStyle\", ctx_r3.nzMenuStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.shouldShowEmpty)(\"ngIfElse\", _r25);\n  }\n}\n\nconst _c5 = [\"*\"];\n\nfunction isShowSearchObject(options) {\n  return typeof options !== 'boolean';\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction isChildOption(o) {\n  return o.isLeaf || !o.children || !o.children.length;\n}\n\nfunction isParentOption(o) {\n  return !!o.children && !!o.children.length && !o.isLeaf;\n}\n\nclass NzCascaderOptionComponent {\n  constructor(cdr, elementRef, renderer) {\n    this.cdr = cdr;\n    this.optionTemplate = null;\n    this.activated = false;\n    this.nzLabelProperty = 'label';\n    this.expandIcon = '';\n    this.dir = 'ltr';\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item');\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item-expanded');\n    this.nativeElement = elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.expandIcon === '' && this.dir === 'rtl') {\n      this.expandIcon = 'left';\n    } else if (this.expandIcon === '') {\n      this.expandIcon = 'right';\n    }\n  }\n\n  get optionLabel() {\n    return this.option[this.nzLabelProperty];\n  }\n\n  markForCheck() {\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzCascaderOptionComponent.ɵfac = function NzCascaderOptionComponent_Factory(t) {\n  return new (t || NzCascaderOptionComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNzCascaderOptionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCascaderOptionComponent,\n  selectors: [[\"\", \"nz-cascader-option\", \"\"]],\n  hostVars: 7,\n  hostBindings: function NzCascaderOptionComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"title\", ctx.option.title || ctx.optionLabel);\n      i0.ɵɵclassProp(\"ant-cascader-menu-item-active\", ctx.activated)(\"ant-cascader-menu-item-expand\", !ctx.option.isLeaf)(\"ant-cascader-menu-item-disabled\", ctx.option.disabled);\n    }\n  },\n  inputs: {\n    optionTemplate: \"optionTemplate\",\n    option: \"option\",\n    activated: \"activated\",\n    highlightText: \"highlightText\",\n    nzLabelProperty: \"nzLabelProperty\",\n    columnIndex: \"columnIndex\",\n    expandIcon: \"expandIcon\",\n    dir: \"dir\"\n  },\n  exportAs: [\"nzCascaderOption\"],\n  attrs: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultOptionTemplate\", \"\"], [\"class\", \"ant-cascader-menu-item-expand-icon\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-cascader-menu-item-content\", 3, \"innerHTML\"], [1, \"ant-cascader-menu-item-expand-icon\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\", \"ngIfElse\"], [\"icon\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzCascaderOptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzCascaderOptionComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzCascaderOptionComponent_ng_template_1_Template, 2, 6, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzCascaderOptionComponent_div_3_Template, 4, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.optionTemplate)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.option.isLeaf || (ctx.option.children == null ? null : ctx.option.children.length) || ctx.option.loading);\n    }\n  },\n  directives: [i9.NgIf, i9.NgTemplateOutlet, i2.NzIconDirective, i3.NzStringTemplateOutletDirective],\n  pipes: [i4.NzHighlightPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCascaderOptionComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: '[nz-cascader-option]',\n      exportAs: 'nzCascaderOption',\n      template: `\n    <ng-container *ngIf=\"optionTemplate; else defaultOptionTemplate\">\n      <ng-template\n        [ngTemplateOutlet]=\"optionTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: option, index: columnIndex }\"\n      ></ng-template>\n    </ng-container>\n    <ng-template #defaultOptionTemplate>\n      <div\n        class=\"ant-cascader-menu-item-content\"\n        [innerHTML]=\"optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'\"\n      ></div>\n    </ng-template>\n    <div *ngIf=\"!option.isLeaf || option.children?.length || option.loading\" class=\"ant-cascader-menu-item-expand-icon\">\n      <i *ngIf=\"option.loading; else icon\" nz-icon nzType=\"loading\"></i>\n      <ng-template #icon>\n        <ng-container *nzStringTemplateOutlet=\"expandIcon\">\n          <i nz-icon [nzType]=\"$any(expandIcon)\"></i>\n        </ng-container>\n      </ng-template>\n    </div>\n  `,\n      host: {\n        '[attr.title]': 'option.title || optionLabel',\n        '[class.ant-cascader-menu-item-active]': 'activated',\n        '[class.ant-cascader-menu-item-expand]': '!option.isLeaf',\n        '[class.ant-cascader-menu-item-disabled]': 'option.disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    optionTemplate: [{\n      type: Input\n    }],\n    option: [{\n      type: Input\n    }],\n    activated: [{\n      type: Input\n    }],\n    highlightText: [{\n      type: Input\n    }],\n    nzLabelProperty: [{\n      type: Input\n    }],\n    columnIndex: [{\n      type: Input\n    }],\n    expandIcon: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * All data is stored and parsed in NzCascaderService.\n */\n\n\nclass NzCascaderService {\n  constructor() {\n    /** Activated options in each column. */\n    this.activatedOptions = [];\n    /** An array to store cascader items arranged in different layers. */\n\n    this.columns = [];\n    /** If user has entered searching mode. */\n\n    this.inSearchingMode = false;\n    /** Selected options would be output to user. */\n\n    this.selectedOptions = [];\n    this.values = [];\n    this.$loading = new BehaviorSubject(false);\n    /**\n     * Emit an event to notify cascader it needs to redraw because activated or\n     * selected options are changed.\n     */\n\n    this.$redraw = new Subject();\n    /**\n     * Emit an event when an option gets selected.\n     * Emit true if a leaf options is selected.\n     */\n\n    this.$optionSelected = new Subject();\n    /**\n     * Emit an event to notify cascader it needs to quit searching mode.\n     * Only emit when user do select a searching option.\n     */\n\n    this.$quitSearching = new Subject();\n    /** To hold columns before entering searching mode. */\n\n    this.columnsSnapshot = [[]];\n    /** To hold activated options before entering searching mode. */\n\n    this.activatedOptionsSnapshot = [];\n  }\n  /** Return cascader options in the first layer. */\n\n\n  get nzOptions() {\n    return this.columns[0];\n  }\n\n  ngOnDestroy() {\n    this.$redraw.complete();\n    this.$quitSearching.complete();\n    this.$optionSelected.complete();\n    this.$loading.complete();\n  }\n  /**\n   * Make sure that value matches what is displayed in the dropdown.\n   */\n\n\n  syncOptions(first = false) {\n    const values = this.values;\n    const hasValue = values && values.length;\n    const lastColumnIndex = values.length - 1;\n\n    const initColumnWithIndex = columnIndex => {\n      const activatedOptionSetter = () => {\n        const currentValue = values[columnIndex];\n\n        if (!isNotNil(currentValue)) {\n          this.$redraw.next();\n          return;\n        }\n\n        const option = this.findOptionWithValue(columnIndex, values[columnIndex]) || (typeof currentValue === 'object' ? currentValue : {\n          [`${this.cascaderComponent.nzValueProperty}`]: currentValue,\n          [`${this.cascaderComponent.nzLabelProperty}`]: currentValue\n        });\n        this.setOptionActivated(option, columnIndex, false, false);\n\n        if (columnIndex < lastColumnIndex) {\n          initColumnWithIndex(columnIndex + 1);\n        } else {\n          this.dropBehindColumns(columnIndex);\n          this.selectedOptions = [...this.activatedOptions];\n          this.$redraw.next();\n        }\n      };\n\n      if (this.isLoaded(columnIndex) || !this.cascaderComponent.nzLoadData) {\n        activatedOptionSetter();\n      } else {\n        const option = this.activatedOptions[columnIndex - 1] || {};\n        this.loadChildren(option, columnIndex - 1, activatedOptionSetter);\n      }\n    };\n\n    this.activatedOptions = [];\n    this.selectedOptions = [];\n\n    if (first && this.cascaderComponent.nzLoadData && !hasValue) {\n      // Should also notify the component that value changes. Fix #3480.\n      this.$redraw.next();\n      return;\n    } else {\n      initColumnWithIndex(0);\n    }\n  }\n  /**\n   * Bind cascader component so this service could use inputs.\n   */\n\n\n  withComponent(cascaderComponent) {\n    this.cascaderComponent = cascaderComponent;\n  }\n  /**\n   * Reset all options. Rebuild searching options if in searching mode.\n   */\n\n\n  withOptions(options) {\n    this.columnsSnapshot = this.columns = options && options.length ? [options] : [];\n\n    if (this.inSearchingMode) {\n      this.prepareSearchOptions(this.cascaderComponent.inputValue);\n    } else if (this.columns.length) {\n      this.syncOptions();\n    }\n  }\n  /**\n   * Try to set a option as activated.\n   *\n   * @param option Cascader option\n   * @param columnIndex Of which column this option is in\n   * @param performSelect Select\n   * @param loadingChildren Try to load children asynchronously.\n   */\n\n\n  setOptionActivated(option, columnIndex, performSelect = false, loadingChildren = true) {\n    if (option.disabled) {\n      return;\n    }\n\n    this.activatedOptions[columnIndex] = option;\n    this.trackAncestorActivatedOptions(columnIndex);\n    this.dropBehindActivatedOptions(columnIndex);\n    const isParent = isParentOption(option);\n\n    if (isParent) {\n      // Parent option that has children.\n      this.setColumnData(option.children, columnIndex + 1, option);\n    } else if (!option.isLeaf && loadingChildren) {\n      // Parent option that should try to load children asynchronously.\n      this.loadChildren(option, columnIndex);\n    } else if (option.isLeaf) {\n      // Leaf option.\n      this.dropBehindColumns(columnIndex);\n    } // Actually perform selection to make an options not only activated but also selected.\n\n\n    if (performSelect) {\n      this.setOptionSelected(option, columnIndex);\n    }\n\n    this.$redraw.next();\n  }\n\n  setOptionSelected(option, index) {\n    const changeOn = this.cascaderComponent.nzChangeOn;\n\n    const shouldPerformSelection = (o, i) => typeof changeOn === 'function' ? changeOn(o, i) : false;\n\n    if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {\n      this.selectedOptions = [...this.activatedOptions];\n      this.prepareEmitValue();\n      this.$redraw.next();\n      this.$optionSelected.next({\n        option,\n        index\n      });\n    }\n  }\n\n  setOptionDeactivatedSinceColumn(column) {\n    this.dropBehindActivatedOptions(column - 1);\n    this.dropBehindColumns(column);\n    this.$redraw.next();\n  }\n  /**\n   * Set a searching option as selected, finishing up things.\n   *\n   * @param option\n   */\n\n\n  setSearchOptionSelected(option) {\n    this.activatedOptions = [option];\n    this.selectedOptions = [...option.path];\n    this.prepareEmitValue();\n    this.$redraw.next();\n    this.$optionSelected.next({\n      option,\n      index: 0\n    });\n    setTimeout(() => {\n      // Reset data and tell UI only to remove input and reset dropdown width style.\n      this.$quitSearching.next();\n      this.$redraw.next();\n      this.inSearchingMode = false;\n      this.columns = [...this.columnsSnapshot];\n      this.activatedOptions = [...this.selectedOptions];\n    }, 200);\n  }\n  /**\n   * Filter cascader options to reset `columns`.\n   *\n   * @param searchValue The string user wants to search.\n   */\n\n\n  prepareSearchOptions(searchValue) {\n    const results = []; // Search results only have one layer.\n\n    const path = [];\n\n    const defaultFilter = (i, p) => p.some(o => {\n      const label = this.getOptionLabel(o);\n      return !!label && label.indexOf(i) !== -1;\n    });\n\n    const showSearch = this.cascaderComponent.nzShowSearch;\n    const filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;\n    const sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;\n\n    const loopChild = (node, forceDisabled = false) => {\n      path.push(node);\n      const cPath = Array.from(path);\n\n      if (filter(searchValue, cPath)) {\n        const disabled = forceDisabled || node.disabled;\n        const option = {\n          disabled,\n          isLeaf: true,\n          path: cPath,\n          [this.cascaderComponent.nzLabelProperty]: cPath.map(p => this.getOptionLabel(p)).join(' / ')\n        };\n        results.push(option);\n      }\n\n      path.pop();\n    };\n\n    const loopParent = (node, forceDisabled = false) => {\n      const disabled = forceDisabled || node.disabled;\n      path.push(node);\n      node.children.forEach(sNode => {\n        if (!sNode.parent) {\n          sNode.parent = node;\n        }\n\n        if (!sNode.isLeaf) {\n          loopParent(sNode, disabled);\n        }\n\n        if (sNode.isLeaf || !sNode.children || !sNode.children.length) {\n          loopChild(sNode, disabled);\n        }\n      });\n      path.pop();\n    };\n\n    if (!this.columnsSnapshot.length) {\n      this.columns = [[]];\n      return;\n    }\n\n    this.columnsSnapshot[0].forEach(o => isChildOption(o) ? loopChild(o) : loopParent(o));\n\n    if (sorter) {\n      results.sort((a, b) => sorter(a.path, b.path, searchValue));\n    }\n\n    this.columns = [results];\n    this.$redraw.next(); // Search results may be empty, so should redraw.\n  }\n  /**\n   * Toggle searching mode by UI. It deals with things not directly related to UI.\n   *\n   * @param toSearching If this cascader is entering searching mode\n   */\n\n\n  toggleSearchingMode(toSearching) {\n    this.inSearchingMode = toSearching;\n\n    if (toSearching) {\n      this.activatedOptionsSnapshot = [...this.activatedOptions];\n      this.activatedOptions = [];\n      this.selectedOptions = [];\n      this.$redraw.next();\n    } else {\n      // User quit searching mode without selecting an option.\n      this.activatedOptions = [...this.activatedOptionsSnapshot];\n      this.selectedOptions = [...this.activatedOptions];\n      this.columns = [...this.columnsSnapshot];\n      this.syncOptions();\n      this.$redraw.next();\n    }\n  }\n  /**\n   * Clear selected options.\n   */\n\n\n  clear() {\n    this.values = [];\n    this.selectedOptions = [];\n    this.activatedOptions = [];\n    this.dropBehindColumns(0);\n    this.$redraw.next();\n    this.$optionSelected.next(null);\n  }\n\n  getOptionLabel(o) {\n    return o[this.cascaderComponent.nzLabelProperty || 'label'];\n  }\n\n  getOptionValue(o) {\n    return o[this.cascaderComponent.nzValueProperty || 'value'];\n  }\n  /**\n   * Try to insert options into a column.\n   *\n   * @param options Options to insert\n   * @param columnIndex Position\n   */\n\n\n  setColumnData(options, columnIndex, parent) {\n    const existingOptions = this.columns[columnIndex];\n\n    if (!arraysEqual(existingOptions, options)) {\n      options.forEach(o => o.parent = parent);\n      this.columns[columnIndex] = options;\n      this.dropBehindColumns(columnIndex);\n    }\n  }\n  /**\n   * Set all ancestor options as activated.\n   */\n\n\n  trackAncestorActivatedOptions(startIndex) {\n    for (let i = startIndex - 1; i >= 0; i--) {\n      if (!this.activatedOptions[i]) {\n        this.activatedOptions[i] = this.activatedOptions[i + 1].parent;\n      }\n    }\n  }\n\n  dropBehindActivatedOptions(lastReserveIndex) {\n    this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);\n  }\n\n  dropBehindColumns(lastReserveIndex) {\n    if (lastReserveIndex < this.columns.length - 1) {\n      this.columns = this.columns.slice(0, lastReserveIndex + 1);\n    }\n  }\n  /**\n   * Load children of an option asynchronously.\n   */\n\n\n  loadChildren(option, columnIndex, success, failure) {\n    const loadFn = this.cascaderComponent.nzLoadData;\n\n    if (loadFn) {\n      // If there isn't any option in columns.\n      this.$loading.next(columnIndex < 0);\n\n      if (typeof option === 'object') {\n        option.loading = true;\n      }\n\n      loadFn(option, columnIndex).then(() => {\n        option.loading = false;\n\n        if (option.children) {\n          this.setColumnData(option.children, columnIndex + 1, option);\n        }\n\n        if (success) {\n          success();\n        }\n\n        this.$loading.next(false);\n        this.$redraw.next();\n      }, () => {\n        option.loading = false;\n        option.isLeaf = true;\n\n        if (failure) {\n          failure();\n        }\n\n        this.$redraw.next();\n      });\n    }\n  }\n\n  isLoaded(index) {\n    return this.columns[index] && this.columns[index].length > 0;\n  }\n  /**\n   * Find a option that has a given value in a given column.\n   */\n\n\n  findOptionWithValue(columnIndex, value) {\n    const targetColumn = this.columns[columnIndex];\n\n    if (targetColumn) {\n      const v = typeof value === 'object' ? this.getOptionValue(value) : value;\n      return targetColumn.find(o => v === this.getOptionValue(o));\n    }\n\n    return null;\n  }\n\n  prepareEmitValue() {\n    this.values = this.selectedOptions.map(o => this.getOptionValue(o));\n  }\n\n}\n\nNzCascaderService.ɵfac = function NzCascaderService_Factory(t) {\n  return new (t || NzCascaderService)();\n};\n\nNzCascaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzCascaderService,\n  factory: NzCascaderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCascaderService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'cascader';\n\nconst defaultDisplayRender = labels => labels.join(' / ');\n\nclass NzCascaderComponent {\n  constructor(cascaderService, nzConfigService, ngZone, cdr, i18nService, elementRef, renderer, directionality, noAnimation) {\n    this.cascaderService = cascaderService;\n    this.nzConfigService = nzConfigService;\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    this.i18nService = i18nService;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzOptionRender = null;\n    this.nzShowInput = true;\n    this.nzShowArrow = true;\n    this.nzAllowClear = true;\n    this.nzAutoFocus = false;\n    this.nzChangeOnSelect = false;\n    this.nzDisabled = false;\n    this.nzExpandTrigger = 'click';\n    this.nzValueProperty = 'value';\n    this.nzLabelRender = null;\n    this.nzLabelProperty = 'label';\n    this.nzSize = 'default';\n    this.nzBackdrop = false;\n    this.nzShowSearch = false;\n    this.nzPlaceHolder = '';\n    this.nzMenuStyle = null;\n    this.nzMouseEnterDelay = 150; // ms\n\n    this.nzMouseLeaveDelay = 150; // ms\n\n    this.nzTriggerAction = ['click']; // TODO: RTL\n\n    this.nzSuffixIcon = 'down';\n    this.nzExpandIcon = '';\n    this.nzVisibleChange = new EventEmitter();\n    this.nzSelectionChange = new EventEmitter();\n    this.nzSelect = new EventEmitter();\n    this.nzClear = new EventEmitter();\n    /**\n     * If the dropdown should show the empty content.\n     * `true` if there's no options.\n     */\n\n    this.shouldShowEmpty = false;\n    this.menuVisible = false;\n    this.isLoading = false;\n    this.labelRenderContext = {};\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.positions = [...DEFAULT_CASCADER_POSITIONS];\n    this.dropdownHeightStyle = '';\n    this.isFocused = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.inputString = '';\n    this.isOpening = false;\n    this.delayMenuTimer = null;\n    this.delaySelectTimer = null;\n    this.el = elementRef.nativeElement;\n    this.cascaderService.withComponent(this);\n    renderer.addClass(elementRef.nativeElement, 'ant-select');\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader');\n  }\n\n  get nzOptions() {\n    return this.cascaderService.nzOptions;\n  }\n\n  set nzOptions(options) {\n    this.cascaderService.withOptions(options);\n  }\n\n  get inSearchingMode() {\n    return this.cascaderService.inSearchingMode;\n  }\n\n  set inputValue(inputValue) {\n    this.inputString = inputValue;\n    this.toggleSearchingMode(!!inputValue);\n  }\n\n  get inputValue() {\n    return this.inputString;\n  }\n\n  get menuCls() {\n    return {\n      [`${this.nzMenuClassName}`]: !!this.nzMenuClassName\n    };\n  }\n\n  get menuColumnCls() {\n    return {\n      [`${this.nzColumnClassName}`]: !!this.nzColumnClassName\n    };\n  }\n\n  get hasInput() {\n    return !!this.inputValue;\n  }\n\n  get hasValue() {\n    return this.cascaderService.values && this.cascaderService.values.length > 0;\n  }\n\n  get showLabelRender() {\n    return this.hasValue;\n  }\n\n  get showPlaceholder() {\n    return !(this.hasInput || this.hasValue);\n  }\n\n  get clearIconVisible() {\n    return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);\n  }\n\n  get isLabelRenderTemplate() {\n    return !!this.nzLabelRender;\n  }\n\n  ngOnInit() {\n    const srv = this.cascaderService;\n    srv.$redraw.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      // These operations would not mutate data.\n      this.checkChildren();\n      this.setDisplayLabel();\n      this.reposition();\n      this.setDropdownStyles();\n      this.cdr.markForCheck();\n    });\n    srv.$loading.pipe(takeUntil(this.destroy$)).subscribe(loading => {\n      this.isLoading = loading;\n    });\n    srv.$optionSelected.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      if (!data) {\n        this.onChange([]);\n        this.nzSelect.emit(null);\n        this.nzSelectionChange.emit([]);\n      } else {\n        const {\n          option,\n          index\n        } = data;\n        const shouldClose = option.isLeaf || this.nzChangeOnSelect && this.nzExpandTrigger === 'hover';\n\n        if (shouldClose) {\n          this.delaySetMenuVisible(false);\n        }\n\n        this.onChange(this.cascaderService.values);\n        this.nzSelectionChange.emit(this.cascaderService.selectedOptions);\n        this.nzSelect.emit({\n          option,\n          index\n        });\n        this.cdr.markForCheck();\n      }\n    });\n    srv.$quitSearching.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.inputString = '';\n      this.dropdownWidthStyle = '';\n    });\n    this.i18nService.localeChange.pipe(startWith(), takeUntil(this.destroy$)).subscribe(() => {\n      this.setLocale();\n    });\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n    this.dir = this.directionality.value;\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.dir = this.directionality.value;\n      srv.$redraw.next();\n    });\n    this.setupKeydownListener();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.clearDelayMenuTimer();\n    this.clearDelaySelectTimer();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  writeValue(value) {\n    this.cascaderService.values = toArray(value);\n    this.cascaderService.syncOptions(true);\n  }\n\n  delaySetMenuVisible(visible, delay = 100, setOpening = false) {\n    this.clearDelayMenuTimer();\n\n    if (delay) {\n      if (visible && setOpening) {\n        this.isOpening = true;\n      }\n\n      this.delayMenuTimer = setTimeout(() => {\n        this.setMenuVisible(visible);\n        this.cdr.detectChanges();\n        this.clearDelayMenuTimer();\n\n        if (visible) {\n          setTimeout(() => {\n            this.isOpening = false;\n          }, 100);\n        }\n      }, delay);\n    } else {\n      this.setMenuVisible(visible);\n    }\n  }\n\n  setMenuVisible(visible) {\n    if (this.nzDisabled || this.menuVisible === visible) {\n      return;\n    }\n\n    if (visible) {\n      this.cascaderService.syncOptions();\n      this.scrollToActivatedOptions();\n    }\n\n    if (!visible) {\n      this.inputValue = '';\n    }\n\n    this.menuVisible = visible;\n    this.nzVisibleChange.emit(visible);\n    this.cdr.detectChanges();\n  }\n\n  clearDelayMenuTimer() {\n    if (this.delayMenuTimer) {\n      clearTimeout(this.delayMenuTimer);\n      this.delayMenuTimer = null;\n    }\n  }\n\n  clearSelection(event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.labelRenderText = '';\n    this.labelRenderContext = {};\n    this.inputValue = '';\n    this.setMenuVisible(false);\n    this.cascaderService.clear();\n    this.nzClear.emit();\n  }\n\n  getSubmitValue() {\n    return this.cascaderService.selectedOptions.map(o => this.cascaderService.getOptionValue(o));\n  }\n\n  focus() {\n    if (!this.isFocused) {\n      (this.input ? this.input.nativeElement : this.el).focus();\n      this.isFocused = true;\n    }\n  }\n\n  blur() {\n    if (this.isFocused) {\n      (this.input ? this.input.nativeElement : this.el).blur();\n      this.isFocused = false;\n    }\n  }\n\n  handleInputBlur() {\n    this.menuVisible ? this.focus() : this.blur();\n  }\n\n  handleInputFocus() {\n    this.focus();\n  }\n\n  onTriggerClick() {\n    if (this.nzDisabled) {\n      return;\n    }\n\n    if (this.nzShowSearch) {\n      this.focus();\n    }\n\n    if (this.isActionTrigger('click')) {\n      this.delaySetMenuVisible(!this.menuVisible, 100);\n    }\n\n    this.onTouched();\n  }\n\n  onTriggerMouseEnter() {\n    if (this.nzDisabled || !this.isActionTrigger('hover')) {\n      return;\n    }\n\n    this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);\n  }\n\n  onTriggerMouseLeave(event) {\n    if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {\n      event.preventDefault();\n      return;\n    }\n\n    const mouseTarget = event.relatedTarget;\n    const hostEl = this.el;\n    const menuEl = this.menu && this.menu.nativeElement;\n\n    if (hostEl.contains(mouseTarget) || menuEl && menuEl.contains(mouseTarget)) {\n      return;\n    }\n\n    this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);\n  }\n\n  onOptionMouseEnter(option, columnIndex, event) {\n    event.preventDefault();\n\n    if (this.nzExpandTrigger === 'hover') {\n      if (!option.isLeaf) {\n        this.delaySetOptionActivated(option, columnIndex, false);\n      } else {\n        this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);\n      }\n    }\n  }\n\n  onOptionMouseLeave(option, _columnIndex, event) {\n    event.preventDefault();\n\n    if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n      this.clearDelaySelectTimer();\n    }\n  }\n\n  onOptionClick(option, columnIndex, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option && option.disabled) {\n      return;\n    }\n\n    this.el.focus();\n    this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(option) : this.cascaderService.setOptionActivated(option, columnIndex, true);\n  }\n\n  onClickOutside(event) {\n    if (!this.el.contains(event.target)) {\n      this.closeMenu();\n    }\n  }\n\n  isActionTrigger(action) {\n    return typeof this.nzTriggerAction === 'string' ? this.nzTriggerAction === action : this.nzTriggerAction.indexOf(action) !== -1;\n  }\n\n  onEnter() {\n    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n    const option = this.cascaderService.activatedOptions[columnIndex];\n\n    if (option && !option.disabled) {\n      this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(option) : this.cascaderService.setOptionActivated(option, columnIndex, true);\n    }\n  }\n\n  moveUpOrDown(isUp) {\n    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n    const activeOption = this.cascaderService.activatedOptions[columnIndex];\n    const options = this.cascaderService.columns[columnIndex] || [];\n    const length = options.length;\n    let nextIndex = -1;\n\n    if (!activeOption) {\n      // Not selected options in this column\n      nextIndex = isUp ? length : -1;\n    } else {\n      nextIndex = options.indexOf(activeOption);\n    }\n\n    while (true) {\n      nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;\n\n      if (nextIndex < 0 || nextIndex >= length) {\n        break;\n      }\n\n      const nextOption = options[nextIndex];\n\n      if (!nextOption || nextOption.disabled) {\n        continue;\n      }\n\n      this.cascaderService.setOptionActivated(nextOption, columnIndex);\n      break;\n    }\n  }\n\n  moveLeft() {\n    const options = this.cascaderService.activatedOptions;\n\n    if (options.length) {\n      options.pop(); // Remove the last one\n    }\n  }\n\n  moveRight() {\n    const length = this.cascaderService.activatedOptions.length;\n    const options = this.cascaderService.columns[length];\n\n    if (options && options.length) {\n      const nextOpt = options.find(o => !o.disabled);\n\n      if (nextOpt) {\n        this.cascaderService.setOptionActivated(nextOpt, length);\n      }\n    }\n  }\n\n  clearDelaySelectTimer() {\n    if (this.delaySelectTimer) {\n      clearTimeout(this.delaySelectTimer);\n      this.delaySelectTimer = null;\n    }\n  }\n\n  delaySetOptionActivated(option, columnIndex, performSelect) {\n    this.clearDelaySelectTimer();\n    this.delaySelectTimer = setTimeout(() => {\n      this.cascaderService.setOptionActivated(option, columnIndex, performSelect);\n      this.delaySelectTimer = null;\n    }, 150);\n  }\n\n  toggleSearchingMode(toSearching) {\n    if (this.inSearchingMode !== toSearching) {\n      this.cascaderService.toggleSearchingMode(toSearching);\n    }\n\n    if (this.inSearchingMode) {\n      this.cascaderService.prepareSearchOptions(this.inputValue);\n    }\n  }\n\n  isOptionActivated(option, index) {\n    const activeOpt = this.cascaderService.activatedOptions[index];\n    return activeOpt === option;\n  }\n\n  setDisabledState(isDisabled) {\n    if (isDisabled) {\n      this.closeMenu();\n    }\n\n    this.nzDisabled = isDisabled;\n  }\n\n  closeMenu() {\n    this.blur();\n    this.clearDelayMenuTimer();\n    this.setMenuVisible(false);\n  }\n  /**\n   * Reposition the cascader panel. When a menu opens, the cascader expands\n   * and may exceed the boundary of browser's window.\n   */\n\n\n  reposition() {\n    if (this.overlay && this.overlay.overlayRef && this.menuVisible) {\n      Promise.resolve().then(() => {\n        this.overlay.overlayRef.updatePosition();\n      });\n    }\n  }\n  /**\n   * When a cascader options is changed, a child needs to know that it should re-render.\n   */\n\n\n  checkChildren() {\n    if (this.cascaderItems) {\n      this.cascaderItems.forEach(item => item.markForCheck());\n    }\n  }\n\n  setDisplayLabel() {\n    const selectedOptions = this.cascaderService.selectedOptions;\n    const labels = selectedOptions.map(o => this.cascaderService.getOptionLabel(o));\n\n    if (this.isLabelRenderTemplate) {\n      this.labelRenderContext = {\n        labels,\n        selectedOptions\n      };\n    } else {\n      this.labelRenderText = defaultDisplayRender.call(this, labels);\n    }\n  }\n\n  setDropdownStyles() {\n    const firstColumn = this.cascaderService.columns[0];\n    this.shouldShowEmpty = this.inSearchingMode && (!firstColumn || !firstColumn.length) || // Should show empty when there's no searching result\n    !(this.nzOptions && this.nzOptions.length) && !this.nzLoadData; // Should show when there's no options and developer does not use nzLoadData\n\n    this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';\n\n    if (this.input) {\n      this.dropdownWidthStyle = this.inSearchingMode || this.shouldShowEmpty ? `${this.selectContainer.nativeElement.offsetWidth}px` : '';\n    }\n  }\n\n  setLocale() {\n    this.locale = this.i18nService.getLocaleData('global');\n    this.cdr.markForCheck();\n  }\n\n  scrollToActivatedOptions() {\n    // The `scrollIntoView` is a native DOM API, which doesn't require Angular to run\n    // a change detection when a promise microtask is resolved.\n    this.ngZone.runOutsideAngular(() => {\n      Promise.resolve().then(() => {\n        // scroll only until option menu view is ready\n        this.cascaderItems.toArray().filter(e => e.activated).forEach(e => {\n          e.nativeElement.scrollIntoView({\n            block: 'start',\n            inline: 'nearest'\n          });\n        });\n      });\n    });\n  }\n\n  setupKeydownListener() {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.el, 'keydown').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        const keyCode = event.keyCode;\n\n        if (keyCode !== DOWN_ARROW && keyCode !== UP_ARROW && keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== ENTER && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n          return;\n        } // Press any keys above to reopen menu.\n\n\n        if (!this.menuVisible && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n          // The `setMenuVisible` runs `detectChanges()`, so we don't need to run `markForCheck()` additionally.\n          return this.ngZone.run(() => this.setMenuVisible(true));\n        } // Make these keys work as default in searching mode.\n\n\n        if (this.inSearchingMode && (keyCode === BACKSPACE || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW)) {\n          return;\n        }\n\n        if (!this.menuVisible) {\n          return;\n        }\n\n        event.preventDefault();\n        this.ngZone.run(() => {\n          // Interact with the component.\n          if (keyCode === DOWN_ARROW) {\n            this.moveUpOrDown(false);\n          } else if (keyCode === UP_ARROW) {\n            this.moveUpOrDown(true);\n          } else if (keyCode === LEFT_ARROW) {\n            this.moveLeft();\n          } else if (keyCode === RIGHT_ARROW) {\n            this.moveRight();\n          } else if (keyCode === ENTER) {\n            this.onEnter();\n          } // `@HostListener`s run `markForCheck()` internally before calling the actual handler so\n          // we call `markForCheck()` to be backwards-compatible.\n\n\n          this.cdr.markForCheck();\n        });\n      });\n    });\n  }\n\n}\n\nNzCascaderComponent.ɵfac = function NzCascaderComponent_Factory(t) {\n  return new (t || NzCascaderComponent)(i0.ɵɵdirectiveInject(NzCascaderService), i0.ɵɵdirectiveInject(i2$1.NzConfigService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3$1.NzI18nService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i4$1.Directionality, 8), i0.ɵɵdirectiveInject(i5.NzNoAnimationDirective, 9));\n};\n\nNzCascaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCascaderComponent,\n  selectors: [[\"nz-cascader\"], [\"\", \"nz-cascader\", \"\"]],\n  viewQuery: function NzCascaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n      i0.ɵɵviewQuery(NzCascaderOptionComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cascaderItems = _t);\n    }\n  },\n  hostVars: 21,\n  hostBindings: function NzCascaderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzCascaderComponent_click_HostBindingHandler() {\n        return ctx.onTriggerClick();\n      })(\"mouseenter\", function NzCascaderComponent_mouseenter_HostBindingHandler() {\n        return ctx.onTriggerMouseEnter();\n      })(\"mouseleave\", function NzCascaderComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.onTriggerMouseLeave($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabIndex\", \"0\");\n      i0.ɵɵclassProp(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-show-arrow\", ctx.nzShowArrow)(\"ant-select-show-search\", !!ctx.nzShowSearch)(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-open\", ctx.menuVisible)(\"ant-select-focused\", ctx.isFocused)(\"ant-select-single\", true)(\"ant-select-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzOptionRender: \"nzOptionRender\",\n    nzShowInput: \"nzShowInput\",\n    nzShowArrow: \"nzShowArrow\",\n    nzAllowClear: \"nzAllowClear\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzChangeOnSelect: \"nzChangeOnSelect\",\n    nzDisabled: \"nzDisabled\",\n    nzColumnClassName: \"nzColumnClassName\",\n    nzExpandTrigger: \"nzExpandTrigger\",\n    nzValueProperty: \"nzValueProperty\",\n    nzLabelRender: \"nzLabelRender\",\n    nzLabelProperty: \"nzLabelProperty\",\n    nzNotFoundContent: \"nzNotFoundContent\",\n    nzSize: \"nzSize\",\n    nzBackdrop: \"nzBackdrop\",\n    nzShowSearch: \"nzShowSearch\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzMenuClassName: \"nzMenuClassName\",\n    nzMenuStyle: \"nzMenuStyle\",\n    nzMouseEnterDelay: \"nzMouseEnterDelay\",\n    nzMouseLeaveDelay: \"nzMouseLeaveDelay\",\n    nzTriggerAction: \"nzTriggerAction\",\n    nzChangeOn: \"nzChangeOn\",\n    nzLoadData: \"nzLoadData\",\n    nzSuffixIcon: \"nzSuffixIcon\",\n    nzExpandIcon: \"nzExpandIcon\",\n    nzOptions: \"nzOptions\"\n  },\n  outputs: {\n    nzVisibleChange: \"nzVisibleChange\",\n    nzSelectionChange: \"nzSelectionChange\",\n    nzSelect: \"nzSelect\",\n    nzClear: \"nzClear\"\n  },\n  exportAs: [\"nzCascader\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzCascaderComponent),\n    multi: true\n  }, NzCascaderService])],\n  ngContentSelectors: _c5,\n  decls: 6,\n  vars: 6,\n  consts: [[\"cdkOverlayOrigin\", \"\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [4, \"ngIf\"], [\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayOpen\", \"overlayOutsideClick\", \"detach\"], [1, \"ant-select-selector\"], [\"selectContainer\", \"\"], [1, \"ant-select-selection-search\"], [\"type\", \"search\", 1, \"ant-select-selection-search-input\", 3, \"readonly\", \"disabled\", \"ngModel\", \"ngModelChange\", \"blur\", \"focus\", \"change\"], [\"input\", \"\"], [\"class\", \"ant-select-selection-item\", 3, \"title\", 4, \"ngIf\"], [\"class\", \"ant-select-selection-placeholder\", 3, \"visibility\", 4, \"ngIf\"], [\"class\", \"ant-select-arrow\", 3, \"ant-select-arrow-loading\", 4, \"ngIf\"], [\"class\", \"ant-select-clear\", 4, \"ngIf\"], [1, \"ant-select-selection-item\", 3, \"title\"], [4, \"ngIf\", \"ngIfElse\"], [\"labelTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-select-selection-placeholder\"], [1, \"ant-select-arrow\"], [\"nz-icon\", \"\", 3, \"nzType\", \"ant-cascader-picker-arrow-expand\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [1, \"ant-select-clear\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", 3, \"click\"], [1, \"ant-select-dropdown\", \"ant-cascader-dropdown\", \"ant-select-dropdown-placement-bottomLeft\", 3, \"nzNoAnimation\", \"mouseleave\"], [1, \"ant-cascader-menus\", 3, \"ngClass\", \"ngStyle\"], [\"menu\", \"\"], [\"class\", \"ant-cascader-menu\", 3, \"width\", \"height\", 4, \"ngIf\", \"ngIfElse\"], [\"hasOptionsTemplate\", \"\"], [1, \"ant-cascader-menu\"], [1, \"ant-cascader-menu-item\", \"ant-cascader-menu-item-disabled\"], [1, \"ant-cascader-menu-item-content\", 3, \"nzComponentName\", \"specificContent\"], [\"class\", \"ant-cascader-menu\", \"role\", \"menuitemcheckbox\", 3, \"ngClass\", \"height\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"menuitemcheckbox\", 1, \"ant-cascader-menu\", 3, \"ngClass\"], [\"nz-cascader-option\", \"\", 3, \"expandIcon\", \"columnIndex\", \"nzLabelProperty\", \"optionTemplate\", \"activated\", \"highlightText\", \"option\", \"dir\", \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-cascader-option\", \"\", 3, \"expandIcon\", \"columnIndex\", \"nzLabelProperty\", \"optionTemplate\", \"activated\", \"highlightText\", \"option\", \"dir\", \"mouseenter\", \"mouseleave\", \"click\"]],\n  template: function NzCascaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(3, NzCascaderComponent_ng_container_3_Template, 10, 12, \"ng-container\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, NzCascaderComponent_ng_template_5_Template, 6, 15, \"ng-template\", 3);\n      i0.ɵɵlistener(\"overlayOutsideClick\", function NzCascaderComponent_Template_ng_template_overlayOutsideClick_5_listener($event) {\n        return ctx.onClickOutside($event);\n      })(\"detach\", function NzCascaderComponent_Template_ng_template_detach_5_listener() {\n        return ctx.closeMenu();\n      });\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzShowInput);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayPositions\", ctx.positions)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-cascader-dropdown\")(\"cdkConnectedOverlayOpen\", ctx.menuVisible);\n    }\n  },\n  directives: [i6.NzEmbedEmptyComponent, NzCascaderOptionComponent, i8.CdkOverlayOrigin, i9.NgIf, i10.DefaultValueAccessor, i10.NgControlStatus, i10.NgModel, i9.NgTemplateOutlet, i2.NzIconDirective, i8.CdkConnectedOverlay, i12.NzConnectedOverlayDirective, i5.NzNoAnimationDirective, i9.NgClass, i9.NgStyle, i9.NgForOf, i4$1.Dir],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  },\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzCascaderComponent.prototype, \"nzShowInput\", void 0);\n\n__decorate([InputBoolean()], NzCascaderComponent.prototype, \"nzShowArrow\", void 0);\n\n__decorate([InputBoolean()], NzCascaderComponent.prototype, \"nzAllowClear\", void 0);\n\n__decorate([InputBoolean()], NzCascaderComponent.prototype, \"nzAutoFocus\", void 0);\n\n__decorate([InputBoolean()], NzCascaderComponent.prototype, \"nzChangeOnSelect\", void 0);\n\n__decorate([InputBoolean()], NzCascaderComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([WithConfig()], NzCascaderComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig()], NzCascaderComponent.prototype, \"nzBackdrop\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCascaderComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-cascader, [nz-cascader]',\n      exportAs: 'nzCascader',\n      preserveWhitespaces: false,\n      template: `\n    <div cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" #trigger>\n      <ng-container *ngIf=\"nzShowInput\">\n        <div #selectContainer class=\"ant-select-selector\">\n          <span class=\"ant-select-selection-search\">\n            <input\n              #input\n              type=\"search\"\n              class=\"ant-select-selection-search-input\"\n              [style.opacity]=\"nzShowSearch ? '' : '0'\"\n              [attr.autoComplete]=\"'off'\"\n              [attr.expanded]=\"menuVisible\"\n              [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n              [readonly]=\"!nzShowSearch\"\n              [disabled]=\"nzDisabled\"\n              [(ngModel)]=\"inputValue\"\n              (blur)=\"handleInputBlur()\"\n              (focus)=\"handleInputFocus()\"\n              (change)=\"$event.stopPropagation()\"\n            />\n          </span>\n          <span *ngIf=\"showLabelRender\" class=\"ant-select-selection-item\" [title]=\"labelRenderText\">\n            <ng-container *ngIf=\"!isLabelRenderTemplate; else labelTemplate\">{{ labelRenderText }}</ng-container>\n            <ng-template #labelTemplate>\n              <ng-template\n                [ngTemplateOutlet]=\"nzLabelRender\"\n                [ngTemplateOutletContext]=\"labelRenderContext\"\n              ></ng-template>\n            </ng-template>\n          </span>\n          <span\n            *ngIf=\"!showLabelRender\"\n            class=\"ant-select-selection-placeholder\"\n            [style.visibility]=\"!inputValue ? 'visible' : 'hidden'\"\n            >{{ showPlaceholder ? nzPlaceHolder || locale?.placeholder : null }}</span\n          >\n        </div>\n        <span class=\"ant-select-arrow\" [class.ant-select-arrow-loading]=\"isLoading\" *ngIf=\"nzShowArrow\">\n          <i\n            *ngIf=\"!isLoading\"\n            nz-icon\n            [nzType]=\"$any(nzSuffixIcon)\"\n            [class.ant-cascader-picker-arrow-expand]=\"menuVisible\"\n          ></i>\n          <i *ngIf=\"isLoading\" nz-icon nzType=\"loading\"></i>\n        </span>\n        <span class=\"ant-select-clear\" *ngIf=\"clearIconVisible\">\n          <i nz-icon nzType=\"close-circle\" nzTheme=\"fill\" (click)=\"clearSelection($event)\"></i>\n        </span>\n      </ng-container>\n      <ng-content></ng-content>\n    </div>\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-cascader-dropdown'\"\n      [cdkConnectedOverlayOpen]=\"menuVisible\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeMenu()\"\n    >\n      <div\n        class=\"ant-select-dropdown ant-cascader-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-cascader-dropdown-rtl]=\"dir === 'rtl'\"\n        [@slideMotion]=\"'enter'\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        (mouseleave)=\"onTriggerMouseLeave($event)\"\n      >\n        <div\n          #menu\n          class=\"ant-cascader-menus\"\n          [class.ant-cascader-rtl]=\"dir === 'rtl'\"\n          [class.ant-cascader-menus-hidden]=\"!menuVisible\"\n          [class.ant-cascader-menu-empty]=\"shouldShowEmpty\"\n          [ngClass]=\"menuCls\"\n          [ngStyle]=\"nzMenuStyle\"\n        >\n          <ul\n            *ngIf=\"shouldShowEmpty; else hasOptionsTemplate\"\n            class=\"ant-cascader-menu\"\n            [style.width]=\"dropdownWidthStyle\"\n            [style.height]=\"dropdownHeightStyle\"\n          >\n            <li class=\"ant-cascader-menu-item ant-cascader-menu-item-disabled\">\n              <nz-embed-empty\n                class=\"ant-cascader-menu-item-content\"\n                [nzComponentName]=\"'cascader'\"\n                [specificContent]=\"nzNotFoundContent\"\n              ></nz-embed-empty>\n            </li>\n          </ul>\n          <ng-template #hasOptionsTemplate>\n            <ul\n              *ngFor=\"let options of cascaderService.columns; let i = index\"\n              class=\"ant-cascader-menu\"\n              role=\"menuitemcheckbox\"\n              [ngClass]=\"menuColumnCls\"\n              [style.height]=\"dropdownHeightStyle\"\n              [style.width]=\"dropdownWidthStyle\"\n            >\n              <li\n                nz-cascader-option\n                *ngFor=\"let option of options\"\n                [expandIcon]=\"nzExpandIcon\"\n                [columnIndex]=\"i\"\n                [nzLabelProperty]=\"nzLabelProperty\"\n                [optionTemplate]=\"nzOptionRender\"\n                [activated]=\"isOptionActivated(option, i)\"\n                [highlightText]=\"inSearchingMode ? inputValue : ''\"\n                [option]=\"option\"\n                [dir]=\"dir\"\n                (mouseenter)=\"onOptionMouseEnter(option, i, $event)\"\n                (mouseleave)=\"onOptionMouseLeave(option, i, $event)\"\n                (click)=\"onOptionClick(option, i, $event)\"\n              ></li>\n            </ul>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `,\n      animations: [slideMotion],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCascaderComponent),\n        multi: true\n      }, NzCascaderService],\n      host: {\n        '[attr.tabIndex]': '\"0\"',\n        '[class.ant-select-lg]': 'nzSize === \"large\"',\n        '[class.ant-select-sm]': 'nzSize === \"small\"',\n        '[class.ant-select-allow-clear]': 'nzAllowClear',\n        '[class.ant-select-show-arrow]': 'nzShowArrow',\n        '[class.ant-select-show-search]': '!!nzShowSearch',\n        '[class.ant-select-disabled]': 'nzDisabled',\n        '[class.ant-select-open]': 'menuVisible',\n        '[class.ant-select-focused]': 'isFocused',\n        '[class.ant-select-single]': 'true',\n        '[class.ant-select-rtl]': `dir ==='rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzCascaderService\n    }, {\n      type: i2$1.NzConfigService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i3$1.NzI18nService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i4$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i5.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    selectContainer: [{\n      type: ViewChild,\n      args: ['selectContainer', {\n        static: false\n      }]\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: false\n      }]\n    }],\n    menu: [{\n      type: ViewChild,\n      args: ['menu', {\n        static: false\n      }]\n    }],\n    overlay: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay, {\n        static: false\n      }]\n    }],\n    cascaderItems: [{\n      type: ViewChildren,\n      args: [NzCascaderOptionComponent]\n    }],\n    nzOptionRender: [{\n      type: Input\n    }],\n    nzShowInput: [{\n      type: Input\n    }],\n    nzShowArrow: [{\n      type: Input\n    }],\n    nzAllowClear: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzChangeOnSelect: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzColumnClassName: [{\n      type: Input\n    }],\n    nzExpandTrigger: [{\n      type: Input\n    }],\n    nzValueProperty: [{\n      type: Input\n    }],\n    nzLabelRender: [{\n      type: Input\n    }],\n    nzLabelProperty: [{\n      type: Input\n    }],\n    nzNotFoundContent: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzBackdrop: [{\n      type: Input\n    }],\n    nzShowSearch: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzMenuClassName: [{\n      type: Input\n    }],\n    nzMenuStyle: [{\n      type: Input\n    }],\n    nzMouseEnterDelay: [{\n      type: Input\n    }],\n    nzMouseLeaveDelay: [{\n      type: Input\n    }],\n    nzTriggerAction: [{\n      type: Input\n    }],\n    nzChangeOn: [{\n      type: Input\n    }],\n    nzLoadData: [{\n      type: Input\n    }],\n    nzSuffixIcon: [{\n      type: Input\n    }],\n    nzExpandIcon: [{\n      type: Input\n    }],\n    nzOptions: [{\n      type: Input\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }],\n    nzSelectionChange: [{\n      type: Output\n    }],\n    nzSelect: [{\n      type: Output\n    }],\n    nzClear: [{\n      type: Output\n    }],\n    onTriggerClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onTriggerMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onTriggerMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event']]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzCascaderModule {}\n\nNzCascaderModule.ɵfac = function NzCascaderModule_Factory(t) {\n  return new (t || NzCascaderModule)();\n};\n\nNzCascaderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzCascaderModule\n});\nNzCascaderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCascaderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule],\n      declarations: [NzCascaderComponent, NzCascaderOptionComponent],\n      exports: [NzCascaderComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCascaderComponent, NzCascaderModule, NzCascaderOptionComponent, NzCascaderService, isChildOption, isParentOption, isShowSearchObject };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-cascader.mjs"],"names":["__decorate","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","BACKSPACE","ESCAPE","i8","CdkConnectedOverlay","OverlayModule","i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Injectable","EventEmitter","forwardRef","Optional","Host","ViewChild","ViewChildren","Output","HostListener","NgModule","i10","NG_VALUE_ACCESSOR","FormsModule","BehaviorSubject","Subject","fromEvent","takeUntil","startWith","slideMotion","i2$1","WithConfig","i12","DEFAULT_CASCADER_POSITIONS","NzOverlayModule","isNotNil","arraysEqual","toArray","InputBoolean","i9","CommonModule","i2","NzIconModule","i3","NzOutletModule","i4","NzHighlightModule","i3$1","i4$1","BidiModule","i5","NzNoAnimationModule","i6","NzEmptyModule","NzInputModule","isShowSearchObject","options","isChildOption","o","isLeaf","children","length","isParentOption","NzCascaderOptionComponent","constructor","cdr","elementRef","renderer","optionTemplate","activated","nzLabelProperty","expandIcon","dir","addClass","nativeElement","ngOnInit","optionLabel","option","markForCheck","ɵfac","ChangeDetectorRef","ElementRef","Renderer2","ɵcmp","NgIf","NgTemplateOutlet","NzIconDirective","NzStringTemplateOutletDirective","NzHighlightPipe","type","args","changeDetection","OnPush","encapsulation","None","selector","exportAs","template","host","highlightText","columnIndex","NzCascaderService","activatedOptions","columns","inSearchingMode","selectedOptions","values","$loading","$redraw","$optionSelected","$quitSearching","columnsSnapshot","activatedOptionsSnapshot","nzOptions","ngOnDestroy","complete","syncOptions","first","hasValue","lastColumnIndex","initColumnWithIndex","activatedOptionSetter","currentValue","next","findOptionWithValue","cascaderComponent","nzValueProperty","setOptionActivated","dropBehindColumns","isLoaded","nzLoadData","loadChildren","withComponent","withOptions","prepareSearchOptions","inputValue","performSelect","loadingChildren","disabled","trackAncestorActivatedOptions","dropBehindActivatedOptions","isParent","setColumnData","setOptionSelected","index","changeOn","nzChangeOn","shouldPerformSelection","i","nzChangeOnSelect","prepareEmitValue","setOptionDeactivatedSinceColumn","column","setSearchOptionSelected","path","setTimeout","searchValue","results","defaultFilter","p","some","label","getOptionLabel","indexOf","showSearch","nzShowSearch","filter","sorter","loopChild","node","forceDisabled","push","cPath","Array","from","map","join","pop","loopParent","forEach","sNode","parent","sort","a","b","toggleSearchingMode","toSearching","clear","getOptionValue","existingOptions","startIndex","lastReserveIndex","splice","slice","success","failure","loadFn","loading","then","value","targetColumn","v","find","ɵprov","NZ_CONFIG_MODULE_NAME","defaultDisplayRender","labels","NzCascaderComponent","cascaderService","nzConfigService","ngZone","i18nService","directionality","noAnimation","_nzModuleName","nzOptionRender","nzShowInput","nzShowArrow","nzAllowClear","nzAutoFocus","nzDisabled","nzExpandTrigger","nzLabelRender","nzSize","nzBackdrop","nzPlaceHolder","nzMenuStyle","nzMouseEnterDelay","nzMouseLeaveDelay","nzTriggerAction","nzSuffixIcon","nzExpandIcon","nzVisibleChange","nzSelectionChange","nzSelect","nzClear","shouldShowEmpty","menuVisible","isLoading","labelRenderContext","onChange","Function","prototype","onTouched","positions","dropdownHeightStyle","isFocused","destroy$","inputString","isOpening","delayMenuTimer","delaySelectTimer","el","menuCls","nzMenuClassName","menuColumnCls","nzColumnClassName","hasInput","showLabelRender","showPlaceholder","clearIconVisible","isLabelRenderTemplate","srv","pipe","subscribe","checkChildren","setDisplayLabel","reposition","setDropdownStyles","data","emit","shouldClose","delaySetMenuVisible","dropdownWidthStyle","localeChange","setLocale","getConfigChangeEventForComponent","change","setupKeydownListener","clearDelayMenuTimer","clearDelaySelectTimer","registerOnChange","fn","registerOnTouched","writeValue","visible","delay","setOpening","setMenuVisible","detectChanges","scrollToActivatedOptions","clearTimeout","clearSelection","event","preventDefault","stopPropagation","labelRenderText","getSubmitValue","focus","input","blur","handleInputBlur","handleInputFocus","onTriggerClick","isActionTrigger","onTriggerMouseEnter","onTriggerMouseLeave","mouseTarget","relatedTarget","hostEl","menuEl","menu","contains","onOptionMouseEnter","delaySetOptionActivated","onOptionMouseLeave","_columnIndex","onOptionClick","onClickOutside","target","closeMenu","action","onEnter","Math","max","moveUpOrDown","isUp","activeOption","nextIndex","nextOption","moveLeft","moveRight","nextOpt","isOptionActivated","activeOpt","setDisabledState","isDisabled","overlay","overlayRef","Promise","resolve","updatePosition","cascaderItems","item","call","firstColumn","selectContainer","offsetWidth","locale","getLocaleData","runOutsideAngular","e","scrollIntoView","block","inline","keyCode","run","NzConfigService","NgZone","NzI18nService","Directionality","NzNoAnimationDirective","provide","useExisting","multi","NzEmbedEmptyComponent","CdkOverlayOrigin","DefaultValueAccessor","NgControlStatus","NgModel","NzConnectedOverlayDirective","NgClass","NgStyle","NgForOf","Dir","preserveWhitespaces","animations","providers","decorators","static","nzNotFoundContent","NzCascaderModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, BACKSPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport * as i8 from '@angular/cdk/overlay';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Injectable, EventEmitter, forwardRef, Optional, Host, ViewChild, ViewChildren, Output, HostListener, NgModule } from '@angular/core';\nimport * as i10 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { BehaviorSubject, Subject, fromEvent } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i12 from 'ng-zorro-antd/core/overlay';\nimport { DEFAULT_CASCADER_POSITIONS, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { isNotNil, arraysEqual, toArray, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i9 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/core/highlight';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport * as i3$1 from 'ng-zorro-antd/i18n';\nimport * as i4$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i6 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction isShowSearchObject(options) {\n    return typeof options !== 'boolean';\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction isChildOption(o) {\n    return o.isLeaf || !o.children || !o.children.length;\n}\nfunction isParentOption(o) {\n    return !!o.children && !!o.children.length && !o.isLeaf;\n}\n\nclass NzCascaderOptionComponent {\n    constructor(cdr, elementRef, renderer) {\n        this.cdr = cdr;\n        this.optionTemplate = null;\n        this.activated = false;\n        this.nzLabelProperty = 'label';\n        this.expandIcon = '';\n        this.dir = 'ltr';\n        renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item');\n        renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item-expanded');\n        this.nativeElement = elementRef.nativeElement;\n    }\n    ngOnInit() {\n        if (this.expandIcon === '' && this.dir === 'rtl') {\n            this.expandIcon = 'left';\n        }\n        else if (this.expandIcon === '') {\n            this.expandIcon = 'right';\n        }\n    }\n    get optionLabel() {\n        return this.option[this.nzLabelProperty];\n    }\n    markForCheck() {\n        this.cdr.markForCheck();\n    }\n}\nNzCascaderOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderOptionComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNzCascaderOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCascaderOptionComponent, selector: \"[nz-cascader-option]\", inputs: { optionTemplate: \"optionTemplate\", option: \"option\", activated: \"activated\", highlightText: \"highlightText\", nzLabelProperty: \"nzLabelProperty\", columnIndex: \"columnIndex\", expandIcon: \"expandIcon\", dir: \"dir\" }, host: { properties: { \"attr.title\": \"option.title || optionLabel\", \"class.ant-cascader-menu-item-active\": \"activated\", \"class.ant-cascader-menu-item-expand\": \"!option.isLeaf\", \"class.ant-cascader-menu-item-disabled\": \"option.disabled\" } }, exportAs: [\"nzCascaderOption\"], ngImport: i0, template: `\n    <ng-container *ngIf=\"optionTemplate; else defaultOptionTemplate\">\n      <ng-template\n        [ngTemplateOutlet]=\"optionTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: option, index: columnIndex }\"\n      ></ng-template>\n    </ng-container>\n    <ng-template #defaultOptionTemplate>\n      <div\n        class=\"ant-cascader-menu-item-content\"\n        [innerHTML]=\"optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'\"\n      ></div>\n    </ng-template>\n    <div *ngIf=\"!option.isLeaf || option.children?.length || option.loading\" class=\"ant-cascader-menu-item-expand-icon\">\n      <i *ngIf=\"option.loading; else icon\" nz-icon nzType=\"loading\"></i>\n      <ng-template #icon>\n        <ng-container *nzStringTemplateOutlet=\"expandIcon\">\n          <i nz-icon [nzType]=\"$any(expandIcon)\"></i>\n        </ng-container>\n      </ng-template>\n    </div>\n  `, isInline: true, directives: [{ type: i9.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i9.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], pipes: { \"nzHighlight\": i4.NzHighlightPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderOptionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: '[nz-cascader-option]',\n                    exportAs: 'nzCascaderOption',\n                    template: `\n    <ng-container *ngIf=\"optionTemplate; else defaultOptionTemplate\">\n      <ng-template\n        [ngTemplateOutlet]=\"optionTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: option, index: columnIndex }\"\n      ></ng-template>\n    </ng-container>\n    <ng-template #defaultOptionTemplate>\n      <div\n        class=\"ant-cascader-menu-item-content\"\n        [innerHTML]=\"optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'\"\n      ></div>\n    </ng-template>\n    <div *ngIf=\"!option.isLeaf || option.children?.length || option.loading\" class=\"ant-cascader-menu-item-expand-icon\">\n      <i *ngIf=\"option.loading; else icon\" nz-icon nzType=\"loading\"></i>\n      <ng-template #icon>\n        <ng-container *nzStringTemplateOutlet=\"expandIcon\">\n          <i nz-icon [nzType]=\"$any(expandIcon)\"></i>\n        </ng-container>\n      </ng-template>\n    </div>\n  `,\n                    host: {\n                        '[attr.title]': 'option.title || optionLabel',\n                        '[class.ant-cascader-menu-item-active]': 'activated',\n                        '[class.ant-cascader-menu-item-expand]': '!option.isLeaf',\n                        '[class.ant-cascader-menu-item-disabled]': 'option.disabled'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { optionTemplate: [{\n                type: Input\n            }], option: [{\n                type: Input\n            }], activated: [{\n                type: Input\n            }], highlightText: [{\n                type: Input\n            }], nzLabelProperty: [{\n                type: Input\n            }], columnIndex: [{\n                type: Input\n            }], expandIcon: [{\n                type: Input\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * All data is stored and parsed in NzCascaderService.\n */\nclass NzCascaderService {\n    constructor() {\n        /** Activated options in each column. */\n        this.activatedOptions = [];\n        /** An array to store cascader items arranged in different layers. */\n        this.columns = [];\n        /** If user has entered searching mode. */\n        this.inSearchingMode = false;\n        /** Selected options would be output to user. */\n        this.selectedOptions = [];\n        this.values = [];\n        this.$loading = new BehaviorSubject(false);\n        /**\n         * Emit an event to notify cascader it needs to redraw because activated or\n         * selected options are changed.\n         */\n        this.$redraw = new Subject();\n        /**\n         * Emit an event when an option gets selected.\n         * Emit true if a leaf options is selected.\n         */\n        this.$optionSelected = new Subject();\n        /**\n         * Emit an event to notify cascader it needs to quit searching mode.\n         * Only emit when user do select a searching option.\n         */\n        this.$quitSearching = new Subject();\n        /** To hold columns before entering searching mode. */\n        this.columnsSnapshot = [[]];\n        /** To hold activated options before entering searching mode. */\n        this.activatedOptionsSnapshot = [];\n    }\n    /** Return cascader options in the first layer. */\n    get nzOptions() {\n        return this.columns[0];\n    }\n    ngOnDestroy() {\n        this.$redraw.complete();\n        this.$quitSearching.complete();\n        this.$optionSelected.complete();\n        this.$loading.complete();\n    }\n    /**\n     * Make sure that value matches what is displayed in the dropdown.\n     */\n    syncOptions(first = false) {\n        const values = this.values;\n        const hasValue = values && values.length;\n        const lastColumnIndex = values.length - 1;\n        const initColumnWithIndex = (columnIndex) => {\n            const activatedOptionSetter = () => {\n                const currentValue = values[columnIndex];\n                if (!isNotNil(currentValue)) {\n                    this.$redraw.next();\n                    return;\n                }\n                const option = this.findOptionWithValue(columnIndex, values[columnIndex]) ||\n                    (typeof currentValue === 'object'\n                        ? currentValue\n                        : {\n                            [`${this.cascaderComponent.nzValueProperty}`]: currentValue,\n                            [`${this.cascaderComponent.nzLabelProperty}`]: currentValue\n                        });\n                this.setOptionActivated(option, columnIndex, false, false);\n                if (columnIndex < lastColumnIndex) {\n                    initColumnWithIndex(columnIndex + 1);\n                }\n                else {\n                    this.dropBehindColumns(columnIndex);\n                    this.selectedOptions = [...this.activatedOptions];\n                    this.$redraw.next();\n                }\n            };\n            if (this.isLoaded(columnIndex) || !this.cascaderComponent.nzLoadData) {\n                activatedOptionSetter();\n            }\n            else {\n                const option = this.activatedOptions[columnIndex - 1] || {};\n                this.loadChildren(option, columnIndex - 1, activatedOptionSetter);\n            }\n        };\n        this.activatedOptions = [];\n        this.selectedOptions = [];\n        if (first && this.cascaderComponent.nzLoadData && !hasValue) {\n            // Should also notify the component that value changes. Fix #3480.\n            this.$redraw.next();\n            return;\n        }\n        else {\n            initColumnWithIndex(0);\n        }\n    }\n    /**\n     * Bind cascader component so this service could use inputs.\n     */\n    withComponent(cascaderComponent) {\n        this.cascaderComponent = cascaderComponent;\n    }\n    /**\n     * Reset all options. Rebuild searching options if in searching mode.\n     */\n    withOptions(options) {\n        this.columnsSnapshot = this.columns = options && options.length ? [options] : [];\n        if (this.inSearchingMode) {\n            this.prepareSearchOptions(this.cascaderComponent.inputValue);\n        }\n        else if (this.columns.length) {\n            this.syncOptions();\n        }\n    }\n    /**\n     * Try to set a option as activated.\n     *\n     * @param option Cascader option\n     * @param columnIndex Of which column this option is in\n     * @param performSelect Select\n     * @param loadingChildren Try to load children asynchronously.\n     */\n    setOptionActivated(option, columnIndex, performSelect = false, loadingChildren = true) {\n        if (option.disabled) {\n            return;\n        }\n        this.activatedOptions[columnIndex] = option;\n        this.trackAncestorActivatedOptions(columnIndex);\n        this.dropBehindActivatedOptions(columnIndex);\n        const isParent = isParentOption(option);\n        if (isParent) {\n            // Parent option that has children.\n            this.setColumnData(option.children, columnIndex + 1, option);\n        }\n        else if (!option.isLeaf && loadingChildren) {\n            // Parent option that should try to load children asynchronously.\n            this.loadChildren(option, columnIndex);\n        }\n        else if (option.isLeaf) {\n            // Leaf option.\n            this.dropBehindColumns(columnIndex);\n        }\n        // Actually perform selection to make an options not only activated but also selected.\n        if (performSelect) {\n            this.setOptionSelected(option, columnIndex);\n        }\n        this.$redraw.next();\n    }\n    setOptionSelected(option, index) {\n        const changeOn = this.cascaderComponent.nzChangeOn;\n        const shouldPerformSelection = (o, i) => typeof changeOn === 'function' ? changeOn(o, i) : false;\n        if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {\n            this.selectedOptions = [...this.activatedOptions];\n            this.prepareEmitValue();\n            this.$redraw.next();\n            this.$optionSelected.next({ option, index });\n        }\n    }\n    setOptionDeactivatedSinceColumn(column) {\n        this.dropBehindActivatedOptions(column - 1);\n        this.dropBehindColumns(column);\n        this.$redraw.next();\n    }\n    /**\n     * Set a searching option as selected, finishing up things.\n     *\n     * @param option\n     */\n    setSearchOptionSelected(option) {\n        this.activatedOptions = [option];\n        this.selectedOptions = [...option.path];\n        this.prepareEmitValue();\n        this.$redraw.next();\n        this.$optionSelected.next({ option, index: 0 });\n        setTimeout(() => {\n            // Reset data and tell UI only to remove input and reset dropdown width style.\n            this.$quitSearching.next();\n            this.$redraw.next();\n            this.inSearchingMode = false;\n            this.columns = [...this.columnsSnapshot];\n            this.activatedOptions = [...this.selectedOptions];\n        }, 200);\n    }\n    /**\n     * Filter cascader options to reset `columns`.\n     *\n     * @param searchValue The string user wants to search.\n     */\n    prepareSearchOptions(searchValue) {\n        const results = []; // Search results only have one layer.\n        const path = [];\n        const defaultFilter = (i, p) => p.some(o => {\n            const label = this.getOptionLabel(o);\n            return !!label && label.indexOf(i) !== -1;\n        });\n        const showSearch = this.cascaderComponent.nzShowSearch;\n        const filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;\n        const sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;\n        const loopChild = (node, forceDisabled = false) => {\n            path.push(node);\n            const cPath = Array.from(path);\n            if (filter(searchValue, cPath)) {\n                const disabled = forceDisabled || node.disabled;\n                const option = {\n                    disabled,\n                    isLeaf: true,\n                    path: cPath,\n                    [this.cascaderComponent.nzLabelProperty]: cPath.map(p => this.getOptionLabel(p)).join(' / ')\n                };\n                results.push(option);\n            }\n            path.pop();\n        };\n        const loopParent = (node, forceDisabled = false) => {\n            const disabled = forceDisabled || node.disabled;\n            path.push(node);\n            node.children.forEach(sNode => {\n                if (!sNode.parent) {\n                    sNode.parent = node;\n                }\n                if (!sNode.isLeaf) {\n                    loopParent(sNode, disabled);\n                }\n                if (sNode.isLeaf || !sNode.children || !sNode.children.length) {\n                    loopChild(sNode, disabled);\n                }\n            });\n            path.pop();\n        };\n        if (!this.columnsSnapshot.length) {\n            this.columns = [[]];\n            return;\n        }\n        this.columnsSnapshot[0].forEach(o => (isChildOption(o) ? loopChild(o) : loopParent(o)));\n        if (sorter) {\n            results.sort((a, b) => sorter(a.path, b.path, searchValue));\n        }\n        this.columns = [results];\n        this.$redraw.next(); // Search results may be empty, so should redraw.\n    }\n    /**\n     * Toggle searching mode by UI. It deals with things not directly related to UI.\n     *\n     * @param toSearching If this cascader is entering searching mode\n     */\n    toggleSearchingMode(toSearching) {\n        this.inSearchingMode = toSearching;\n        if (toSearching) {\n            this.activatedOptionsSnapshot = [...this.activatedOptions];\n            this.activatedOptions = [];\n            this.selectedOptions = [];\n            this.$redraw.next();\n        }\n        else {\n            // User quit searching mode without selecting an option.\n            this.activatedOptions = [...this.activatedOptionsSnapshot];\n            this.selectedOptions = [...this.activatedOptions];\n            this.columns = [...this.columnsSnapshot];\n            this.syncOptions();\n            this.$redraw.next();\n        }\n    }\n    /**\n     * Clear selected options.\n     */\n    clear() {\n        this.values = [];\n        this.selectedOptions = [];\n        this.activatedOptions = [];\n        this.dropBehindColumns(0);\n        this.$redraw.next();\n        this.$optionSelected.next(null);\n    }\n    getOptionLabel(o) {\n        return o[this.cascaderComponent.nzLabelProperty || 'label'];\n    }\n    getOptionValue(o) {\n        return o[this.cascaderComponent.nzValueProperty || 'value'];\n    }\n    /**\n     * Try to insert options into a column.\n     *\n     * @param options Options to insert\n     * @param columnIndex Position\n     */\n    setColumnData(options, columnIndex, parent) {\n        const existingOptions = this.columns[columnIndex];\n        if (!arraysEqual(existingOptions, options)) {\n            options.forEach(o => (o.parent = parent));\n            this.columns[columnIndex] = options;\n            this.dropBehindColumns(columnIndex);\n        }\n    }\n    /**\n     * Set all ancestor options as activated.\n     */\n    trackAncestorActivatedOptions(startIndex) {\n        for (let i = startIndex - 1; i >= 0; i--) {\n            if (!this.activatedOptions[i]) {\n                this.activatedOptions[i] = this.activatedOptions[i + 1].parent;\n            }\n        }\n    }\n    dropBehindActivatedOptions(lastReserveIndex) {\n        this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);\n    }\n    dropBehindColumns(lastReserveIndex) {\n        if (lastReserveIndex < this.columns.length - 1) {\n            this.columns = this.columns.slice(0, lastReserveIndex + 1);\n        }\n    }\n    /**\n     * Load children of an option asynchronously.\n     */\n    loadChildren(option, columnIndex, success, failure) {\n        const loadFn = this.cascaderComponent.nzLoadData;\n        if (loadFn) {\n            // If there isn't any option in columns.\n            this.$loading.next(columnIndex < 0);\n            if (typeof option === 'object') {\n                option.loading = true;\n            }\n            loadFn(option, columnIndex).then(() => {\n                option.loading = false;\n                if (option.children) {\n                    this.setColumnData(option.children, columnIndex + 1, option);\n                }\n                if (success) {\n                    success();\n                }\n                this.$loading.next(false);\n                this.$redraw.next();\n            }, () => {\n                option.loading = false;\n                option.isLeaf = true;\n                if (failure) {\n                    failure();\n                }\n                this.$redraw.next();\n            });\n        }\n    }\n    isLoaded(index) {\n        return this.columns[index] && this.columns[index].length > 0;\n    }\n    /**\n     * Find a option that has a given value in a given column.\n     */\n    findOptionWithValue(columnIndex, value) {\n        const targetColumn = this.columns[columnIndex];\n        if (targetColumn) {\n            const v = typeof value === 'object' ? this.getOptionValue(value) : value;\n            return targetColumn.find(o => v === this.getOptionValue(o));\n        }\n        return null;\n    }\n    prepareEmitValue() {\n        this.values = this.selectedOptions.map(o => this.getOptionValue(o));\n    }\n}\nNzCascaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzCascaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderService, decorators: [{\n            type: Injectable\n        }] });\n\nconst NZ_CONFIG_MODULE_NAME = 'cascader';\nconst defaultDisplayRender = (labels) => labels.join(' / ');\nclass NzCascaderComponent {\n    constructor(cascaderService, nzConfigService, ngZone, cdr, i18nService, elementRef, renderer, directionality, noAnimation) {\n        this.cascaderService = cascaderService;\n        this.nzConfigService = nzConfigService;\n        this.ngZone = ngZone;\n        this.cdr = cdr;\n        this.i18nService = i18nService;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzOptionRender = null;\n        this.nzShowInput = true;\n        this.nzShowArrow = true;\n        this.nzAllowClear = true;\n        this.nzAutoFocus = false;\n        this.nzChangeOnSelect = false;\n        this.nzDisabled = false;\n        this.nzExpandTrigger = 'click';\n        this.nzValueProperty = 'value';\n        this.nzLabelRender = null;\n        this.nzLabelProperty = 'label';\n        this.nzSize = 'default';\n        this.nzBackdrop = false;\n        this.nzShowSearch = false;\n        this.nzPlaceHolder = '';\n        this.nzMenuStyle = null;\n        this.nzMouseEnterDelay = 150; // ms\n        this.nzMouseLeaveDelay = 150; // ms\n        this.nzTriggerAction = ['click'];\n        // TODO: RTL\n        this.nzSuffixIcon = 'down';\n        this.nzExpandIcon = '';\n        this.nzVisibleChange = new EventEmitter();\n        this.nzSelectionChange = new EventEmitter();\n        this.nzSelect = new EventEmitter();\n        this.nzClear = new EventEmitter();\n        /**\n         * If the dropdown should show the empty content.\n         * `true` if there's no options.\n         */\n        this.shouldShowEmpty = false;\n        this.menuVisible = false;\n        this.isLoading = false;\n        this.labelRenderContext = {};\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.positions = [...DEFAULT_CASCADER_POSITIONS];\n        this.dropdownHeightStyle = '';\n        this.isFocused = false;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.inputString = '';\n        this.isOpening = false;\n        this.delayMenuTimer = null;\n        this.delaySelectTimer = null;\n        this.el = elementRef.nativeElement;\n        this.cascaderService.withComponent(this);\n        renderer.addClass(elementRef.nativeElement, 'ant-select');\n        renderer.addClass(elementRef.nativeElement, 'ant-cascader');\n    }\n    get nzOptions() {\n        return this.cascaderService.nzOptions;\n    }\n    set nzOptions(options) {\n        this.cascaderService.withOptions(options);\n    }\n    get inSearchingMode() {\n        return this.cascaderService.inSearchingMode;\n    }\n    set inputValue(inputValue) {\n        this.inputString = inputValue;\n        this.toggleSearchingMode(!!inputValue);\n    }\n    get inputValue() {\n        return this.inputString;\n    }\n    get menuCls() {\n        return { [`${this.nzMenuClassName}`]: !!this.nzMenuClassName };\n    }\n    get menuColumnCls() {\n        return { [`${this.nzColumnClassName}`]: !!this.nzColumnClassName };\n    }\n    get hasInput() {\n        return !!this.inputValue;\n    }\n    get hasValue() {\n        return this.cascaderService.values && this.cascaderService.values.length > 0;\n    }\n    get showLabelRender() {\n        return this.hasValue;\n    }\n    get showPlaceholder() {\n        return !(this.hasInput || this.hasValue);\n    }\n    get clearIconVisible() {\n        return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);\n    }\n    get isLabelRenderTemplate() {\n        return !!this.nzLabelRender;\n    }\n    ngOnInit() {\n        const srv = this.cascaderService;\n        srv.$redraw.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            // These operations would not mutate data.\n            this.checkChildren();\n            this.setDisplayLabel();\n            this.reposition();\n            this.setDropdownStyles();\n            this.cdr.markForCheck();\n        });\n        srv.$loading.pipe(takeUntil(this.destroy$)).subscribe(loading => {\n            this.isLoading = loading;\n        });\n        srv.$optionSelected.pipe(takeUntil(this.destroy$)).subscribe(data => {\n            if (!data) {\n                this.onChange([]);\n                this.nzSelect.emit(null);\n                this.nzSelectionChange.emit([]);\n            }\n            else {\n                const { option, index } = data;\n                const shouldClose = option.isLeaf || (this.nzChangeOnSelect && this.nzExpandTrigger === 'hover');\n                if (shouldClose) {\n                    this.delaySetMenuVisible(false);\n                }\n                this.onChange(this.cascaderService.values);\n                this.nzSelectionChange.emit(this.cascaderService.selectedOptions);\n                this.nzSelect.emit({ option, index });\n                this.cdr.markForCheck();\n            }\n        });\n        srv.$quitSearching.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.inputString = '';\n            this.dropdownWidthStyle = '';\n        });\n        this.i18nService.localeChange.pipe(startWith(), takeUntil(this.destroy$)).subscribe(() => {\n            this.setLocale();\n        });\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.cdr.markForCheck();\n        });\n        this.dir = this.directionality.value;\n        this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.dir = this.directionality.value;\n            srv.$redraw.next();\n        });\n        this.setupKeydownListener();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.clearDelayMenuTimer();\n        this.clearDelaySelectTimer();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    writeValue(value) {\n        this.cascaderService.values = toArray(value);\n        this.cascaderService.syncOptions(true);\n    }\n    delaySetMenuVisible(visible, delay = 100, setOpening = false) {\n        this.clearDelayMenuTimer();\n        if (delay) {\n            if (visible && setOpening) {\n                this.isOpening = true;\n            }\n            this.delayMenuTimer = setTimeout(() => {\n                this.setMenuVisible(visible);\n                this.cdr.detectChanges();\n                this.clearDelayMenuTimer();\n                if (visible) {\n                    setTimeout(() => {\n                        this.isOpening = false;\n                    }, 100);\n                }\n            }, delay);\n        }\n        else {\n            this.setMenuVisible(visible);\n        }\n    }\n    setMenuVisible(visible) {\n        if (this.nzDisabled || this.menuVisible === visible) {\n            return;\n        }\n        if (visible) {\n            this.cascaderService.syncOptions();\n            this.scrollToActivatedOptions();\n        }\n        if (!visible) {\n            this.inputValue = '';\n        }\n        this.menuVisible = visible;\n        this.nzVisibleChange.emit(visible);\n        this.cdr.detectChanges();\n    }\n    clearDelayMenuTimer() {\n        if (this.delayMenuTimer) {\n            clearTimeout(this.delayMenuTimer);\n            this.delayMenuTimer = null;\n        }\n    }\n    clearSelection(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.labelRenderText = '';\n        this.labelRenderContext = {};\n        this.inputValue = '';\n        this.setMenuVisible(false);\n        this.cascaderService.clear();\n        this.nzClear.emit();\n    }\n    getSubmitValue() {\n        return this.cascaderService.selectedOptions.map(o => this.cascaderService.getOptionValue(o));\n    }\n    focus() {\n        if (!this.isFocused) {\n            (this.input ? this.input.nativeElement : this.el).focus();\n            this.isFocused = true;\n        }\n    }\n    blur() {\n        if (this.isFocused) {\n            (this.input ? this.input.nativeElement : this.el).blur();\n            this.isFocused = false;\n        }\n    }\n    handleInputBlur() {\n        this.menuVisible ? this.focus() : this.blur();\n    }\n    handleInputFocus() {\n        this.focus();\n    }\n    onTriggerClick() {\n        if (this.nzDisabled) {\n            return;\n        }\n        if (this.nzShowSearch) {\n            this.focus();\n        }\n        if (this.isActionTrigger('click')) {\n            this.delaySetMenuVisible(!this.menuVisible, 100);\n        }\n        this.onTouched();\n    }\n    onTriggerMouseEnter() {\n        if (this.nzDisabled || !this.isActionTrigger('hover')) {\n            return;\n        }\n        this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);\n    }\n    onTriggerMouseLeave(event) {\n        if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {\n            event.preventDefault();\n            return;\n        }\n        const mouseTarget = event.relatedTarget;\n        const hostEl = this.el;\n        const menuEl = this.menu && this.menu.nativeElement;\n        if (hostEl.contains(mouseTarget) || (menuEl && menuEl.contains(mouseTarget))) {\n            return;\n        }\n        this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);\n    }\n    onOptionMouseEnter(option, columnIndex, event) {\n        event.preventDefault();\n        if (this.nzExpandTrigger === 'hover') {\n            if (!option.isLeaf) {\n                this.delaySetOptionActivated(option, columnIndex, false);\n            }\n            else {\n                this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);\n            }\n        }\n    }\n    onOptionMouseLeave(option, _columnIndex, event) {\n        event.preventDefault();\n        if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n            this.clearDelaySelectTimer();\n        }\n    }\n    onOptionClick(option, columnIndex, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (option && option.disabled) {\n            return;\n        }\n        this.el.focus();\n        this.inSearchingMode\n            ? this.cascaderService.setSearchOptionSelected(option)\n            : this.cascaderService.setOptionActivated(option, columnIndex, true);\n    }\n    onClickOutside(event) {\n        if (!this.el.contains(event.target)) {\n            this.closeMenu();\n        }\n    }\n    isActionTrigger(action) {\n        return typeof this.nzTriggerAction === 'string'\n            ? this.nzTriggerAction === action\n            : this.nzTriggerAction.indexOf(action) !== -1;\n    }\n    onEnter() {\n        const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n        const option = this.cascaderService.activatedOptions[columnIndex];\n        if (option && !option.disabled) {\n            this.inSearchingMode\n                ? this.cascaderService.setSearchOptionSelected(option)\n                : this.cascaderService.setOptionActivated(option, columnIndex, true);\n        }\n    }\n    moveUpOrDown(isUp) {\n        const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n        const activeOption = this.cascaderService.activatedOptions[columnIndex];\n        const options = this.cascaderService.columns[columnIndex] || [];\n        const length = options.length;\n        let nextIndex = -1;\n        if (!activeOption) {\n            // Not selected options in this column\n            nextIndex = isUp ? length : -1;\n        }\n        else {\n            nextIndex = options.indexOf(activeOption);\n        }\n        while (true) {\n            nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;\n            if (nextIndex < 0 || nextIndex >= length) {\n                break;\n            }\n            const nextOption = options[nextIndex];\n            if (!nextOption || nextOption.disabled) {\n                continue;\n            }\n            this.cascaderService.setOptionActivated(nextOption, columnIndex);\n            break;\n        }\n    }\n    moveLeft() {\n        const options = this.cascaderService.activatedOptions;\n        if (options.length) {\n            options.pop(); // Remove the last one\n        }\n    }\n    moveRight() {\n        const length = this.cascaderService.activatedOptions.length;\n        const options = this.cascaderService.columns[length];\n        if (options && options.length) {\n            const nextOpt = options.find(o => !o.disabled);\n            if (nextOpt) {\n                this.cascaderService.setOptionActivated(nextOpt, length);\n            }\n        }\n    }\n    clearDelaySelectTimer() {\n        if (this.delaySelectTimer) {\n            clearTimeout(this.delaySelectTimer);\n            this.delaySelectTimer = null;\n        }\n    }\n    delaySetOptionActivated(option, columnIndex, performSelect) {\n        this.clearDelaySelectTimer();\n        this.delaySelectTimer = setTimeout(() => {\n            this.cascaderService.setOptionActivated(option, columnIndex, performSelect);\n            this.delaySelectTimer = null;\n        }, 150);\n    }\n    toggleSearchingMode(toSearching) {\n        if (this.inSearchingMode !== toSearching) {\n            this.cascaderService.toggleSearchingMode(toSearching);\n        }\n        if (this.inSearchingMode) {\n            this.cascaderService.prepareSearchOptions(this.inputValue);\n        }\n    }\n    isOptionActivated(option, index) {\n        const activeOpt = this.cascaderService.activatedOptions[index];\n        return activeOpt === option;\n    }\n    setDisabledState(isDisabled) {\n        if (isDisabled) {\n            this.closeMenu();\n        }\n        this.nzDisabled = isDisabled;\n    }\n    closeMenu() {\n        this.blur();\n        this.clearDelayMenuTimer();\n        this.setMenuVisible(false);\n    }\n    /**\n     * Reposition the cascader panel. When a menu opens, the cascader expands\n     * and may exceed the boundary of browser's window.\n     */\n    reposition() {\n        if (this.overlay && this.overlay.overlayRef && this.menuVisible) {\n            Promise.resolve().then(() => {\n                this.overlay.overlayRef.updatePosition();\n            });\n        }\n    }\n    /**\n     * When a cascader options is changed, a child needs to know that it should re-render.\n     */\n    checkChildren() {\n        if (this.cascaderItems) {\n            this.cascaderItems.forEach(item => item.markForCheck());\n        }\n    }\n    setDisplayLabel() {\n        const selectedOptions = this.cascaderService.selectedOptions;\n        const labels = selectedOptions.map(o => this.cascaderService.getOptionLabel(o));\n        if (this.isLabelRenderTemplate) {\n            this.labelRenderContext = { labels, selectedOptions };\n        }\n        else {\n            this.labelRenderText = defaultDisplayRender.call(this, labels);\n        }\n    }\n    setDropdownStyles() {\n        const firstColumn = this.cascaderService.columns[0];\n        this.shouldShowEmpty =\n            (this.inSearchingMode && (!firstColumn || !firstColumn.length)) || // Should show empty when there's no searching result\n                (!(this.nzOptions && this.nzOptions.length) && !this.nzLoadData); // Should show when there's no options and developer does not use nzLoadData\n        this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';\n        if (this.input) {\n            this.dropdownWidthStyle =\n                this.inSearchingMode || this.shouldShowEmpty ? `${this.selectContainer.nativeElement.offsetWidth}px` : '';\n        }\n    }\n    setLocale() {\n        this.locale = this.i18nService.getLocaleData('global');\n        this.cdr.markForCheck();\n    }\n    scrollToActivatedOptions() {\n        // The `scrollIntoView` is a native DOM API, which doesn't require Angular to run\n        // a change detection when a promise microtask is resolved.\n        this.ngZone.runOutsideAngular(() => {\n            Promise.resolve().then(() => {\n                // scroll only until option menu view is ready\n                this.cascaderItems\n                    .toArray()\n                    .filter(e => e.activated)\n                    .forEach(e => {\n                    e.nativeElement.scrollIntoView({ block: 'start', inline: 'nearest' });\n                });\n            });\n        });\n    }\n    setupKeydownListener() {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.el, 'keydown')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                const keyCode = event.keyCode;\n                if (keyCode !== DOWN_ARROW &&\n                    keyCode !== UP_ARROW &&\n                    keyCode !== LEFT_ARROW &&\n                    keyCode !== RIGHT_ARROW &&\n                    keyCode !== ENTER &&\n                    keyCode !== BACKSPACE &&\n                    keyCode !== ESCAPE) {\n                    return;\n                }\n                // Press any keys above to reopen menu.\n                if (!this.menuVisible && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n                    // The `setMenuVisible` runs `detectChanges()`, so we don't need to run `markForCheck()` additionally.\n                    return this.ngZone.run(() => this.setMenuVisible(true));\n                }\n                // Make these keys work as default in searching mode.\n                if (this.inSearchingMode && (keyCode === BACKSPACE || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW)) {\n                    return;\n                }\n                if (!this.menuVisible) {\n                    return;\n                }\n                event.preventDefault();\n                this.ngZone.run(() => {\n                    // Interact with the component.\n                    if (keyCode === DOWN_ARROW) {\n                        this.moveUpOrDown(false);\n                    }\n                    else if (keyCode === UP_ARROW) {\n                        this.moveUpOrDown(true);\n                    }\n                    else if (keyCode === LEFT_ARROW) {\n                        this.moveLeft();\n                    }\n                    else if (keyCode === RIGHT_ARROW) {\n                        this.moveRight();\n                    }\n                    else if (keyCode === ENTER) {\n                        this.onEnter();\n                    }\n                    // `@HostListener`s run `markForCheck()` internally before calling the actual handler so\n                    // we call `markForCheck()` to be backwards-compatible.\n                    this.cdr.markForCheck();\n                });\n            });\n        });\n    }\n}\nNzCascaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderComponent, deps: [{ token: NzCascaderService }, { token: i2$1.NzConfigService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i3$1.NzI18nService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i4$1.Directionality, optional: true }, { token: i5.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzCascaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCascaderComponent, selector: \"nz-cascader, [nz-cascader]\", inputs: { nzOptionRender: \"nzOptionRender\", nzShowInput: \"nzShowInput\", nzShowArrow: \"nzShowArrow\", nzAllowClear: \"nzAllowClear\", nzAutoFocus: \"nzAutoFocus\", nzChangeOnSelect: \"nzChangeOnSelect\", nzDisabled: \"nzDisabled\", nzColumnClassName: \"nzColumnClassName\", nzExpandTrigger: \"nzExpandTrigger\", nzValueProperty: \"nzValueProperty\", nzLabelRender: \"nzLabelRender\", nzLabelProperty: \"nzLabelProperty\", nzNotFoundContent: \"nzNotFoundContent\", nzSize: \"nzSize\", nzBackdrop: \"nzBackdrop\", nzShowSearch: \"nzShowSearch\", nzPlaceHolder: \"nzPlaceHolder\", nzMenuClassName: \"nzMenuClassName\", nzMenuStyle: \"nzMenuStyle\", nzMouseEnterDelay: \"nzMouseEnterDelay\", nzMouseLeaveDelay: \"nzMouseLeaveDelay\", nzTriggerAction: \"nzTriggerAction\", nzChangeOn: \"nzChangeOn\", nzLoadData: \"nzLoadData\", nzSuffixIcon: \"nzSuffixIcon\", nzExpandIcon: \"nzExpandIcon\", nzOptions: \"nzOptions\" }, outputs: { nzVisibleChange: \"nzVisibleChange\", nzSelectionChange: \"nzSelectionChange\", nzSelect: \"nzSelect\", nzClear: \"nzClear\" }, host: { listeners: { \"click\": \"onTriggerClick()\", \"mouseenter\": \"onTriggerMouseEnter()\", \"mouseleave\": \"onTriggerMouseLeave($event)\" }, properties: { \"attr.tabIndex\": \"\\\"0\\\"\", \"class.ant-select-lg\": \"nzSize === \\\"large\\\"\", \"class.ant-select-sm\": \"nzSize === \\\"small\\\"\", \"class.ant-select-allow-clear\": \"nzAllowClear\", \"class.ant-select-show-arrow\": \"nzShowArrow\", \"class.ant-select-show-search\": \"!!nzShowSearch\", \"class.ant-select-disabled\": \"nzDisabled\", \"class.ant-select-open\": \"menuVisible\", \"class.ant-select-focused\": \"isFocused\", \"class.ant-select-single\": \"true\", \"class.ant-select-rtl\": \"dir ==='rtl'\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzCascaderComponent),\n            multi: true\n        },\n        NzCascaderService\n    ], viewQueries: [{ propertyName: \"selectContainer\", first: true, predicate: [\"selectContainer\"], descendants: true }, { propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"menu\", first: true, predicate: [\"menu\"], descendants: true }, { propertyName: \"overlay\", first: true, predicate: CdkConnectedOverlay, descendants: true }, { propertyName: \"cascaderItems\", predicate: NzCascaderOptionComponent, descendants: true }], exportAs: [\"nzCascader\"], ngImport: i0, template: `\n    <div cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" #trigger>\n      <ng-container *ngIf=\"nzShowInput\">\n        <div #selectContainer class=\"ant-select-selector\">\n          <span class=\"ant-select-selection-search\">\n            <input\n              #input\n              type=\"search\"\n              class=\"ant-select-selection-search-input\"\n              [style.opacity]=\"nzShowSearch ? '' : '0'\"\n              [attr.autoComplete]=\"'off'\"\n              [attr.expanded]=\"menuVisible\"\n              [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n              [readonly]=\"!nzShowSearch\"\n              [disabled]=\"nzDisabled\"\n              [(ngModel)]=\"inputValue\"\n              (blur)=\"handleInputBlur()\"\n              (focus)=\"handleInputFocus()\"\n              (change)=\"$event.stopPropagation()\"\n            />\n          </span>\n          <span *ngIf=\"showLabelRender\" class=\"ant-select-selection-item\" [title]=\"labelRenderText\">\n            <ng-container *ngIf=\"!isLabelRenderTemplate; else labelTemplate\">{{ labelRenderText }}</ng-container>\n            <ng-template #labelTemplate>\n              <ng-template\n                [ngTemplateOutlet]=\"nzLabelRender\"\n                [ngTemplateOutletContext]=\"labelRenderContext\"\n              ></ng-template>\n            </ng-template>\n          </span>\n          <span\n            *ngIf=\"!showLabelRender\"\n            class=\"ant-select-selection-placeholder\"\n            [style.visibility]=\"!inputValue ? 'visible' : 'hidden'\"\n            >{{ showPlaceholder ? nzPlaceHolder || locale?.placeholder : null }}</span\n          >\n        </div>\n        <span class=\"ant-select-arrow\" [class.ant-select-arrow-loading]=\"isLoading\" *ngIf=\"nzShowArrow\">\n          <i\n            *ngIf=\"!isLoading\"\n            nz-icon\n            [nzType]=\"$any(nzSuffixIcon)\"\n            [class.ant-cascader-picker-arrow-expand]=\"menuVisible\"\n          ></i>\n          <i *ngIf=\"isLoading\" nz-icon nzType=\"loading\"></i>\n        </span>\n        <span class=\"ant-select-clear\" *ngIf=\"clearIconVisible\">\n          <i nz-icon nzType=\"close-circle\" nzTheme=\"fill\" (click)=\"clearSelection($event)\"></i>\n        </span>\n      </ng-container>\n      <ng-content></ng-content>\n    </div>\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-cascader-dropdown'\"\n      [cdkConnectedOverlayOpen]=\"menuVisible\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeMenu()\"\n    >\n      <div\n        class=\"ant-select-dropdown ant-cascader-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-cascader-dropdown-rtl]=\"dir === 'rtl'\"\n        [@slideMotion]=\"'enter'\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        (mouseleave)=\"onTriggerMouseLeave($event)\"\n      >\n        <div\n          #menu\n          class=\"ant-cascader-menus\"\n          [class.ant-cascader-rtl]=\"dir === 'rtl'\"\n          [class.ant-cascader-menus-hidden]=\"!menuVisible\"\n          [class.ant-cascader-menu-empty]=\"shouldShowEmpty\"\n          [ngClass]=\"menuCls\"\n          [ngStyle]=\"nzMenuStyle\"\n        >\n          <ul\n            *ngIf=\"shouldShowEmpty; else hasOptionsTemplate\"\n            class=\"ant-cascader-menu\"\n            [style.width]=\"dropdownWidthStyle\"\n            [style.height]=\"dropdownHeightStyle\"\n          >\n            <li class=\"ant-cascader-menu-item ant-cascader-menu-item-disabled\">\n              <nz-embed-empty\n                class=\"ant-cascader-menu-item-content\"\n                [nzComponentName]=\"'cascader'\"\n                [specificContent]=\"nzNotFoundContent\"\n              ></nz-embed-empty>\n            </li>\n          </ul>\n          <ng-template #hasOptionsTemplate>\n            <ul\n              *ngFor=\"let options of cascaderService.columns; let i = index\"\n              class=\"ant-cascader-menu\"\n              role=\"menuitemcheckbox\"\n              [ngClass]=\"menuColumnCls\"\n              [style.height]=\"dropdownHeightStyle\"\n              [style.width]=\"dropdownWidthStyle\"\n            >\n              <li\n                nz-cascader-option\n                *ngFor=\"let option of options\"\n                [expandIcon]=\"nzExpandIcon\"\n                [columnIndex]=\"i\"\n                [nzLabelProperty]=\"nzLabelProperty\"\n                [optionTemplate]=\"nzOptionRender\"\n                [activated]=\"isOptionActivated(option, i)\"\n                [highlightText]=\"inSearchingMode ? inputValue : ''\"\n                [option]=\"option\"\n                [dir]=\"dir\"\n                (mouseenter)=\"onOptionMouseEnter(option, i, $event)\"\n                (mouseleave)=\"onOptionMouseLeave(option, i, $event)\"\n                (click)=\"onOptionClick(option, i, $event)\"\n              ></li>\n            </ul>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `, isInline: true, components: [{ type: i6.NzEmbedEmptyComponent, selector: \"nz-embed-empty\", inputs: [\"nzComponentName\", \"specificContent\"], exportAs: [\"nzEmbedEmpty\"] }, { type: NzCascaderOptionComponent, selector: \"[nz-cascader-option]\", inputs: [\"optionTemplate\", \"option\", \"activated\", \"highlightText\", \"nzLabelProperty\", \"columnIndex\", \"expandIcon\", \"dir\"], exportAs: [\"nzCascaderOption\"] }], directives: [{ type: i8.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i9.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i10.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i10.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i10.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i9.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i8.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i12.NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: [\"nzArrowPointAtCenter\"], exportAs: [\"nzConnectedOverlay\"] }, { type: i5.NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }, { type: i9.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i9.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i9.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4$1.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzCascaderComponent.prototype, \"nzShowInput\", void 0);\n__decorate([\n    InputBoolean()\n], NzCascaderComponent.prototype, \"nzShowArrow\", void 0);\n__decorate([\n    InputBoolean()\n], NzCascaderComponent.prototype, \"nzAllowClear\", void 0);\n__decorate([\n    InputBoolean()\n], NzCascaderComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([\n    InputBoolean()\n], NzCascaderComponent.prototype, \"nzChangeOnSelect\", void 0);\n__decorate([\n    InputBoolean()\n], NzCascaderComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    WithConfig()\n], NzCascaderComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig()\n], NzCascaderComponent.prototype, \"nzBackdrop\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-cascader, [nz-cascader]',\n                    exportAs: 'nzCascader',\n                    preserveWhitespaces: false,\n                    template: `\n    <div cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" #trigger>\n      <ng-container *ngIf=\"nzShowInput\">\n        <div #selectContainer class=\"ant-select-selector\">\n          <span class=\"ant-select-selection-search\">\n            <input\n              #input\n              type=\"search\"\n              class=\"ant-select-selection-search-input\"\n              [style.opacity]=\"nzShowSearch ? '' : '0'\"\n              [attr.autoComplete]=\"'off'\"\n              [attr.expanded]=\"menuVisible\"\n              [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n              [readonly]=\"!nzShowSearch\"\n              [disabled]=\"nzDisabled\"\n              [(ngModel)]=\"inputValue\"\n              (blur)=\"handleInputBlur()\"\n              (focus)=\"handleInputFocus()\"\n              (change)=\"$event.stopPropagation()\"\n            />\n          </span>\n          <span *ngIf=\"showLabelRender\" class=\"ant-select-selection-item\" [title]=\"labelRenderText\">\n            <ng-container *ngIf=\"!isLabelRenderTemplate; else labelTemplate\">{{ labelRenderText }}</ng-container>\n            <ng-template #labelTemplate>\n              <ng-template\n                [ngTemplateOutlet]=\"nzLabelRender\"\n                [ngTemplateOutletContext]=\"labelRenderContext\"\n              ></ng-template>\n            </ng-template>\n          </span>\n          <span\n            *ngIf=\"!showLabelRender\"\n            class=\"ant-select-selection-placeholder\"\n            [style.visibility]=\"!inputValue ? 'visible' : 'hidden'\"\n            >{{ showPlaceholder ? nzPlaceHolder || locale?.placeholder : null }}</span\n          >\n        </div>\n        <span class=\"ant-select-arrow\" [class.ant-select-arrow-loading]=\"isLoading\" *ngIf=\"nzShowArrow\">\n          <i\n            *ngIf=\"!isLoading\"\n            nz-icon\n            [nzType]=\"$any(nzSuffixIcon)\"\n            [class.ant-cascader-picker-arrow-expand]=\"menuVisible\"\n          ></i>\n          <i *ngIf=\"isLoading\" nz-icon nzType=\"loading\"></i>\n        </span>\n        <span class=\"ant-select-clear\" *ngIf=\"clearIconVisible\">\n          <i nz-icon nzType=\"close-circle\" nzTheme=\"fill\" (click)=\"clearSelection($event)\"></i>\n        </span>\n      </ng-container>\n      <ng-content></ng-content>\n    </div>\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-cascader-dropdown'\"\n      [cdkConnectedOverlayOpen]=\"menuVisible\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeMenu()\"\n    >\n      <div\n        class=\"ant-select-dropdown ant-cascader-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-cascader-dropdown-rtl]=\"dir === 'rtl'\"\n        [@slideMotion]=\"'enter'\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        (mouseleave)=\"onTriggerMouseLeave($event)\"\n      >\n        <div\n          #menu\n          class=\"ant-cascader-menus\"\n          [class.ant-cascader-rtl]=\"dir === 'rtl'\"\n          [class.ant-cascader-menus-hidden]=\"!menuVisible\"\n          [class.ant-cascader-menu-empty]=\"shouldShowEmpty\"\n          [ngClass]=\"menuCls\"\n          [ngStyle]=\"nzMenuStyle\"\n        >\n          <ul\n            *ngIf=\"shouldShowEmpty; else hasOptionsTemplate\"\n            class=\"ant-cascader-menu\"\n            [style.width]=\"dropdownWidthStyle\"\n            [style.height]=\"dropdownHeightStyle\"\n          >\n            <li class=\"ant-cascader-menu-item ant-cascader-menu-item-disabled\">\n              <nz-embed-empty\n                class=\"ant-cascader-menu-item-content\"\n                [nzComponentName]=\"'cascader'\"\n                [specificContent]=\"nzNotFoundContent\"\n              ></nz-embed-empty>\n            </li>\n          </ul>\n          <ng-template #hasOptionsTemplate>\n            <ul\n              *ngFor=\"let options of cascaderService.columns; let i = index\"\n              class=\"ant-cascader-menu\"\n              role=\"menuitemcheckbox\"\n              [ngClass]=\"menuColumnCls\"\n              [style.height]=\"dropdownHeightStyle\"\n              [style.width]=\"dropdownWidthStyle\"\n            >\n              <li\n                nz-cascader-option\n                *ngFor=\"let option of options\"\n                [expandIcon]=\"nzExpandIcon\"\n                [columnIndex]=\"i\"\n                [nzLabelProperty]=\"nzLabelProperty\"\n                [optionTemplate]=\"nzOptionRender\"\n                [activated]=\"isOptionActivated(option, i)\"\n                [highlightText]=\"inSearchingMode ? inputValue : ''\"\n                [option]=\"option\"\n                [dir]=\"dir\"\n                (mouseenter)=\"onOptionMouseEnter(option, i, $event)\"\n                (mouseleave)=\"onOptionMouseLeave(option, i, $event)\"\n                (click)=\"onOptionClick(option, i, $event)\"\n              ></li>\n            </ul>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `,\n                    animations: [slideMotion],\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCascaderComponent),\n                            multi: true\n                        },\n                        NzCascaderService\n                    ],\n                    host: {\n                        '[attr.tabIndex]': '\"0\"',\n                        '[class.ant-select-lg]': 'nzSize === \"large\"',\n                        '[class.ant-select-sm]': 'nzSize === \"small\"',\n                        '[class.ant-select-allow-clear]': 'nzAllowClear',\n                        '[class.ant-select-show-arrow]': 'nzShowArrow',\n                        '[class.ant-select-show-search]': '!!nzShowSearch',\n                        '[class.ant-select-disabled]': 'nzDisabled',\n                        '[class.ant-select-open]': 'menuVisible',\n                        '[class.ant-select-focused]': 'isFocused',\n                        '[class.ant-select-single]': 'true',\n                        '[class.ant-select-rtl]': `dir ==='rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NzCascaderService }, { type: i2$1.NzConfigService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i3$1.NzI18nService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i4$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i5.NzNoAnimationDirective, decorators: [{\n                        type: Host\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { selectContainer: [{\n                type: ViewChild,\n                args: ['selectContainer', { static: false }]\n            }], input: [{\n                type: ViewChild,\n                args: ['input', { static: false }]\n            }], menu: [{\n                type: ViewChild,\n                args: ['menu', { static: false }]\n            }], overlay: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay, { static: false }]\n            }], cascaderItems: [{\n                type: ViewChildren,\n                args: [NzCascaderOptionComponent]\n            }], nzOptionRender: [{\n                type: Input\n            }], nzShowInput: [{\n                type: Input\n            }], nzShowArrow: [{\n                type: Input\n            }], nzAllowClear: [{\n                type: Input\n            }], nzAutoFocus: [{\n                type: Input\n            }], nzChangeOnSelect: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzColumnClassName: [{\n                type: Input\n            }], nzExpandTrigger: [{\n                type: Input\n            }], nzValueProperty: [{\n                type: Input\n            }], nzLabelRender: [{\n                type: Input\n            }], nzLabelProperty: [{\n                type: Input\n            }], nzNotFoundContent: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzBackdrop: [{\n                type: Input\n            }], nzShowSearch: [{\n                type: Input\n            }], nzPlaceHolder: [{\n                type: Input\n            }], nzMenuClassName: [{\n                type: Input\n            }], nzMenuStyle: [{\n                type: Input\n            }], nzMouseEnterDelay: [{\n                type: Input\n            }], nzMouseLeaveDelay: [{\n                type: Input\n            }], nzTriggerAction: [{\n                type: Input\n            }], nzChangeOn: [{\n                type: Input\n            }], nzLoadData: [{\n                type: Input\n            }], nzSuffixIcon: [{\n                type: Input\n            }], nzExpandIcon: [{\n                type: Input\n            }], nzOptions: [{\n                type: Input\n            }], nzVisibleChange: [{\n                type: Output\n            }], nzSelectionChange: [{\n                type: Output\n            }], nzSelect: [{\n                type: Output\n            }], nzClear: [{\n                type: Output\n            }], onTriggerClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onTriggerMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onTriggerMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event']]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCascaderModule {\n}\nNzCascaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzCascaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderModule, declarations: [NzCascaderComponent, NzCascaderOptionComponent], imports: [BidiModule,\n        CommonModule,\n        FormsModule,\n        OverlayModule,\n        NzOutletModule,\n        NzEmptyModule,\n        NzHighlightModule,\n        NzIconModule,\n        NzInputModule,\n        NzNoAnimationModule,\n        NzOverlayModule], exports: [NzCascaderComponent] });\nNzCascaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderModule, imports: [[\n            BidiModule,\n            CommonModule,\n            FormsModule,\n            OverlayModule,\n            NzOutletModule,\n            NzEmptyModule,\n            NzHighlightModule,\n            NzIconModule,\n            NzInputModule,\n            NzNoAnimationModule,\n            NzOverlayModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCascaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        FormsModule,\n                        OverlayModule,\n                        NzOutletModule,\n                        NzEmptyModule,\n                        NzHighlightModule,\n                        NzIconModule,\n                        NzInputModule,\n                        NzNoAnimationModule,\n                        NzOverlayModule\n                    ],\n                    declarations: [NzCascaderComponent, NzCascaderOptionComponent],\n                    exports: [NzCascaderComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCascaderComponent, NzCascaderModule, NzCascaderOptionComponent, NzCascaderService, isChildOption, isParentOption, isShowSearchObject };\n"]},"metadata":{},"sourceType":"module"}