{"ast":null,"code":"import * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Optional, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzCommentActionComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction NzCommentComponent_span_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.nzAuthor);\n  }\n}\n\nfunction NzCommentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzCommentComponent_span_5_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzAuthor);\n  }\n}\n\nfunction NzCommentComponent_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.nzDatetime);\n  }\n}\n\nfunction NzCommentComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtemplate(1, NzCommentComponent_span_6_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzDatetime);\n  }\n}\n\nfunction NzCommentComponent_ul_8_li_1_ng_template_2_Template(rf, ctx) {}\n\nfunction NzCommentComponent_ul_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtemplate(2, NzCommentComponent_ul_8_li_1_ng_template_2_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzCommentActionHost\", action_r6.content);\n  }\n}\n\nfunction NzCommentComponent_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 11);\n    i0.ɵɵtemplate(1, NzCommentComponent_ul_8_li_1_Template, 3, 1, \"li\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.actions);\n  }\n}\n\nconst _c1 = [[[\"nz-avatar\", \"nz-comment-avatar\", \"\"]], [[\"nz-comment-content\"]], \"*\"];\nconst _c2 = [\"nz-avatar[nz-comment-avatar]\", \"nz-comment-content\", \"*\"];\n\nclass NzCommentAvatarDirective {}\n\nNzCommentAvatarDirective.ɵfac = function NzCommentAvatarDirective_Factory(t) {\n  return new (t || NzCommentAvatarDirective)();\n};\n\nNzCommentAvatarDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCommentAvatarDirective,\n  selectors: [[\"nz-avatar\", \"nz-comment-avatar\", \"\"]],\n  exportAs: [\"nzCommentAvatar\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCommentAvatarDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-avatar[nz-comment-avatar]',\n      exportAs: 'nzCommentAvatar'\n    }]\n  }], null, null);\n})();\n\nclass NzCommentContentDirective {}\n\nNzCommentContentDirective.ɵfac = function NzCommentContentDirective_Factory(t) {\n  return new (t || NzCommentContentDirective)();\n};\n\nNzCommentContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCommentContentDirective,\n  selectors: [[\"nz-comment-content\"], [\"\", \"nz-comment-content\", \"\"]],\n  hostAttrs: [1, \"ant-comment-content-detail\"],\n  exportAs: [\"nzCommentContent\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCommentContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-comment-content, [nz-comment-content]',\n      exportAs: 'nzCommentContent',\n      host: {\n        class: 'ant-comment-content-detail'\n      }\n    }]\n  }], null, null);\n})();\n\nclass NzCommentActionHostDirective extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef) {\n    super(componentFactoryResolver, viewContainerRef);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  ngAfterViewInit() {\n    this.attach(this.nzCommentActionHost);\n  }\n\n}\n\nNzCommentActionHostDirective.ɵfac = function NzCommentActionHostDirective_Factory(t) {\n  return new (t || NzCommentActionHostDirective)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nNzCommentActionHostDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCommentActionHostDirective,\n  selectors: [[\"\", \"nzCommentActionHost\", \"\"]],\n  inputs: {\n    nzCommentActionHost: \"nzCommentActionHost\"\n  },\n  exportAs: [\"nzCommentActionHost\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCommentActionHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzCommentActionHost]',\n      exportAs: 'nzCommentActionHost'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    nzCommentActionHost: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzCommentActionComponent {\n  constructor(viewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n    this.contentPortal = null;\n  }\n\n  get content() {\n    return this.contentPortal;\n  }\n\n  ngOnInit() {\n    this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\n  }\n\n}\n\nNzCommentActionComponent.ɵfac = function NzCommentActionComponent_Factory(t) {\n  return new (t || NzCommentActionComponent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nNzCommentActionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCommentActionComponent,\n  selectors: [[\"nz-comment-action\"]],\n  viewQuery: function NzCommentActionComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.implicitContent = _t.first);\n    }\n  },\n  exportAs: [\"nzCommentAction\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzCommentActionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzCommentActionComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCommentActionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-comment-action',\n      exportAs: 'nzCommentAction',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<ng-template><ng-content></ng-content></ng-template>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass NzCommentComponent {\n  constructor(cdr, directionality) {\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  ngOnInit() {\n    var _a;\n\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzCommentComponent.ɵfac = function NzCommentComponent_Factory(t) {\n  return new (t || NzCommentComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzCommentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCommentComponent,\n  selectors: [[\"nz-comment\"]],\n  contentQueries: function NzCommentComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzCommentActionComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actions = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function NzCommentComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-comment\", true)(\"ant-comment-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzAuthor: \"nzAuthor\",\n    nzDatetime: \"nzDatetime\"\n  },\n  exportAs: [\"nzComment\"],\n  ngContentSelectors: _c2,\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"ant-comment-inner\"], [1, \"ant-comment-avatar\"], [1, \"ant-comment-content\"], [1, \"ant-comment-content-author\"], [\"class\", \"ant-comment-content-author-name\", 4, \"ngIf\"], [\"class\", \"ant-comment-content-author-time\", 4, \"ngIf\"], [\"class\", \"ant-comment-actions\", 4, \"ngIf\"], [1, \"ant-comment-nested\"], [1, \"ant-comment-content-author-name\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-comment-content-author-time\"], [1, \"ant-comment-actions\"], [4, \"ngFor\", \"ngForOf\"], [3, \"nzCommentActionHost\"]],\n  template: function NzCommentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c1);\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, NzCommentComponent_span_5_Template, 2, 1, \"span\", 4);\n      i0.ɵɵtemplate(6, NzCommentComponent_span_6_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(7, 1);\n      i0.ɵɵtemplate(8, NzCommentComponent_ul_8_Template, 2, 1, \"ul\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵprojection(10, 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzAuthor);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzDatetime);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.actions == null ? null : ctx.actions.length);\n    }\n  },\n  directives: [i2.NgIf, i3.NzStringTemplateOutletDirective, i2.NgForOf, NzCommentActionHostDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCommentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-comment',\n      exportAs: 'nzComment',\n      template: `\n    <div class=\"ant-comment-inner\">\n      <div class=\"ant-comment-avatar\">\n        <ng-content select=\"nz-avatar[nz-comment-avatar]\"></ng-content>\n      </div>\n      <div class=\"ant-comment-content\">\n        <div class=\"ant-comment-content-author\">\n          <span *ngIf=\"nzAuthor\" class=\"ant-comment-content-author-name\">\n            <ng-container *nzStringTemplateOutlet=\"nzAuthor\">{{ nzAuthor }}</ng-container>\n          </span>\n          <span *ngIf=\"nzDatetime\" class=\"ant-comment-content-author-time\">\n            <ng-container *nzStringTemplateOutlet=\"nzDatetime\">{{ nzDatetime }}</ng-container>\n          </span>\n        </div>\n        <ng-content select=\"nz-comment-content\"></ng-content>\n        <ul class=\"ant-comment-actions\" *ngIf=\"actions?.length\">\n          <li *ngFor=\"let action of actions\">\n            <span><ng-template [nzCommentActionHost]=\"action.content\"></ng-template></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"ant-comment-nested\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.ant-comment]': `true`,\n        '[class.ant-comment-rtl]': `dir === \"rtl\"`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzAuthor: [{\n      type: Input\n    }],\n    nzDatetime: [{\n      type: Input\n    }],\n    actions: [{\n      type: ContentChildren,\n      args: [NzCommentActionComponent]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst NZ_COMMENT_CELLS = [NzCommentAvatarDirective, NzCommentContentDirective, NzCommentActionComponent, NzCommentActionHostDirective];\n\nclass NzCommentModule {}\n\nNzCommentModule.ɵfac = function NzCommentModule_Factory(t) {\n  return new (t || NzCommentModule)();\n};\n\nNzCommentModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzCommentModule\n});\nNzCommentModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCommentModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, NzOutletModule],\n      exports: [NzCommentComponent, ...NZ_COMMENT_CELLS],\n      declarations: [NzCommentComponent, ...NZ_COMMENT_CELLS]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCommentActionComponent, NzCommentActionHostDirective, NzCommentAvatarDirective, NzCommentComponent, NzCommentContentDirective, NzCommentModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-comment.mjs"],"names":["i1","BidiModule","i2","CommonModule","i0","Directive","Input","TemplateRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","Optional","ContentChildren","NgModule","i3","NzOutletModule","CdkPortalOutlet","TemplatePortal","Subject","takeUntil","NzCommentAvatarDirective","ɵfac","ɵdir","type","args","selector","exportAs","NzCommentContentDirective","host","class","NzCommentActionHostDirective","constructor","componentFactoryResolver","viewContainerRef","ngOnInit","ngOnDestroy","ngAfterViewInit","attach","nzCommentActionHost","ComponentFactoryResolver","ViewContainerRef","NzCommentActionComponent","contentPortal","content","implicitContent","ɵcmp","encapsulation","None","changeDetection","OnPush","template","static","NzCommentComponent","cdr","directionality","dir","destroy$","_a","change","pipe","subscribe","direction","detectChanges","value","next","complete","ChangeDetectorRef","Directionality","NgIf","NzStringTemplateOutletDirective","NgForOf","decorators","nzAuthor","nzDatetime","actions","NZ_COMMENT_CELLS","NzCommentModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Optional, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCommentAvatarDirective {\n}\nNzCommentAvatarDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentAvatarDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzCommentAvatarDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCommentAvatarDirective, selector: \"nz-avatar[nz-comment-avatar]\", exportAs: [\"nzCommentAvatar\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentAvatarDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'nz-avatar[nz-comment-avatar]',\n                    exportAs: 'nzCommentAvatar'\n                }]\n        }] });\nclass NzCommentContentDirective {\n}\nNzCommentContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentContentDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzCommentContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCommentContentDirective, selector: \"nz-comment-content, [nz-comment-content]\", host: { classAttribute: \"ant-comment-content-detail\" }, exportAs: [\"nzCommentContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentContentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'nz-comment-content, [nz-comment-content]',\n                    exportAs: 'nzCommentContent',\n                    host: { class: 'ant-comment-content-detail' }\n                }]\n        }] });\nclass NzCommentActionHostDirective extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    ngAfterViewInit() {\n        this.attach(this.nzCommentActionHost);\n    }\n}\nNzCommentActionHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentActionHostDirective, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzCommentActionHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCommentActionHostDirective, selector: \"[nzCommentActionHost]\", inputs: { nzCommentActionHost: \"nzCommentActionHost\" }, exportAs: [\"nzCommentActionHost\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentActionHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nzCommentActionHost]',\n                    exportAs: 'nzCommentActionHost'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }]; }, propDecorators: { nzCommentActionHost: [{\n                type: Input\n            }] } });\nclass NzCommentActionComponent {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n        this.contentPortal = null;\n    }\n    get content() {\n        return this.contentPortal;\n    }\n    ngOnInit() {\n        this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);\n    }\n}\nNzCommentActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentActionComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nNzCommentActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCommentActionComponent, selector: \"nz-comment-action\", viewQueries: [{ propertyName: \"implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"nzCommentAction\"], ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentActionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-comment-action',\n                    exportAs: 'nzCommentAction',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-template><ng-content></ng-content></ng-template>'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }] } });\n\nclass NzCommentComponent {\n    constructor(cdr, directionality) {\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzCommentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzCommentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCommentComponent, selector: \"nz-comment\", inputs: { nzAuthor: \"nzAuthor\", nzDatetime: \"nzDatetime\" }, host: { properties: { \"class.ant-comment\": \"true\", \"class.ant-comment-rtl\": \"dir === \\\"rtl\\\"\" } }, queries: [{ propertyName: \"actions\", predicate: NzCommentActionComponent }], exportAs: [\"nzComment\"], ngImport: i0, template: `\n    <div class=\"ant-comment-inner\">\n      <div class=\"ant-comment-avatar\">\n        <ng-content select=\"nz-avatar[nz-comment-avatar]\"></ng-content>\n      </div>\n      <div class=\"ant-comment-content\">\n        <div class=\"ant-comment-content-author\">\n          <span *ngIf=\"nzAuthor\" class=\"ant-comment-content-author-name\">\n            <ng-container *nzStringTemplateOutlet=\"nzAuthor\">{{ nzAuthor }}</ng-container>\n          </span>\n          <span *ngIf=\"nzDatetime\" class=\"ant-comment-content-author-time\">\n            <ng-container *nzStringTemplateOutlet=\"nzDatetime\">{{ nzDatetime }}</ng-container>\n          </span>\n        </div>\n        <ng-content select=\"nz-comment-content\"></ng-content>\n        <ul class=\"ant-comment-actions\" *ngIf=\"actions?.length\">\n          <li *ngFor=\"let action of actions\">\n            <span><ng-template [nzCommentActionHost]=\"action.content\"></ng-template></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"ant-comment-nested\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: NzCommentActionHostDirective, selector: \"[nzCommentActionHost]\", inputs: [\"nzCommentActionHost\"], exportAs: [\"nzCommentActionHost\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-comment',\n                    exportAs: 'nzComment',\n                    template: `\n    <div class=\"ant-comment-inner\">\n      <div class=\"ant-comment-avatar\">\n        <ng-content select=\"nz-avatar[nz-comment-avatar]\"></ng-content>\n      </div>\n      <div class=\"ant-comment-content\">\n        <div class=\"ant-comment-content-author\">\n          <span *ngIf=\"nzAuthor\" class=\"ant-comment-content-author-name\">\n            <ng-container *nzStringTemplateOutlet=\"nzAuthor\">{{ nzAuthor }}</ng-container>\n          </span>\n          <span *ngIf=\"nzDatetime\" class=\"ant-comment-content-author-time\">\n            <ng-container *nzStringTemplateOutlet=\"nzDatetime\">{{ nzDatetime }}</ng-container>\n          </span>\n        </div>\n        <ng-content select=\"nz-comment-content\"></ng-content>\n        <ul class=\"ant-comment-actions\" *ngIf=\"actions?.length\">\n          <li *ngFor=\"let action of actions\">\n            <span><ng-template [nzCommentActionHost]=\"action.content\"></ng-template></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"ant-comment-nested\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        '[class.ant-comment]': `true`,\n                        '[class.ant-comment-rtl]': `dir === \"rtl\"`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzAuthor: [{\n                type: Input\n            }], nzDatetime: [{\n                type: Input\n            }], actions: [{\n                type: ContentChildren,\n                args: [NzCommentActionComponent]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_COMMENT_CELLS = [\n    NzCommentAvatarDirective,\n    NzCommentContentDirective,\n    NzCommentActionComponent,\n    NzCommentActionHostDirective\n];\nclass NzCommentModule {\n}\nNzCommentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzCommentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentModule, declarations: [NzCommentComponent, NzCommentAvatarDirective,\n        NzCommentContentDirective,\n        NzCommentActionComponent,\n        NzCommentActionHostDirective], imports: [BidiModule, CommonModule, NzOutletModule], exports: [NzCommentComponent, NzCommentAvatarDirective,\n        NzCommentContentDirective,\n        NzCommentActionComponent,\n        NzCommentActionHostDirective] });\nNzCommentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentModule, imports: [[BidiModule, CommonModule, NzOutletModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCommentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, NzOutletModule],\n                    exports: [NzCommentComponent, ...NZ_COMMENT_CELLS],\n                    declarations: [NzCommentComponent, ...NZ_COMMENT_CELLS]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCommentActionComponent, NzCommentActionHostDirective, NzCommentAvatarDirective, NzCommentComponent, NzCommentContentDirective, NzCommentModule };\n"]},"metadata":{},"sourceType":"module"}