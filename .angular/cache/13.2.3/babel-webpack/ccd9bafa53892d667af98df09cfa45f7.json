{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/wave';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nconst _c0 = [\"switchElement\"];\n\nfunction NzSwitchComponent_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSwitchComponent_ng_container_5_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.nzUnCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSwitchComponent_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r4.nzUnCheckedChildren);\n  }\n}\n\nconst NZ_CONFIG_MODULE_NAME = 'switch';\nlet NzSwitchComponent = /*#__PURE__*/(() => {\n  class NzSwitchComponent {\n    constructor(nzConfigService, host, ngZone, cdr, focusMonitor, directionality) {\n      this.nzConfigService = nzConfigService;\n      this.host = host;\n      this.ngZone = ngZone;\n      this.cdr = cdr;\n      this.focusMonitor = focusMonitor;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.isChecked = false;\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n\n      this.nzLoading = false;\n      this.nzDisabled = false;\n      this.nzControl = false;\n      this.nzCheckedChildren = null;\n      this.nzUnCheckedChildren = null;\n      this.nzSize = 'default';\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n    }\n\n    updateValue(value) {\n      if (this.isChecked !== value) {\n        this.isChecked = value;\n        this.onChange(this.isChecked);\n      }\n    }\n\n    focus() {\n      this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n    }\n\n    blur() {\n      this.switchElement.nativeElement.blur();\n    }\n\n    ngOnInit() {\n      this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.ngZone.runOutsideAngular(() => {\n        fromEvent(this.host.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          event.preventDefault();\n\n          if (this.nzControl || this.nzDisabled || this.nzLoading) {\n            return;\n          }\n\n          this.ngZone.run(() => {\n            this.updateValue(!this.isChecked);\n            this.cdr.markForCheck();\n          });\n        });\n        fromEvent(this.switchElement.nativeElement, 'keydown').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          if (this.nzControl || this.nzDisabled || this.nzLoading) {\n            return;\n          }\n\n          const {\n            keyCode\n          } = event;\n\n          if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== SPACE && keyCode !== ENTER) {\n            return;\n          }\n\n          event.preventDefault();\n          this.ngZone.run(() => {\n            if (keyCode === LEFT_ARROW) {\n              this.updateValue(false);\n            } else if (keyCode === RIGHT_ARROW) {\n              this.updateValue(true);\n            } else if (keyCode === SPACE || keyCode === ENTER) {\n              this.updateValue(!this.isChecked);\n            }\n\n            this.cdr.markForCheck();\n          });\n        });\n      });\n    }\n\n    ngAfterViewInit() {\n      this.focusMonitor.monitor(this.switchElement.nativeElement, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          /** https://github.com/angular/angular/issues/17793 **/\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    writeValue(value) {\n      this.isChecked = value;\n      this.cdr.markForCheck();\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    setDisabledState(disabled) {\n      this.nzDisabled = disabled;\n      this.cdr.markForCheck();\n    }\n\n  }\n\n  NzSwitchComponent.ɵfac = function NzSwitchComponent_Factory(t) {\n    return new (t || NzSwitchComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n  };\n\n  NzSwitchComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzSwitchComponent,\n    selectors: [[\"nz-switch\"]],\n    viewQuery: function NzSwitchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switchElement = _t.first);\n      }\n    },\n    inputs: {\n      nzLoading: \"nzLoading\",\n      nzDisabled: \"nzDisabled\",\n      nzControl: \"nzControl\",\n      nzCheckedChildren: \"nzCheckedChildren\",\n      nzUnCheckedChildren: \"nzUnCheckedChildren\",\n      nzSize: \"nzSize\"\n    },\n    exportAs: [\"nzSwitch\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }])],\n    decls: 9,\n    vars: 15,\n    consts: [[\"nz-wave\", \"\", \"type\", \"button\", 1, \"ant-switch\", 3, \"disabled\", \"nzWaveExtraNode\"], [\"switchElement\", \"\"], [1, \"ant-switch-handle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", \"class\", \"ant-switch-loading-icon\", 4, \"ngIf\"], [1, \"ant-switch-inner\"], [4, \"ngIf\", \"ngIfElse\"], [\"uncheckTemplate\", \"\"], [1, \"ant-click-animating-node\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-switch-loading-icon\"], [4, \"nzStringTemplateOutlet\"]],\n    template: function NzSwitchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵelementStart(2, \"span\", 2);\n        i0.ɵɵtemplate(3, NzSwitchComponent_i_3_Template, 1, 0, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵtemplate(5, NzSwitchComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n        i0.ɵɵtemplate(6, NzSwitchComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(7);\n\n        i0.ɵɵclassProp(\"ant-switch-checked\", ctx.isChecked)(\"ant-switch-loading\", ctx.nzLoading)(\"ant-switch-disabled\", ctx.nzDisabled)(\"ant-switch-small\", ctx.nzSize === \"small\")(\"ant-switch-rtl\", ctx.dir === \"rtl\");\n        i0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"nzWaveExtraNode\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isChecked)(\"ngIfElse\", _r3);\n      }\n    },\n    directives: [i4.NzWaveDirective, i5.NgIf, i6.NzIconDirective, i7.NzStringTemplateOutletDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzLoading\", void 0);\n\n  __decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzDisabled\", void 0);\n\n  __decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzControl\", void 0);\n\n  __decorate([WithConfig()], NzSwitchComponent.prototype, \"nzSize\", void 0);\n\n  return NzSwitchComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzSwitchModule = /*#__PURE__*/(() => {\n  class NzSwitchModule {}\n\n  NzSwitchModule.ɵfac = function NzSwitchModule_Factory(t) {\n    return new (t || NzSwitchModule)();\n  };\n\n  NzSwitchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzSwitchModule\n  });\n  NzSwitchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]]\n  });\n  return NzSwitchModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSwitchComponent, NzSwitchModule }; //# sourceMappingURL=ng-zorro-antd-switch.mjs.map","map":null,"metadata":{},"sourceType":"module"}