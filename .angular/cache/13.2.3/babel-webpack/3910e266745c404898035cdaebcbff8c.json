{"ast":null,"code":"import * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$4 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4$2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Directive, Injectable, Optional, ViewChildren, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i11 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i6 from 'ng-zorro-antd/button';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport * as i1$3 from 'ng-zorro-antd/cdk/resize-observer';\nimport { NzResizeObserverModule } from 'ng-zorro-antd/cdk/resize-observer';\nimport * as i1$2 from 'ng-zorro-antd/checkbox';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport * as i1$5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i3 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownDirective, NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i4$1 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i1$1 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i9 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i10 from 'ng-zorro-antd/menu';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport * as i10$1 from 'ng-zorro-antd/pagination';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport * as i4 from 'ng-zorro-antd/radio';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport * as i6$1 from 'ng-zorro-antd/spin';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { __decorate } from 'tslib';\nimport { fromEvent, Subject, ReplaySubject, BehaviorSubject, combineLatest, merge, EMPTY, of } from 'rxjs';\nimport { takeUntil, map, startWith, switchMap, debounceTime, delay, filter, distinctUntilChanged, skip, mergeMap } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i2 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean, arraysEqual, isNil, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/core/transition-patch';\nimport * as i12 from 'ng-zorro-antd/core/wave';\nconst _c0 = [\"*\"];\n\nfunction NzTableFilterComponent_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableFilterComponent_ng_container_2_li_7_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTableFilterComponent_ng_container_2_li_7_label_1_Template_label_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const f_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.check(f_r4);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", f_r4.checked);\n  }\n}\n\nfunction NzTableFilterComponent_ng_container_2_li_7_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTableFilterComponent_ng_container_2_li_7_label_2_Template_label_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const f_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.check(f_r4);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", f_r4.checked);\n  }\n}\n\nfunction NzTableFilterComponent_ng_container_2_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_li_7_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const f_r4 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.check(f_r4);\n    });\n    i0.ɵɵtemplate(1, NzTableFilterComponent_ng_container_2_li_7_label_1_Template, 1, 1, \"label\", 13);\n    i0.ɵɵtemplate(2, NzTableFilterComponent_ng_container_2_li_7_label_2_Template, 1, 1, \"label\", 14);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzSelected\", f_r4.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.filterMultiple);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.filterMultiple);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(f_r4.text);\n  }\n}\n\nfunction NzTableFilterComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"nz-filter-trigger\", 3);\n    i0.ɵɵlistener(\"nzVisibleChange\", function NzTableFilterComponent_ng_container_2_Template_nz_filter_trigger_nzVisibleChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onVisibleChange($event);\n    });\n    i0.ɵɵelement(2, \"i\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 5);\n    i0.ɵɵelementStart(5, \"div\", 6);\n    i0.ɵɵelementStart(6, \"ul\", 7);\n    i0.ɵɵtemplate(7, NzTableFilterComponent_ng_container_2_li_7_Template, 5, 4, \"li\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9);\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.reset();\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.confirm();\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(4);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzVisible\", ctx_r1.isVisible)(\"nzActive\", ctx_r1.isChecked)(\"nzDropdownMenu\", _r2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfParsedFilter)(\"ngForTrackBy\", ctx_r1.trackByValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.isChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.locale.filterReset, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.locale.filterConfirm);\n  }\n}\n\nfunction NzTableSelectionComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTableSelectionComponent_label_0_Template_label_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onCheckedChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-table-selection-select-all-custom\", ctx_r0.showRowSelection);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.checked)(\"nzDisabled\", ctx_r0.disabled)(\"nzIndeterminate\", ctx_r0.indeterminate);\n  }\n}\n\nfunction NzTableSelectionComponent_div_1_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵlistener(\"click\", function NzTableSelectionComponent_div_1_li_6_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const selection_r6 = restoredCtx.$implicit;\n      return selection_r6.onSelect();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const selection_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", selection_r6.text, \" \");\n  }\n}\n\nfunction NzTableSelectionComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"span\", 4);\n    i0.ɵɵelement(2, \"i\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 6);\n    i0.ɵɵelementStart(5, \"ul\", 7);\n    i0.ɵɵtemplate(6, NzTableSelectionComponent_div_1_li_6_Template, 2, 1, \"li\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(4);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzDropdownMenu\", _r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfSelections);\n  }\n}\n\nfunction NzTableSortersComponent_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableSortersComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.sortOrder === \"ascend\");\n  }\n}\n\nfunction NzTableSortersComponent_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r2.sortOrder === \"descend\");\n  }\n}\n\nconst _c1 = [\"nzChecked\", \"\"];\n\nfunction NzTdAddOnComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"nz-row-indent\", 2);\n    i0.ɵɵelementStart(2, \"button\", 3);\n    i0.ɵɵlistener(\"expandChange\", function NzTdAddOnComponent_ng_container_0_Template_button_expandChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onExpandChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"indentSize\", ctx_r0.nzIndentSize);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"expand\", ctx_r0.nzExpand)(\"spaceMode\", !ctx_r0.nzShowExpand);\n  }\n}\n\nfunction NzTdAddOnComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTdAddOnComponent_label_1_Template_label_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCheckedChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzDisabled\", ctx_r1.nzDisabled)(\"ngModel\", ctx_r1.nzChecked)(\"nzIndeterminate\", ctx_r1.nzIndeterminate);\n  }\n}\n\nconst _c2 = [\"nzColumnKey\", \"\"];\n\nfunction NzThAddOnComponent_nz_table_filter_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-table-filter\", 5);\n    i0.ɵɵlistener(\"filterChange\", function NzThAddOnComponent_nz_table_filter_0_Template_nz_table_filter_filterChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onFilterValueChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"contentTemplate\", _r1)(\"extraTemplate\", _r3)(\"customFilter\", ctx_r0.nzCustomFilter)(\"filterMultiple\", ctx_r0.nzFilterMultiple)(\"listOfFilter\", ctx_r0.nzFilters);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NzThAddOnComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzThAddOnComponent_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    const _r7 = i0.ɵɵreference(8);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.nzShowSort ? _r5 : _r7);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵprojection(1, 1);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-sorters\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n\n    const _r7 = i0.ɵɵreference(8);\n\n    i0.ɵɵproperty(\"sortOrder\", ctx_r6.sortOrder)(\"sortDirections\", ctx_r6.sortDirections)(\"contentTemplate\", _r7);\n  }\n}\n\nfunction NzThAddOnComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\n\nconst _c3 = [[[\"\", \"nz-th-extra\", \"\"]], [[\"nz-filter-trigger\"]], \"*\"];\nconst _c4 = [\"[nz-th-extra]\", \"nz-filter-trigger\", \"*\"];\nconst _c5 = [\"nzSelections\", \"\"];\nconst _c6 = [\"nz-table-content\", \"\"];\n\nfunction NzTableContentComponent_col_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    const width_r3 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", width_r3)(\"min-width\", width_r3);\n  }\n}\n\nfunction NzTableContentComponent_thead_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableContentComponent_thead_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 3);\n    i0.ɵɵtemplate(1, NzTableContentComponent_thead_1_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.theadTemplate);\n  }\n}\n\nfunction NzTableContentComponent_ng_template_2_Template(rf, ctx) {}\n\nconst _c7 = [\"tdElement\"];\nconst _c8 = [\"nz-table-fixed-row\", \"\"];\n\nfunction NzTableFixedRowComponent_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzTableFixedRowComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵtemplate(2, NzTableFixedRowComponent_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(5);\n\n    i0.ɵɵstyleProp(\"width\", i0.ɵɵpipeBind1(1, 3, ctx_r1.hostWidth$), \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n  }\n}\n\nfunction NzTableFixedRowComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c9 = [\"nz-table-measure-row\", \"\"];\n\nfunction NzTrMeasureComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 1, 2);\n  }\n}\n\nfunction NzTbodyComponent_ng_container_0_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵlistener(\"listOfAutoWidth\", function NzTbodyComponent_ng_container_0_tr_1_Template_tr_listOfAutoWidth_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.onListOfAutoWidthChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const listOfMeasureColumn_r2 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"listOfMeasureColumn\", listOfMeasureColumn_r2);\n  }\n}\n\nfunction NzTbodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTbodyComponent_ng_container_0_tr_1_Template, 1, 1, \"tr\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const listOfMeasureColumn_r2 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isInsideTable && listOfMeasureColumn_r2.length);\n  }\n}\n\nfunction NzTbodyComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelement(1, \"nz-embed-empty\", 5);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"specificContent\", i0.ɵɵpipeBind1(2, 1, ctx_r1.noResult$));\n  }\n}\n\nconst _c10 = [\"tableHeaderElement\"];\nconst _c11 = [\"tableBodyElement\"];\n\nfunction NzTableInnerScrollComponent_ng_container_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7, 8);\n    i0.ɵɵelement(2, \"table\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r3.bodyStyleMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r3.scrollX)(\"listOfColWidth\", ctx_r3.listOfColWidth)(\"contentTemplate\", ctx_r3.contentTemplate);\n  }\n}\n\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_ng_template_1_Template(rf, ctx) {}\n\nconst _c12 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_ng_template_1_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.virtualTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c12, item_r8, i_r9));\n  }\n}\n\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 10, 8);\n    i0.ɵɵelementStart(2, \"table\", 11);\n    i0.ɵɵelementStart(3, \"tbody\");\n    i0.ɵɵtemplate(4, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_Template, 2, 5, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r4.data.length ? ctx_r4.scrollY : ctx_r4.noDateVirtualHeight);\n    i0.ɵɵproperty(\"itemSize\", ctx_r4.virtualItemSize)(\"maxBufferPx\", ctx_r4.virtualMaxBufferPx)(\"minBufferPx\", ctx_r4.virtualMinBufferPx);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r4.scrollX)(\"listOfColWidth\", ctx_r4.listOfColWidth);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r4.data)(\"cdkVirtualForTrackBy\", ctx_r4.virtualForTrackBy);\n  }\n}\n\nfunction NzTableInnerScrollComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2, 3);\n    i0.ɵɵelement(3, \"table\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NzTableInnerScrollComponent_ng_container_0_div_4_Template, 3, 4, \"div\", 5);\n    i0.ɵɵtemplate(5, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_Template, 5, 9, \"cdk-virtual-scroll-viewport\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.headerStyleMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r0.scrollX)(\"listOfColWidth\", ctx_r0.listOfColWidth)(\"theadTemplate\", ctx_r0.theadTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.virtualTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.virtualTemplate);\n  }\n}\n\nfunction NzTableInnerScrollComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 8);\n    i0.ɵɵelement(2, \"table\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.bodyStyleMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r1.scrollX)(\"listOfColWidth\", ctx_r1.listOfColWidth)(\"theadTemplate\", ctx_r1.theadTemplate)(\"contentTemplate\", ctx_r1.contentTemplate);\n  }\n}\n\nfunction NzTableTitleFooterComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nfunction NzTableTitleFooterComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.footer);\n  }\n}\n\nfunction NzTableComponent_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTableComponent_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r8 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\n\nfunction NzTableComponent_nz_table_title_footer_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-title-footer\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r2.nzTitle);\n  }\n}\n\nfunction NzTableComponent_nz_table_inner_scroll_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-inner-scroll\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n\n    const _r10 = i0.ɵɵreference(13);\n\n    const _r1 = i0.ɵɵreference(3);\n\n    i0.ɵɵproperty(\"data\", ctx_r3.data)(\"scrollX\", ctx_r3.scrollX)(\"scrollY\", ctx_r3.scrollY)(\"contentTemplate\", _r10)(\"listOfColWidth\", ctx_r3.listOfAutoColWidth)(\"theadTemplate\", ctx_r3.theadTemplate)(\"verticalScrollBarWidth\", ctx_r3.verticalScrollBarWidth)(\"virtualTemplate\", ctx_r3.nzVirtualScrollDirective ? ctx_r3.nzVirtualScrollDirective.templateRef : null)(\"virtualItemSize\", ctx_r3.nzVirtualItemSize)(\"virtualMaxBufferPx\", ctx_r3.nzVirtualMaxBufferPx)(\"virtualMinBufferPx\", ctx_r3.nzVirtualMinBufferPx)(\"tableMainElement\", _r1)(\"virtualForTrackBy\", ctx_r3.nzVirtualForTrackBy);\n  }\n}\n\nfunction NzTableComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-inner-default\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n\n    const _r10 = i0.ɵɵreference(13);\n\n    i0.ɵɵproperty(\"tableLayout\", ctx_r5.nzTableLayout)(\"listOfColWidth\", ctx_r5.listOfManualColWidth)(\"theadTemplate\", ctx_r5.theadTemplate)(\"contentTemplate\", _r10);\n  }\n}\n\nfunction NzTableComponent_nz_table_title_footer_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-title-footer\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"footer\", ctx_r6.nzFooter);\n  }\n}\n\nfunction NzTableComponent_ng_container_9_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTableComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTableComponent_ng_container_9_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r8 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\n\nfunction NzTableComponent_ng_template_10_nz_pagination_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-pagination\", 16);\n    i0.ɵɵlistener(\"nzPageSizeChange\", function NzTableComponent_ng_template_10_nz_pagination_0_Template_nz_pagination_nzPageSizeChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onPageSizeChange($event);\n    })(\"nzPageIndexChange\", function NzTableComponent_ng_template_10_nz_pagination_0_Template_nz_pagination_nzPageIndexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.onPageIndexChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r14.showPagination)(\"nzShowSizeChanger\", ctx_r14.nzShowSizeChanger)(\"nzPageSizeOptions\", ctx_r14.nzPageSizeOptions)(\"nzItemRender\", ctx_r14.nzItemRender)(\"nzShowQuickJumper\", ctx_r14.nzShowQuickJumper)(\"nzHideOnSinglePage\", ctx_r14.nzHideOnSinglePage)(\"nzShowTotal\", ctx_r14.nzShowTotal)(\"nzSize\", ctx_r14.nzPaginationType === \"small\" ? \"small\" : ctx_r14.nzSize === \"default\" ? \"default\" : \"small\")(\"nzPageSize\", ctx_r14.nzPageSize)(\"nzTotal\", ctx_r14.nzTotal)(\"nzSimple\", ctx_r14.nzSimple)(\"nzPageIndex\", ctx_r14.nzPageIndex);\n  }\n}\n\nfunction NzTableComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTableComponent_ng_template_10_nz_pagination_0_Template, 1, 12, \"nz-pagination\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.nzShowPagination && ctx_r9.data.length);\n  }\n}\n\nfunction NzTableComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c13 = [\"contentTemplate\"];\n\nfunction NzTheadComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nfunction NzTheadComponent_ng_container_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTheadComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTheadComponent_ng_container_2_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nconst NZ_CONFIG_MODULE_NAME$1 = 'filterTrigger';\n\nclass NzFilterTriggerComponent {\n  constructor(nzConfigService, ngZone, cdr, destroy$) {\n    this.nzConfigService = nzConfigService;\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    this.destroy$ = destroy$;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME$1;\n    this.nzActive = false;\n    this.nzVisible = false;\n    this.nzBackdrop = false;\n    this.nzVisibleChange = new EventEmitter();\n  }\n\n  onVisibleChange(visible) {\n    this.nzVisible = visible;\n    this.nzVisibleChange.next(visible);\n  }\n\n  hide() {\n    this.nzVisible = false;\n    this.cdr.markForCheck();\n  }\n\n  show() {\n    this.nzVisible = true;\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.nzDropdown.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        event.stopPropagation();\n      });\n    });\n  }\n\n}\n\nNzFilterTriggerComponent.ɵfac = function NzFilterTriggerComponent_Factory(t) {\n  return new (t || NzFilterTriggerComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NzDestroyService));\n};\n\nNzFilterTriggerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzFilterTriggerComponent,\n  selectors: [[\"nz-filter-trigger\"]],\n  viewQuery: function NzFilterTriggerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NzDropDownDirective, 7, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzDropdown = _t.first);\n    }\n  },\n  inputs: {\n    nzActive: \"nzActive\",\n    nzDropdownMenu: \"nzDropdownMenu\",\n    nzVisible: \"nzVisible\",\n    nzBackdrop: \"nzBackdrop\"\n  },\n  outputs: {\n    nzVisibleChange: \"nzVisibleChange\"\n  },\n  exportAs: [\"nzFilterTrigger\"],\n  features: [i0.ɵɵProvidersFeature([NzDestroyService])],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 8,\n  consts: [[\"nz-dropdown\", \"\", \"nzTrigger\", \"click\", \"nzPlacement\", \"bottomRight\", 1, \"ant-table-filter-trigger\", 3, \"nzBackdrop\", \"nzClickHide\", \"nzDropdownMenu\", \"nzVisible\", \"nzVisibleChange\"]],\n  template: function NzFilterTriggerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"nzVisibleChange\", function NzFilterTriggerComponent_Template_span_nzVisibleChange_0_listener($event) {\n        return ctx.onVisibleChange($event);\n      });\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.nzActive)(\"ant-table-filter-open\", ctx.nzVisible);\n      i0.ɵɵproperty(\"nzBackdrop\", ctx.nzBackdrop)(\"nzClickHide\", false)(\"nzDropdownMenu\", ctx.nzDropdownMenu)(\"nzVisible\", ctx.nzVisible);\n    }\n  },\n  directives: [i3.NzDropDownDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([WithConfig(), InputBoolean()], NzFilterTriggerComponent.prototype, \"nzBackdrop\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzFilterTriggerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-filter-trigger',\n      exportAs: `nzFilterTrigger`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzBackdrop]=\"nzBackdrop\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `,\n      providers: [NzDestroyService]\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.NzDestroyService\n    }];\n  }, {\n    nzActive: [{\n      type: Input\n    }],\n    nzDropdownMenu: [{\n      type: Input\n    }],\n    nzVisible: [{\n      type: Input\n    }],\n    nzBackdrop: [{\n      type: Input\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }],\n    nzDropdown: [{\n      type: ViewChild,\n      args: [NzDropDownDirective, {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableFilterComponent {\n  constructor(cdr, i18n) {\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.contentTemplate = null;\n    this.customFilter = false;\n    this.extraTemplate = null;\n    this.filterMultiple = true;\n    this.listOfFilter = [];\n    this.filterChange = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.isChecked = false;\n    this.isVisible = false;\n    this.listOfParsedFilter = [];\n    this.listOfChecked = [];\n  }\n\n  trackByValue(_, item) {\n    return item.value;\n  }\n\n  check(filter) {\n    if (this.filterMultiple) {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        if (item === filter) {\n          return Object.assign(Object.assign({}, item), {\n            checked: !filter.checked\n          });\n        } else {\n          return item;\n        }\n      });\n      filter.checked = !filter.checked;\n    } else {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => Object.assign(Object.assign({}, item), {\n        checked: item === filter\n      }));\n    }\n\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n  }\n\n  confirm() {\n    this.isVisible = false;\n    this.emitFilterData();\n  }\n\n  reset() {\n    this.isVisible = false;\n    this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    this.emitFilterData();\n  }\n\n  onVisibleChange(value) {\n    this.isVisible = value;\n\n    if (!value) {\n      this.emitFilterData();\n    } else {\n      this.listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n    }\n  }\n\n  emitFilterData() {\n    const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n\n    if (!arraysEqual(this.listOfChecked, listOfChecked)) {\n      if (this.filterMultiple) {\n        this.filterChange.emit(listOfChecked);\n      } else {\n        this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n      }\n    }\n  }\n\n  parseListOfFilter(listOfFilter, reset) {\n    return listOfFilter.map(item => {\n      const checked = reset ? false : !!item.byDefault;\n      return {\n        text: item.text,\n        value: item.value,\n        checked\n      };\n    });\n  }\n\n  getCheckedStatus(listOfParsedFilter) {\n    return listOfParsedFilter.some(item => item.checked);\n  }\n\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Table');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      listOfFilter\n    } = changes;\n\n    if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTableFilterComponent.ɵfac = function NzTableFilterComponent_Factory(t) {\n  return new (t || NzTableFilterComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.NzI18nService));\n};\n\nNzTableFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableFilterComponent,\n  selectors: [[\"nz-table-filter\"]],\n  hostAttrs: [1, \"ant-table-filter-column\"],\n  inputs: {\n    contentTemplate: \"contentTemplate\",\n    customFilter: \"customFilter\",\n    extraTemplate: \"extraTemplate\",\n    filterMultiple: \"filterMultiple\",\n    listOfFilter: \"listOfFilter\"\n  },\n  outputs: {\n    filterChange: \"filterChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"ant-table-column-title\"], [3, \"ngTemplateOutlet\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"nzVisible\", \"nzActive\", \"nzDropdownMenu\", \"nzVisibleChange\"], [\"nz-icon\", \"\", \"nzType\", \"filter\", \"nzTheme\", \"fill\"], [\"filterMenu\", \"nzDropdownMenu\"], [1, \"ant-table-filter-dropdown\"], [\"nz-menu\", \"\"], [\"nz-menu-item\", \"\", 3, \"nzSelected\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-table-filter-dropdown-btns\"], [\"nz-button\", \"\", \"nzType\", \"link\", \"nzSize\", \"small\", 3, \"disabled\", \"click\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"nzSize\", \"small\", 3, \"click\"], [\"nz-menu-item\", \"\", 3, \"nzSelected\", \"click\"], [\"nz-radio\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nz-radio\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function NzTableFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtemplate(1, NzTableFilterComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, NzTableFilterComponent_ng_container_2_Template, 13, 8, \"ng-container\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.customFilter)(\"ngIfElse\", ctx.extraTemplate);\n    }\n  },\n  directives: [NzFilterTriggerComponent, i3.NzDropdownMenuComponent, i4.NzRadioComponent, i1$2.NzCheckboxComponent, i6.NzButtonComponent, i3$1.NgTemplateOutlet, i3$1.NgIf, i8.ɵNzTransitionPatchDirective, i9.NzIconDirective, i10.NzMenuDirective, i3$1.NgForOf, i10.NzMenuItemDirective, i11.NgControlStatus, i11.NgModel, i12.NzWaveDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-filter',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span class=\"ant-table-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li\n              nz-menu-item\n              [nzSelected]=\"f.checked\"\n              *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\"\n              (click)=\"check(f)\"\n            >\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">\n              {{ locale.filterReset }}\n            </button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `,\n      host: {\n        class: 'ant-table-filter-column'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.NzI18nService\n    }];\n  }, {\n    contentTemplate: [{\n      type: Input\n    }],\n    customFilter: [{\n      type: Input\n    }],\n    extraTemplate: [{\n      type: Input\n    }],\n    filterMultiple: [{\n      type: Input\n    }],\n    listOfFilter: [{\n      type: Input\n    }],\n    filterChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzRowExpandButtonDirective {\n  constructor() {\n    this.expand = false;\n    this.spaceMode = false;\n    this.expandChange = new EventEmitter();\n  }\n\n  onHostClick() {\n    if (!this.spaceMode) {\n      this.expand = !this.expand;\n      this.expandChange.next(this.expand);\n    }\n  }\n\n}\n\nNzRowExpandButtonDirective.ɵfac = function NzRowExpandButtonDirective_Factory(t) {\n  return new (t || NzRowExpandButtonDirective)();\n};\n\nNzRowExpandButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzRowExpandButtonDirective,\n  selectors: [[\"button\", \"nz-row-expand-button\", \"\"]],\n  hostAttrs: [1, \"ant-table-row-expand-icon\"],\n  hostVars: 7,\n  hostBindings: function NzRowExpandButtonDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzRowExpandButtonDirective_click_HostBindingHandler() {\n        return ctx.onHostClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"type\", \"button\");\n      i0.ɵɵclassProp(\"ant-table-row-expand-icon-expanded\", !ctx.spaceMode && ctx.expand === true)(\"ant-table-row-expand-icon-collapsed\", !ctx.spaceMode && ctx.expand === false)(\"ant-table-row-expand-icon-spaced\", ctx.spaceMode);\n    }\n  },\n  inputs: {\n    expand: \"expand\",\n    spaceMode: \"spaceMode\"\n  },\n  outputs: {\n    expandChange: \"expandChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzRowExpandButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'button[nz-row-expand-button]',\n      host: {\n        class: 'ant-table-row-expand-icon',\n        '[type]': `'button'`,\n        '[class.ant-table-row-expand-icon-expanded]': `!spaceMode && expand === true`,\n        '[class.ant-table-row-expand-icon-collapsed]': `!spaceMode && expand === false`,\n        '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n        '(click)': 'onHostClick()'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    expand: [{\n      type: Input\n    }],\n    spaceMode: [{\n      type: Input\n    }],\n    expandChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzRowIndentDirective {\n  constructor() {\n    this.indentSize = 0;\n  }\n\n}\n\nNzRowIndentDirective.ɵfac = function NzRowIndentDirective_Factory(t) {\n  return new (t || NzRowIndentDirective)();\n};\n\nNzRowIndentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzRowIndentDirective,\n  selectors: [[\"nz-row-indent\"]],\n  hostAttrs: [1, \"ant-table-row-indent\"],\n  hostVars: 2,\n  hostBindings: function NzRowIndentDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"padding-left\", ctx.indentSize, \"px\");\n    }\n  },\n  inputs: {\n    indentSize: \"indentSize\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzRowIndentDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-row-indent',\n      host: {\n        class: 'ant-table-row-indent',\n        '[style.padding-left.px]': 'indentSize'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    indentSize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableSelectionComponent {\n  constructor() {\n    this.listOfSelections = [];\n    this.checked = false;\n    this.disabled = false;\n    this.indeterminate = false;\n    this.showCheckbox = false;\n    this.showRowSelection = false;\n    this.checkedChange = new EventEmitter();\n  }\n\n  onCheckedChange(checked) {\n    this.checked = checked;\n    this.checkedChange.emit(checked);\n  }\n\n}\n\nNzTableSelectionComponent.ɵfac = function NzTableSelectionComponent_Factory(t) {\n  return new (t || NzTableSelectionComponent)();\n};\n\nNzTableSelectionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableSelectionComponent,\n  selectors: [[\"nz-table-selection\"]],\n  hostAttrs: [1, \"ant-table-selection\"],\n  inputs: {\n    listOfSelections: \"listOfSelections\",\n    checked: \"checked\",\n    disabled: \"disabled\",\n    indeterminate: \"indeterminate\",\n    showCheckbox: \"showCheckbox\",\n    showRowSelection: \"showRowSelection\"\n  },\n  outputs: {\n    checkedChange: \"checkedChange\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"nz-checkbox\", \"\", 3, \"ant-table-selection-select-all-custom\", \"ngModel\", \"nzDisabled\", \"nzIndeterminate\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"ant-table-selection-extra\", 4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"nzDisabled\", \"nzIndeterminate\", \"ngModelChange\"], [1, \"ant-table-selection-extra\"], [\"nz-dropdown\", \"\", \"nzPlacement\", \"bottomLeft\", 1, \"ant-table-selection-down\", 3, \"nzDropdownMenu\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [\"selectionMenu\", \"nzDropdownMenu\"], [\"nz-menu\", \"\", 1, \"ant-table-selection-menu\"], [\"nz-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-menu-item\", \"\", 3, \"click\"]],\n  template: function NzTableSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTableSelectionComponent_label_0_Template, 1, 5, \"label\", 0);\n      i0.ɵɵtemplate(1, NzTableSelectionComponent_div_1_Template, 7, 2, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.showCheckbox);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showRowSelection);\n    }\n  },\n  directives: [i1$2.NzCheckboxComponent, i3.NzDropdownMenuComponent, i3$1.NgIf, i11.NgControlStatus, i11.NgModel, i3.NzDropDownDirective, i8.ɵNzTransitionPatchDirective, i9.NzIconDirective, i10.NzMenuDirective, i3$1.NgForOf, i10.NzMenuItemDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableSelectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-selection',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `,\n      host: {\n        class: 'ant-table-selection'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    listOfSelections: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input\n    }],\n    showCheckbox: [{\n      type: Input\n    }],\n    showRowSelection: [{\n      type: Input\n    }],\n    checkedChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableSortersComponent {\n  constructor() {\n    this.sortDirections = ['ascend', 'descend', null];\n    this.sortOrder = null;\n    this.contentTemplate = null;\n    this.isUp = false;\n    this.isDown = false;\n  }\n\n  ngOnChanges(changes) {\n    const {\n      sortDirections\n    } = changes;\n\n    if (sortDirections) {\n      this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n      this.isDown = this.sortDirections.indexOf('descend') !== -1;\n    }\n  }\n\n}\n\nNzTableSortersComponent.ɵfac = function NzTableSortersComponent_Factory(t) {\n  return new (t || NzTableSortersComponent)();\n};\n\nNzTableSortersComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableSortersComponent,\n  selectors: [[\"nz-table-sorters\"]],\n  hostAttrs: [1, \"ant-table-column-sorters\"],\n  inputs: {\n    sortDirections: \"sortDirections\",\n    sortOrder: \"sortOrder\",\n    contentTemplate: \"contentTemplate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 5,\n  consts: [[1, \"ant-table-column-title\"], [3, \"ngTemplateOutlet\"], [1, \"ant-table-column-sorter\"], [1, \"ant-table-column-sorter-inner\"], [\"nz-icon\", \"\", \"nzType\", \"caret-up\", \"class\", \"ant-table-column-sorter-up\", 3, \"active\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\", \"class\", \"ant-table-column-sorter-down\", 3, \"active\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"caret-up\", 1, \"ant-table-column-sorter-up\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\", 1, \"ant-table-column-sorter-down\"]],\n  template: function NzTableSortersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtemplate(1, NzTableSortersComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵtemplate(4, NzTableSortersComponent_i_4_Template, 1, 2, \"i\", 4);\n      i0.ɵɵtemplate(5, NzTableSortersComponent_i_5_Template, 1, 2, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"ant-table-column-sorter-full\", ctx.isDown && ctx.isUp);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUp);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDown);\n    }\n  },\n  directives: [i3$1.NgTemplateOutlet, i3$1.NgIf, i8.ɵNzTransitionPatchDirective, i9.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableSortersComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-sorters',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span class=\"ant-table-column-title\"><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i\n          nz-icon\n          nzType=\"caret-up\"\n          *ngIf=\"isUp\"\n          class=\"ant-table-column-sorter-up\"\n          [class.active]=\"sortOrder === 'ascend'\"\n        ></i>\n        <i\n          nz-icon\n          nzType=\"caret-down\"\n          *ngIf=\"isDown\"\n          class=\"ant-table-column-sorter-down\"\n          [class.active]=\"sortOrder === 'descend'\"\n        ></i>\n      </span>\n    </span>\n  `,\n      host: {\n        class: 'ant-table-column-sorters'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    sortDirections: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzCellFixedDirective {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nzRight = false;\n    this.nzLeft = false;\n    this.colspan = null;\n    this.colSpan = null;\n    this.changes$ = new Subject();\n    this.isAutoLeft = false;\n    this.isAutoRight = false;\n    this.isFixedLeft = false;\n    this.isFixedRight = false;\n    this.isFixed = false;\n  }\n\n  setAutoLeftWidth(autoLeft) {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n  }\n\n  setAutoRightWidth(autoRight) {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n  }\n\n  setIsFirstRight(isFirstRight) {\n    this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n  }\n\n  setIsLastLeft(isLastLeft) {\n    this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n  }\n\n  setFixClass(flag, className) {\n    // the setFixClass function may call many times, so remove it first.\n    this.renderer.removeClass(this.elementRef.nativeElement, className);\n\n    if (flag) {\n      this.renderer.addClass(this.elementRef.nativeElement, className);\n    }\n  }\n\n  ngOnChanges() {\n    this.setIsFirstRight(false);\n    this.setIsLastLeft(false);\n    this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n    this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n    this.isFixedLeft = this.nzLeft !== false;\n    this.isFixedRight = this.nzRight !== false;\n    this.isFixed = this.isFixedLeft || this.isFixedRight;\n\n    const validatePx = value => {\n      if (typeof value === 'string' && value !== '') {\n        return value;\n      } else {\n        return null;\n      }\n    };\n\n    this.setAutoLeftWidth(validatePx(this.nzLeft));\n    this.setAutoRightWidth(validatePx(this.nzRight));\n    this.changes$.next();\n  }\n\n}\n\nNzCellFixedDirective.ɵfac = function NzCellFixedDirective_Factory(t) {\n  return new (t || NzCellFixedDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzCellFixedDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCellFixedDirective,\n  selectors: [[\"td\", \"nzRight\", \"\"], [\"th\", \"nzRight\", \"\"], [\"td\", \"nzLeft\", \"\"], [\"th\", \"nzLeft\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzCellFixedDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"position\", ctx.isFixed ? \"sticky\" : null);\n      i0.ɵɵclassProp(\"ant-table-cell-fix-right\", ctx.isFixedRight)(\"ant-table-cell-fix-left\", ctx.isFixedLeft);\n    }\n  },\n  inputs: {\n    nzRight: \"nzRight\",\n    nzLeft: \"nzLeft\",\n    colspan: \"colspan\",\n    colSpan: \"colSpan\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCellFixedDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n      host: {\n        '[class.ant-table-cell-fix-right]': `isFixedRight`,\n        '[class.ant-table-cell-fix-left]': `isFixedLeft`,\n        '[style.position]': `isFixed? 'sticky' : null`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzRight: [{\n      type: Input\n    }],\n    nzLeft: [{\n      type: Input\n    }],\n    colspan: [{\n      type: Input\n    }],\n    colSpan: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableStyleService {\n  constructor() {\n    this.theadTemplate$ = new ReplaySubject(1);\n    this.hasFixLeft$ = new ReplaySubject(1);\n    this.hasFixRight$ = new ReplaySubject(1);\n    this.hostWidth$ = new ReplaySubject(1);\n    this.columnCount$ = new ReplaySubject(1);\n    this.showEmpty$ = new ReplaySubject(1);\n    this.noResult$ = new ReplaySubject(1);\n    this.listOfThWidthConfigPx$ = new BehaviorSubject([]);\n    this.tableWidthConfigPx$ = new BehaviorSubject([]);\n    this.manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(map(([widthConfig, listOfWidth]) => widthConfig.length ? widthConfig : listOfWidth));\n    this.listOfAutoWidthPx$ = new ReplaySubject(1);\n    this.listOfListOfThWidthPx$ = merge(\n    /** init with manual width **/\n    this.manualWidthConfigPx$, combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(map(([autoWidth, manualWidth]) => {\n      /** use autoWidth until column length match **/\n      if (autoWidth.length === manualWidth.length) {\n        return autoWidth.map((width, index) => {\n          if (width === '0px') {\n            return manualWidth[index] || null;\n          } else {\n            return manualWidth[index] || width;\n          }\n        });\n      } else {\n        return manualWidth;\n      }\n    })));\n    this.listOfMeasureColumn$ = new ReplaySubject(1);\n    this.listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n    this.enableAutoMeasure$ = new ReplaySubject(1);\n  }\n\n  setTheadTemplate(template) {\n    this.theadTemplate$.next(template);\n  }\n\n  setHasFixLeft(hasFixLeft) {\n    this.hasFixLeft$.next(hasFixLeft);\n  }\n\n  setHasFixRight(hasFixRight) {\n    this.hasFixRight$.next(hasFixRight);\n  }\n\n  setTableWidthConfig(widthConfig) {\n    this.tableWidthConfigPx$.next(widthConfig);\n  }\n\n  setListOfTh(listOfTh) {\n    let columnCount = 0;\n    listOfTh.forEach(th => {\n      columnCount += th.colspan && +th.colspan || th.colSpan && +th.colSpan || 1;\n    });\n    const listOfThPx = listOfTh.map(item => item.nzWidth);\n    this.columnCount$.next(columnCount);\n    this.listOfThWidthConfigPx$.next(listOfThPx);\n  }\n\n  setListOfMeasureColumn(listOfTh) {\n    const listOfKeys = [];\n    listOfTh.forEach(th => {\n      const length = th.colspan && +th.colspan || th.colSpan && +th.colSpan || 1;\n\n      for (let i = 0; i < length; i++) {\n        listOfKeys.push(`measure_key_${i}`);\n      }\n    });\n    this.listOfMeasureColumn$.next(listOfKeys);\n  }\n\n  setListOfAutoWidth(listOfAutoWidth) {\n    this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n  }\n\n  setShowEmpty(showEmpty) {\n    this.showEmpty$.next(showEmpty);\n  }\n\n  setNoResult(noResult) {\n    this.noResult$.next(noResult);\n  }\n\n  setScroll(scrollX, scrollY) {\n    const enableAutoMeasure = !!(scrollX || scrollY);\n\n    if (!enableAutoMeasure) {\n      this.setListOfAutoWidth([]);\n    }\n\n    this.enableAutoMeasure$.next(enableAutoMeasure);\n  }\n\n}\n\nNzTableStyleService.ɵfac = function NzTableStyleService_Factory(t) {\n  return new (t || NzTableStyleService)();\n};\n\nNzTableStyleService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzTableStyleService,\n  factory: NzTableStyleService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableStyleService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableCellDirective {\n  constructor(nzTableStyleService) {\n    this.isInsideTable = false;\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n}\n\nNzTableCellDirective.ɵfac = function NzTableCellDirective_Factory(t) {\n  return new (t || NzTableCellDirective)(i0.ɵɵdirectiveInject(NzTableStyleService, 8));\n};\n\nNzTableCellDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTableCellDirective,\n  selectors: [[\"th\", 9, \"nz-disable-th\", 3, \"mat-cell\", \"\"], [\"td\", 9, \"nz-disable-td\", 3, \"mat-cell\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzTableCellDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-cell\", ctx.isInsideTable);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableCellDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n      host: {\n        '[class.ant-table-cell]': 'isInsideTable'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nclass NzTdAddOnComponent {\n  constructor() {\n    this.nzChecked = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzIndentSize = 0;\n    this.nzShowExpand = false;\n    this.nzShowCheckbox = false;\n    this.nzExpand = false;\n    this.nzCheckedChange = new EventEmitter();\n    this.nzExpandChange = new EventEmitter();\n    this.isNzShowExpandChanged = false;\n    this.isNzShowCheckboxChanged = false;\n  }\n\n  onCheckedChange(checked) {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  onExpandChange(expand) {\n    this.nzExpand = expand;\n    this.nzExpandChange.emit(expand);\n  }\n\n  ngOnChanges(changes) {\n    const isFirstChange = value => value && value.firstChange && value.currentValue !== undefined;\n\n    const {\n      nzExpand,\n      nzChecked,\n      nzShowExpand,\n      nzShowCheckbox\n    } = changes;\n\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n\n    if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n      this.nzShowExpand = true;\n    }\n\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n\n}\n\nNzTdAddOnComponent.ɵfac = function NzTdAddOnComponent_Factory(t) {\n  return new (t || NzTdAddOnComponent)();\n};\n\nNzTdAddOnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTdAddOnComponent,\n  selectors: [[\"td\", \"nzChecked\", \"\"], [\"td\", \"nzDisabled\", \"\"], [\"td\", \"nzIndeterminate\", \"\"], [\"td\", \"nzIndentSize\", \"\"], [\"td\", \"nzExpand\", \"\"], [\"td\", \"nzShowExpand\", \"\"], [\"td\", \"nzShowCheckbox\", \"\"]],\n  hostVars: 4,\n  hostBindings: function NzTdAddOnComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-cell-with-append\", ctx.nzShowExpand || ctx.nzIndentSize > 0)(\"ant-table-selection-column\", ctx.nzShowCheckbox);\n    }\n  },\n  inputs: {\n    nzChecked: \"nzChecked\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzIndentSize: \"nzIndentSize\",\n    nzShowExpand: \"nzShowExpand\",\n    nzShowCheckbox: \"nzShowCheckbox\",\n    nzExpand: \"nzExpand\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\",\n    nzExpandChange: \"nzExpandChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"nzDisabled\", \"ngModel\", \"nzIndeterminate\", \"ngModelChange\", 4, \"ngIf\"], [3, \"indentSize\"], [\"nz-row-expand-button\", \"\", 3, \"expand\", \"spaceMode\", \"expandChange\"], [\"nz-checkbox\", \"\", 3, \"nzDisabled\", \"ngModel\", \"nzIndeterminate\", \"ngModelChange\"]],\n  template: function NzTdAddOnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzTdAddOnComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzTdAddOnComponent_label_1_Template, 1, 3, \"label\", 1);\n      i0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzShowExpand || ctx.nzIndentSize > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzShowCheckbox);\n    }\n  },\n  directives: [i1$2.NzCheckboxComponent, i3$1.NgIf, NzRowIndentDirective, NzRowExpandButtonDirective, i11.NgControlStatus, i11.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzTdAddOnComponent.prototype, \"nzShowExpand\", void 0);\n\n__decorate([InputBoolean()], NzTdAddOnComponent.prototype, \"nzShowCheckbox\", void 0);\n\n__decorate([InputBoolean()], NzTdAddOnComponent.prototype, \"nzExpand\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTdAddOnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button\n        nz-row-expand-button\n        [expand]=\"nzExpand\"\n        (expandChange)=\"onExpandChange($event)\"\n        [spaceMode]=\"!nzShowExpand\"\n      ></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <ng-content></ng-content>\n  `,\n      host: {\n        '[class.ant-table-cell-with-append]': `nzShowExpand || nzIndentSize > 0`,\n        '[class.ant-table-selection-column]': `nzShowCheckbox`\n      }\n    }]\n  }], null, {\n    nzChecked: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzIndentSize: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowCheckbox: [{\n      type: Input\n    }],\n    nzExpand: [{\n      type: Input\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NzThAddOnComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.manualClickOrder$ = new Subject();\n    this.calcOperatorChange$ = new Subject();\n    this.nzFilterValue = null;\n    this.sortOrder = null;\n    this.sortDirections = ['ascend', 'descend', null];\n    this.sortOrderChange$ = new Subject();\n    this.destroy$ = new Subject();\n    this.isNzShowSortChanged = false;\n    this.isNzShowFilterChanged = false;\n    this.nzFilterMultiple = true;\n    this.nzSortOrder = null;\n    this.nzSortPriority = false;\n    this.nzSortDirections = ['ascend', 'descend', null];\n    this.nzFilters = [];\n    this.nzSortFn = null;\n    this.nzFilterFn = null;\n    this.nzShowSort = false;\n    this.nzShowFilter = false;\n    this.nzCustomFilter = false;\n    this.nzCheckedChange = new EventEmitter();\n    this.nzSortOrderChange = new EventEmitter();\n    this.nzFilterChange = new EventEmitter();\n  }\n\n  getNextSortDirection(sortDirections, current) {\n    const index = sortDirections.indexOf(current);\n\n    if (index === sortDirections.length - 1) {\n      return sortDirections[0];\n    } else {\n      return sortDirections[index + 1];\n    }\n  }\n\n  emitNextSortValue() {\n    if (this.nzShowSort) {\n      const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder);\n      this.setSortOrder(nextOrder);\n      this.manualClickOrder$.next(this);\n    }\n  }\n\n  setSortOrder(order) {\n    this.sortOrderChange$.next(order);\n  }\n\n  clearSortOrder() {\n    if (this.sortOrder !== null) {\n      this.setSortOrder(null);\n    }\n  }\n\n  onFilterValueChange(value) {\n    this.nzFilterChange.emit(value);\n    this.nzFilterValue = value;\n    this.updateCalcOperator();\n  }\n\n  updateCalcOperator() {\n    this.calcOperatorChange$.next();\n  }\n\n  ngOnInit() {\n    this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n      if (this.sortOrder !== order) {\n        this.sortOrder = order;\n        this.nzSortOrderChange.emit(order);\n      }\n\n      this.updateCalcOperator();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzSortDirections,\n      nzFilters,\n      nzSortOrder,\n      nzSortFn,\n      nzFilterFn,\n      nzSortPriority,\n      nzFilterMultiple,\n      nzShowSort,\n      nzShowFilter\n    } = changes;\n\n    if (nzSortDirections) {\n      if (this.nzSortDirections && this.nzSortDirections.length) {\n        this.sortDirections = this.nzSortDirections;\n      }\n    }\n\n    if (nzSortOrder) {\n      this.sortOrder = this.nzSortOrder;\n      this.setSortOrder(this.nzSortOrder);\n    }\n\n    if (nzShowSort) {\n      this.isNzShowSortChanged = true;\n    }\n\n    if (nzShowFilter) {\n      this.isNzShowFilterChanged = true;\n    }\n\n    const isFirstChange = value => value && value.firstChange && value.currentValue !== undefined;\n\n    if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n      this.nzShowSort = true;\n    }\n\n    if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n      this.nzShowFilter = true;\n    }\n\n    if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n      const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n      this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n    }\n\n    if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n      this.updateCalcOperator();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzThAddOnComponent.ɵfac = function NzThAddOnComponent_Factory(t) {\n  return new (t || NzThAddOnComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzThAddOnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzThAddOnComponent,\n  selectors: [[\"th\", \"nzColumnKey\", \"\"], [\"th\", \"nzSortFn\", \"\"], [\"th\", \"nzSortOrder\", \"\"], [\"th\", \"nzFilters\", \"\"], [\"th\", \"nzShowSort\", \"\"], [\"th\", \"nzShowFilter\", \"\"], [\"th\", \"nzCustomFilter\", \"\"]],\n  hostVars: 4,\n  hostBindings: function NzThAddOnComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzThAddOnComponent_click_HostBindingHandler() {\n        return ctx.emitNextSortValue();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-column-has-sorters\", ctx.nzShowSort)(\"ant-table-column-sort\", ctx.sortOrder === \"descend\" || ctx.sortOrder === \"ascend\");\n    }\n  },\n  inputs: {\n    nzColumnKey: \"nzColumnKey\",\n    nzFilterMultiple: \"nzFilterMultiple\",\n    nzSortOrder: \"nzSortOrder\",\n    nzSortPriority: \"nzSortPriority\",\n    nzSortDirections: \"nzSortDirections\",\n    nzFilters: \"nzFilters\",\n    nzSortFn: \"nzSortFn\",\n    nzFilterFn: \"nzFilterFn\",\n    nzShowSort: \"nzShowSort\",\n    nzShowFilter: \"nzShowFilter\",\n    nzCustomFilter: \"nzCustomFilter\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\",\n    nzSortOrderChange: \"nzSortOrderChange\",\n    nzFilterChange: \"nzFilterChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c2,\n  ngContentSelectors: _c4,\n  decls: 9,\n  vars: 2,\n  consts: [[3, \"contentTemplate\", \"extraTemplate\", \"customFilter\", \"filterMultiple\", \"listOfFilter\", \"filterChange\", 4, \"ngIf\", \"ngIfElse\"], [\"notFilterTemplate\", \"\"], [\"extraTemplate\", \"\"], [\"sortTemplate\", \"\"], [\"contentTemplate\", \"\"], [3, \"contentTemplate\", \"extraTemplate\", \"customFilter\", \"filterMultiple\", \"listOfFilter\", \"filterChange\"], [3, \"ngTemplateOutlet\"], [3, \"sortOrder\", \"sortDirections\", \"contentTemplate\"]],\n  template: function NzThAddOnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c3);\n      i0.ɵɵtemplate(0, NzThAddOnComponent_nz_table_filter_0_Template, 1, 5, \"nz-table-filter\", 0);\n      i0.ɵɵtemplate(1, NzThAddOnComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzThAddOnComponent_ng_template_3_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, NzThAddOnComponent_ng_template_5_Template, 1, 3, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(7, NzThAddOnComponent_ng_template_7_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.nzShowFilter || ctx.nzCustomFilter)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [NzTableFilterComponent, NzTableSortersComponent, i3$1.NgIf, i3$1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzThAddOnComponent.prototype, \"nzShowSort\", void 0);\n\n__decorate([InputBoolean()], NzThAddOnComponent.prototype, \"nzShowFilter\", void 0);\n\n__decorate([InputBoolean()], NzThAddOnComponent.prototype, \"nzCustomFilter\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzThAddOnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters\n        [sortOrder]=\"sortOrder\"\n        [sortDirections]=\"sortDirections\"\n        [contentTemplate]=\"contentTemplate\"\n      ></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n      host: {\n        '[class.ant-table-column-has-sorters]': 'nzShowSort',\n        '[class.ant-table-column-sort]': `sortOrder === 'descend' || sortOrder === 'ascend'`,\n        '(click)': 'emitNextSortValue()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    nzColumnKey: [{\n      type: Input\n    }],\n    nzFilterMultiple: [{\n      type: Input\n    }],\n    nzSortOrder: [{\n      type: Input\n    }],\n    nzSortPriority: [{\n      type: Input\n    }],\n    nzSortDirections: [{\n      type: Input\n    }],\n    nzFilters: [{\n      type: Input\n    }],\n    nzSortFn: [{\n      type: Input\n    }],\n    nzFilterFn: [{\n      type: Input\n    }],\n    nzShowSort: [{\n      type: Input\n    }],\n    nzShowFilter: [{\n      type: Input\n    }],\n    nzCustomFilter: [{\n      type: Input\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzSortOrderChange: [{\n      type: Output\n    }],\n    nzFilterChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzThMeasureDirective {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.changes$ = new Subject();\n    this.nzWidth = null;\n    this.colspan = null;\n    this.colSpan = null;\n    this.rowspan = null;\n    this.rowSpan = null;\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzWidth,\n      colspan,\n      rowspan,\n      colSpan,\n      rowSpan\n    } = changes;\n\n    if (colspan || colSpan) {\n      const col = this.colspan || this.colSpan;\n\n      if (!isNil(col)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n      }\n    }\n\n    if (rowspan || rowSpan) {\n      const row = this.rowspan || this.rowSpan;\n\n      if (!isNil(row)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n      }\n    }\n\n    if (nzWidth || colspan) {\n      this.changes$.next();\n    }\n  }\n\n}\n\nNzThMeasureDirective.ɵfac = function NzThMeasureDirective_Factory(t) {\n  return new (t || NzThMeasureDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzThMeasureDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzThMeasureDirective,\n  selectors: [[\"th\"]],\n  inputs: {\n    nzWidth: \"nzWidth\",\n    colspan: \"colspan\",\n    colSpan: \"colSpan\",\n    rowspan: \"rowspan\",\n    rowSpan: \"rowSpan\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzThMeasureDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzWidth: [{\n      type: Input\n    }],\n    colspan: [{\n      type: Input\n    }],\n    colSpan: [{\n      type: Input\n    }],\n    rowspan: [{\n      type: Input\n    }],\n    rowSpan: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzThSelectionComponent {\n  constructor() {\n    this.nzSelections = [];\n    this.nzChecked = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzShowCheckbox = false;\n    this.nzShowRowSelection = false;\n    this.nzCheckedChange = new EventEmitter();\n    this.isNzShowExpandChanged = false;\n    this.isNzShowCheckboxChanged = false;\n  }\n\n  onCheckedChange(checked) {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  ngOnChanges(changes) {\n    const isFirstChange = value => value && value.firstChange && value.currentValue !== undefined;\n\n    const {\n      nzChecked,\n      nzSelections,\n      nzShowExpand,\n      nzShowCheckbox\n    } = changes;\n\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n\n    if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n      this.nzShowRowSelection = true;\n    }\n\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n\n}\n\nNzThSelectionComponent.ɵfac = function NzThSelectionComponent_Factory(t) {\n  return new (t || NzThSelectionComponent)();\n};\n\nNzThSelectionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzThSelectionComponent,\n  selectors: [[\"th\", \"nzSelections\", \"\"], [\"th\", \"nzChecked\", \"\"], [\"th\", \"nzShowCheckbox\", \"\"], [\"th\", \"nzShowRowSelection\", \"\"]],\n  hostAttrs: [1, \"ant-table-selection-column\"],\n  inputs: {\n    nzSelections: \"nzSelections\",\n    nzChecked: \"nzChecked\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzShowCheckbox: \"nzShowCheckbox\",\n    nzShowRowSelection: \"nzShowRowSelection\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"checked\", \"disabled\", \"indeterminate\", \"listOfSelections\", \"showCheckbox\", \"showRowSelection\", \"checkedChange\"]],\n  template: function NzThSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"nz-table-selection\", 0);\n      i0.ɵɵlistener(\"checkedChange\", function NzThSelectionComponent_Template_nz_table_selection_checkedChange_0_listener($event) {\n        return ctx.onCheckedChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled)(\"indeterminate\", ctx.nzIndeterminate)(\"listOfSelections\", ctx.nzSelections)(\"showCheckbox\", ctx.nzShowCheckbox)(\"showRowSelection\", ctx.nzShowRowSelection);\n    }\n  },\n  directives: [NzTableSelectionComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzThSelectionComponent.prototype, \"nzShowCheckbox\", void 0);\n\n__decorate([InputBoolean()], NzThSelectionComponent.prototype, \"nzShowRowSelection\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzThSelectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `,\n      host: {\n        class: 'ant-table-selection-column'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzSelections: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzShowCheckbox: [{\n      type: Input\n    }],\n    nzShowRowSelection: [{\n      type: Input\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzCellAlignDirective {\n  constructor() {\n    this.nzAlign = null;\n  }\n\n}\n\nNzCellAlignDirective.ɵfac = function NzCellAlignDirective_Factory(t) {\n  return new (t || NzCellAlignDirective)();\n};\n\nNzCellAlignDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCellAlignDirective,\n  selectors: [[\"th\", \"nzAlign\", \"\"], [\"td\", \"nzAlign\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzCellAlignDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"text-align\", ctx.nzAlign);\n    }\n  },\n  inputs: {\n    nzAlign: \"nzAlign\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCellAlignDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[nzAlign],td[nzAlign]',\n      host: {\n        '[style.text-align]': 'nzAlign'\n      }\n    }]\n  }], null, {\n    nzAlign: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzCellEllipsisDirective {\n  constructor() {\n    this.nzEllipsis = true;\n  }\n\n}\n\nNzCellEllipsisDirective.ɵfac = function NzCellEllipsisDirective_Factory(t) {\n  return new (t || NzCellEllipsisDirective)();\n};\n\nNzCellEllipsisDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCellEllipsisDirective,\n  selectors: [[\"th\", \"nzEllipsis\", \"\"], [\"td\", \"nzEllipsis\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzCellEllipsisDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-cell-ellipsis\", ctx.nzEllipsis);\n    }\n  },\n  inputs: {\n    nzEllipsis: \"nzEllipsis\"\n  }\n});\n\n__decorate([InputBoolean()], NzCellEllipsisDirective.prototype, \"nzEllipsis\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCellEllipsisDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[nzEllipsis],td[nzEllipsis]',\n      host: {\n        '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n      }\n    }]\n  }], null, {\n    nzEllipsis: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzCellBreakWordDirective {\n  constructor() {\n    this.nzBreakWord = true;\n  }\n\n}\n\nNzCellBreakWordDirective.ɵfac = function NzCellBreakWordDirective_Factory(t) {\n  return new (t || NzCellBreakWordDirective)();\n};\n\nNzCellBreakWordDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCellBreakWordDirective,\n  selectors: [[\"th\", \"nzBreakWord\", \"\"], [\"td\", \"nzBreakWord\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzCellBreakWordDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"word-break\", ctx.nzBreakWord ? \"break-all\" : \"\");\n    }\n  },\n  inputs: {\n    nzBreakWord: \"nzBreakWord\"\n  }\n});\n\n__decorate([InputBoolean()], NzCellBreakWordDirective.prototype, \"nzBreakWord\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCellBreakWordDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'th[nzBreakWord],td[nzBreakWord]',\n      host: {\n        '[style.word-break]': `nzBreakWord ? 'break-all' : ''`\n      }\n    }]\n  }], null, {\n    nzBreakWord: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableContentComponent {\n  constructor() {\n    this.tableLayout = 'auto';\n    this.theadTemplate = null;\n    this.contentTemplate = null;\n    this.listOfColWidth = [];\n    this.scrollX = null;\n  }\n\n}\n\nNzTableContentComponent.ɵfac = function NzTableContentComponent_Factory(t) {\n  return new (t || NzTableContentComponent)();\n};\n\nNzTableContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableContentComponent,\n  selectors: [[\"table\", \"nz-table-content\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NzTableContentComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"table-layout\", ctx.tableLayout)(\"width\", ctx.scrollX)(\"min-width\", ctx.scrollX ? \"100%\" : null);\n      i0.ɵɵclassProp(\"ant-table-fixed\", ctx.scrollX);\n    }\n  },\n  inputs: {\n    tableLayout: \"tableLayout\",\n    theadTemplate: \"theadTemplate\",\n    contentTemplate: \"contentTemplate\",\n    listOfColWidth: \"listOfColWidth\",\n    scrollX: \"scrollX\"\n  },\n  attrs: _c6,\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"width\", \"minWidth\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"ant-table-thead\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ant-table-thead\"]],\n  template: function NzTableContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzTableContentComponent_col_0_Template, 1, 4, \"col\", 0);\n      i0.ɵɵtemplate(1, NzTableContentComponent_thead_1_Template, 2, 1, \"thead\", 1);\n      i0.ɵɵtemplate(2, NzTableContentComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵprojection(3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.listOfColWidth);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.theadTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n    }\n  },\n  directives: [i3$1.NgForOf, i3$1.NgIf, i3$1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table[nz-table-content]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `,\n      host: {\n        '[style.table-layout]': 'tableLayout',\n        '[class.ant-table-fixed]': 'scrollX',\n        '[style.width]': 'scrollX',\n        '[style.min-width]': `scrollX ? '100%': null`\n      }\n    }]\n  }], null, {\n    tableLayout: [{\n      type: Input\n    }],\n    theadTemplate: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }],\n    listOfColWidth: [{\n      type: Input\n    }],\n    scrollX: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableFixedRowComponent {\n  constructor(nzTableStyleService, renderer) {\n    this.nzTableStyleService = nzTableStyleService;\n    this.renderer = renderer;\n    this.hostWidth$ = new BehaviorSubject(null);\n    this.enableAutoMeasure$ = new BehaviorSubject(false);\n    this.destroy$ = new Subject();\n  }\n\n  ngOnInit() {\n    if (this.nzTableStyleService) {\n      const {\n        enableAutoMeasure$,\n        hostWidth$\n      } = this.nzTableStyleService;\n      enableAutoMeasure$.pipe(takeUntil(this.destroy$)).subscribe(this.enableAutoMeasure$);\n      hostWidth$.pipe(takeUntil(this.destroy$)).subscribe(this.hostWidth$);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n      this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTableFixedRowComponent.ɵfac = function NzTableFixedRowComponent_Factory(t) {\n  return new (t || NzTableFixedRowComponent)(i0.ɵɵdirectiveInject(NzTableStyleService), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNzTableFixedRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableFixedRowComponent,\n  selectors: [[\"tr\", \"nz-table-fixed-row\", \"\"], [\"tr\", \"nzExpand\", \"\"]],\n  viewQuery: function NzTableFixedRowComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c7, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tdElement = _t.first);\n    }\n  },\n  attrs: _c8,\n  ngContentSelectors: _c0,\n  decls: 6,\n  vars: 4,\n  consts: [[1, \"nz-disable-td\", \"ant-table-cell\"], [\"tdElement\", \"\"], [\"class\", \"ant-table-expanded-row-fixed\", \"style\", \"position: sticky; left: 0px; overflow: hidden;\", 3, \"width\", 4, \"ngIf\", \"ngIfElse\"], [\"contentTemplate\", \"\"], [1, \"ant-table-expanded-row-fixed\", 2, \"position\", \"sticky\", \"left\", \"0px\", \"overflow\", \"hidden\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzTableFixedRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"td\", 0, 1);\n      i0.ɵɵtemplate(2, NzTableFixedRowComponent_div_2_Template, 3, 5, \"div\", 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NzTableFixedRowComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 2, ctx.enableAutoMeasure$))(\"ngIfElse\", _r2);\n    }\n  },\n  directives: [i3$1.NgIf, i3$1.NgTemplateOutlet],\n  pipes: [i3$1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableFixedRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tdElement: [{\n      type: ViewChild,\n      args: ['tdElement', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableInnerDefaultComponent {\n  constructor() {\n    this.tableLayout = 'auto';\n    this.listOfColWidth = [];\n    this.theadTemplate = null;\n    this.contentTemplate = null;\n  }\n\n}\n\nNzTableInnerDefaultComponent.ɵfac = function NzTableInnerDefaultComponent_Factory(t) {\n  return new (t || NzTableInnerDefaultComponent)();\n};\n\nNzTableInnerDefaultComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableInnerDefaultComponent,\n  selectors: [[\"nz-table-inner-default\"]],\n  hostAttrs: [1, \"ant-table-container\"],\n  inputs: {\n    tableLayout: \"tableLayout\",\n    listOfColWidth: \"listOfColWidth\",\n    theadTemplate: \"theadTemplate\",\n    contentTemplate: \"contentTemplate\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"ant-table-content\"], [\"nz-table-content\", \"\", 3, \"contentTemplate\", \"tableLayout\", \"listOfColWidth\", \"theadTemplate\"]],\n  template: function NzTableInnerDefaultComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"table\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"contentTemplate\", ctx.contentTemplate)(\"tableLayout\", ctx.tableLayout)(\"listOfColWidth\", ctx.listOfColWidth)(\"theadTemplate\", ctx.theadTemplate);\n    }\n  },\n  directives: [NzTableContentComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableInnerDefaultComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-inner-default',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `,\n      host: {\n        class: 'ant-table-container'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    tableLayout: [{\n      type: Input\n    }],\n    listOfColWidth: [{\n      type: Input\n    }],\n    theadTemplate: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTrMeasureComponent {\n  constructor(nzResizeObserver, ngZone) {\n    this.nzResizeObserver = nzResizeObserver;\n    this.ngZone = ngZone;\n    this.listOfMeasureColumn = [];\n    this.listOfAutoWidth = new EventEmitter();\n    this.destroy$ = new Subject();\n  }\n\n  trackByFunc(_, key) {\n    return key;\n  }\n\n  ngAfterViewInit() {\n    this.listOfTdElement.changes.pipe(startWith(this.listOfTdElement)).pipe(switchMap(list => combineLatest(list.toArray().map(item => this.nzResizeObserver.observe(item).pipe(map(([entry]) => {\n      const {\n        width\n      } = entry.target.getBoundingClientRect();\n      return Math.floor(width);\n    }))))), debounceTime(16), takeUntil(this.destroy$)).subscribe(data => {\n      this.ngZone.run(() => {\n        this.listOfAutoWidth.next(data);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTrMeasureComponent.ɵfac = function NzTrMeasureComponent_Factory(t) {\n  return new (t || NzTrMeasureComponent)(i0.ɵɵdirectiveInject(i1$3.NzResizeObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNzTrMeasureComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTrMeasureComponent,\n  selectors: [[\"tr\", \"nz-table-measure-row\", \"\"]],\n  viewQuery: function NzTrMeasureComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfTdElement = _t);\n    }\n  },\n  hostAttrs: [1, \"ant-table-measure-now\"],\n  inputs: {\n    listOfMeasureColumn: \"listOfMeasureColumn\"\n  },\n  outputs: {\n    listOfAutoWidth: \"listOfAutoWidth\"\n  },\n  attrs: _c9,\n  decls: 1,\n  vars: 2,\n  consts: [[\"class\", \"nz-disable-td\", \"style\", \"padding: 0px; border: 0px; height: 0px;\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"nz-disable-td\", 2, \"padding\", \"0px\", \"border\", \"0px\", \"height\", \"0px\"], [\"tdElement\", \"\"]],\n  template: function NzTrMeasureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTrMeasureComponent_td_0_Template, 2, 0, \"td\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.listOfMeasureColumn)(\"ngForTrackBy\", ctx.trackByFunc);\n    }\n  },\n  directives: [i3$1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTrMeasureComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tr[nz-table-measure-row]',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `,\n      host: {\n        class: 'ant-table-measure-now'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$3.NzResizeObserver\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    listOfMeasureColumn: [{\n      type: Input\n    }],\n    listOfAutoWidth: [{\n      type: Output\n    }],\n    listOfTdElement: [{\n      type: ViewChildren,\n      args: ['tdElement']\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTbodyComponent {\n  constructor(nzTableStyleService) {\n    this.nzTableStyleService = nzTableStyleService;\n    this.isInsideTable = false;\n    this.showEmpty$ = new BehaviorSubject(false);\n    this.noResult$ = new BehaviorSubject(undefined);\n    this.listOfMeasureColumn$ = new BehaviorSubject([]);\n    this.destroy$ = new Subject();\n    this.isInsideTable = !!this.nzTableStyleService;\n\n    if (this.nzTableStyleService) {\n      const {\n        showEmpty$,\n        noResult$,\n        listOfMeasureColumn$\n      } = this.nzTableStyleService;\n      noResult$.pipe(takeUntil(this.destroy$)).subscribe(this.noResult$);\n      listOfMeasureColumn$.pipe(takeUntil(this.destroy$)).subscribe(this.listOfMeasureColumn$);\n      showEmpty$.pipe(takeUntil(this.destroy$)).subscribe(this.showEmpty$);\n    }\n  }\n\n  onListOfAutoWidthChange(listOfAutoWidth) {\n    this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTbodyComponent.ɵfac = function NzTbodyComponent_Factory(t) {\n  return new (t || NzTbodyComponent)(i0.ɵɵdirectiveInject(NzTableStyleService, 8));\n};\n\nNzTbodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTbodyComponent,\n  selectors: [[\"tbody\"]],\n  hostVars: 2,\n  hostBindings: function NzTbodyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-tbody\", ctx.isInsideTable);\n    }\n  },\n  ngContentSelectors: _c0,\n  decls: 5,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [\"class\", \"ant-table-placeholder\", \"nz-table-fixed-row\", \"\", 4, \"ngIf\"], [\"nz-table-measure-row\", \"\", 3, \"listOfMeasureColumn\", \"listOfAutoWidth\", 4, \"ngIf\"], [\"nz-table-measure-row\", \"\", 3, \"listOfMeasureColumn\", \"listOfAutoWidth\"], [\"nz-table-fixed-row\", \"\", 1, \"ant-table-placeholder\"], [\"nzComponentName\", \"table\", 3, \"specificContent\"]],\n  template: function NzTbodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzTbodyComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵprojection(2);\n      i0.ɵɵtemplate(3, NzTbodyComponent_tr_3_Template, 3, 3, \"tr\", 1);\n      i0.ɵɵpipe(4, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.listOfMeasureColumn$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 4, ctx.showEmpty$));\n    }\n  },\n  directives: [NzTrMeasureComponent, NzTableFixedRowComponent, i4$1.NzEmbedEmptyComponent, i3$1.NgIf],\n  pipes: [i3$1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTbodyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tbody',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `,\n      host: {\n        '[class.ant-table-tbody]': 'isInsideTable'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nclass NzTableInnerScrollComponent {\n  constructor(renderer, ngZone, platform, resizeService) {\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.data = [];\n    this.scrollX = null;\n    this.scrollY = null;\n    this.contentTemplate = null;\n    this.widthConfig = [];\n    this.listOfColWidth = [];\n    this.theadTemplate = null;\n    this.virtualTemplate = null;\n    this.virtualItemSize = 0;\n    this.virtualMaxBufferPx = 200;\n    this.virtualMinBufferPx = 100;\n\n    this.virtualForTrackBy = index => index;\n\n    this.headerStyleMap = {};\n    this.bodyStyleMap = {};\n    this.verticalScrollBarWidth = 0;\n    this.noDateVirtualHeight = '182px';\n    this.data$ = new Subject();\n    this.scroll$ = new Subject();\n    this.destroy$ = new Subject();\n  }\n\n  setScrollPositionClassName(clear = false) {\n    const {\n      scrollWidth,\n      scrollLeft,\n      clientWidth\n    } = this.tableBodyElement.nativeElement;\n    const leftClassName = 'ant-table-ping-left';\n    const rightClassName = 'ant-table-ping-right';\n\n    if (scrollWidth === clientWidth && scrollWidth !== 0 || clear) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n    } else if (scrollLeft === 0) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    } else if (scrollWidth === scrollLeft + clientWidth) {\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n    } else {\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    }\n  }\n\n  ngOnChanges(changes) {\n    const {\n      scrollX,\n      scrollY,\n      data\n    } = changes;\n\n    if (scrollX || scrollY) {\n      const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n      this.headerStyleMap = {\n        overflowX: 'hidden',\n        overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n      };\n      this.bodyStyleMap = {\n        overflowY: this.scrollY ? 'scroll' : 'hidden',\n        overflowX: this.scrollX ? 'auto' : null,\n        maxHeight: this.scrollY\n      };\n      this.scroll$.next();\n    }\n\n    if (data) {\n      this.data$.next();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        const scrollEvent$ = this.scroll$.pipe(startWith(null), delay(0), switchMap(() => fromEvent(this.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true))), takeUntil(this.destroy$));\n        const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n        const data$ = this.data$.pipe(takeUntil(this.destroy$));\n        const setClassName$ = merge(scrollEvent$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0), takeUntil(this.destroy$));\n        setClassName$.subscribe(() => this.setScrollPositionClassName());\n        scrollEvent$.pipe(filter(() => !!this.scrollY)).subscribe(() => this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.setScrollPositionClassName(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTableInnerScrollComponent.ɵfac = function NzTableInnerScrollComponent_Factory(t) {\n  return new (t || NzTableInnerScrollComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$4.Platform), i0.ɵɵdirectiveInject(i2.NzResizeService));\n};\n\nNzTableInnerScrollComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableInnerScrollComponent,\n  selectors: [[\"nz-table-inner-scroll\"]],\n  viewQuery: function NzTableInnerScrollComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c10, 5, ElementRef);\n      i0.ɵɵviewQuery(_c11, 5, ElementRef);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5, CdkVirtualScrollViewport);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableHeaderElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableBodyElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-table-container\"],\n  inputs: {\n    data: \"data\",\n    scrollX: \"scrollX\",\n    scrollY: \"scrollY\",\n    contentTemplate: \"contentTemplate\",\n    widthConfig: \"widthConfig\",\n    listOfColWidth: \"listOfColWidth\",\n    theadTemplate: \"theadTemplate\",\n    virtualTemplate: \"virtualTemplate\",\n    virtualItemSize: \"virtualItemSize\",\n    virtualMaxBufferPx: \"virtualMaxBufferPx\",\n    virtualMinBufferPx: \"virtualMinBufferPx\",\n    tableMainElement: \"tableMainElement\",\n    virtualForTrackBy: \"virtualForTrackBy\",\n    verticalScrollBarWidth: \"verticalScrollBarWidth\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"ant-table-content\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"ant-table-header\", \"nz-table-hide-scrollbar\", 3, \"ngStyle\"], [\"tableHeaderElement\", \"\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"theadTemplate\"], [\"class\", \"ant-table-body\", 3, \"ngStyle\", 4, \"ngIf\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\", \"height\", 4, \"ngIf\"], [1, \"ant-table-body\", 3, \"ngStyle\"], [\"tableBodyElement\", \"\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"contentTemplate\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-table-content\", 3, \"ngStyle\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"]],\n  template: function NzTableInnerScrollComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTableInnerScrollComponent_ng_container_0_Template, 6, 6, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzTableInnerScrollComponent_div_1_Template, 3, 5, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.scrollY);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.scrollY);\n    }\n  },\n  directives: [NzTableContentComponent, i4$2.CdkVirtualScrollViewport, NzTbodyComponent, i3$1.NgIf, i3$1.NgStyle, i4$2.CdkFixedSizeVirtualScroll, i4$2.CdkVirtualForOf, i3$1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableInnerScrollComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-inner-scroll',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-container *ngIf=\"scrollY\">\n      <div #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template\n                [ngTemplateOutlet]=\"virtualTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"\n              ></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"ant-table-content\" #tableBodyElement *ngIf=\"!scrollY\" [ngStyle]=\"bodyStyleMap\">\n      <table\n        nz-table-content\n        tableLayout=\"fixed\"\n        [scrollX]=\"scrollX\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n        [contentTemplate]=\"contentTemplate\"\n      ></table>\n    </div>\n  `,\n      host: {\n        class: 'ant-table-container'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$4.Platform\n    }, {\n      type: i2.NzResizeService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    scrollX: [{\n      type: Input\n    }],\n    scrollY: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }],\n    widthConfig: [{\n      type: Input\n    }],\n    listOfColWidth: [{\n      type: Input\n    }],\n    theadTemplate: [{\n      type: Input\n    }],\n    virtualTemplate: [{\n      type: Input\n    }],\n    virtualItemSize: [{\n      type: Input\n    }],\n    virtualMaxBufferPx: [{\n      type: Input\n    }],\n    virtualMinBufferPx: [{\n      type: Input\n    }],\n    tableMainElement: [{\n      type: Input\n    }],\n    virtualForTrackBy: [{\n      type: Input\n    }],\n    tableHeaderElement: [{\n      type: ViewChild,\n      args: ['tableHeaderElement', {\n        read: ElementRef\n      }]\n    }],\n    tableBodyElement: [{\n      type: ViewChild,\n      args: ['tableBodyElement', {\n        read: ElementRef\n      }]\n    }],\n    cdkVirtualScrollViewport: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport, {\n        read: CdkVirtualScrollViewport\n      }]\n    }],\n    verticalScrollBarWidth: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableVirtualScrollDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n\n}\n\nNzTableVirtualScrollDirective.ɵfac = function NzTableVirtualScrollDirective_Factory(t) {\n  return new (t || NzTableVirtualScrollDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNzTableVirtualScrollDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTableVirtualScrollDirective,\n  selectors: [[\"\", \"nz-virtual-scroll\", \"\"]],\n  exportAs: [\"nzVirtualScroll\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableVirtualScrollDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-virtual-scroll]',\n      exportAs: 'nzVirtualScroll'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableDataService {\n  constructor() {\n    this.destroy$ = new Subject();\n    this.pageIndex$ = new BehaviorSubject(1);\n    this.frontPagination$ = new BehaviorSubject(true);\n    this.pageSize$ = new BehaviorSubject(10);\n    this.listOfData$ = new BehaviorSubject([]);\n    this.pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n    this.pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n    this.listOfCalcOperator$ = new BehaviorSubject([]);\n    this.queryParams$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfCalcOperator$]).pipe(debounceTime(0), skip(1), map(([pageIndex, pageSize, listOfCalc]) => ({\n      pageIndex,\n      pageSize,\n      sort: listOfCalc.filter(item => item.sortFn).map(item => ({\n        key: item.key,\n        value: item.sortOrder\n      })),\n      filter: listOfCalc.filter(item => item.filterFn).map(item => ({\n        key: item.key,\n        value: item.filterValue\n      }))\n    })));\n    this.listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(map(([listOfData, listOfCalcOperator]) => {\n      let listOfDataAfterCalc = [...listOfData];\n      const listOfFilterOperator = listOfCalcOperator.filter(item => {\n        const {\n          filterValue,\n          filterFn\n        } = item;\n        const isReset = filterValue === null || filterValue === undefined || Array.isArray(filterValue) && filterValue.length === 0;\n        return !isReset && typeof filterFn === 'function';\n      });\n\n      for (const item of listOfFilterOperator) {\n        const {\n          filterFn,\n          filterValue\n        } = item;\n        listOfDataAfterCalc = listOfDataAfterCalc.filter(data => filterFn(filterValue, data));\n      }\n\n      const listOfSortOperator = listOfCalcOperator.filter(item => item.sortOrder !== null && typeof item.sortFn === 'function').sort((a, b) => +b.sortPriority - +a.sortPriority);\n\n      if (listOfCalcOperator.length) {\n        listOfDataAfterCalc.sort((record1, record2) => {\n          for (const item of listOfSortOperator) {\n            const {\n              sortFn,\n              sortOrder\n            } = item;\n\n            if (sortFn && sortOrder) {\n              const compareResult = sortFn(record1, record2, sortOrder);\n\n              if (compareResult !== 0) {\n                return sortOrder === 'ascend' ? compareResult : -compareResult;\n              }\n            }\n          }\n\n          return 0;\n        });\n      }\n\n      return listOfDataAfterCalc;\n    }));\n    this.listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(takeUntil(this.destroy$), filter(value => {\n      const [pageIndex, pageSize, listOfData] = value;\n      const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n      return pageIndex <= maxPageIndex;\n    }), map(([pageIndex, pageSize, listOfData]) => listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize)));\n    this.listOfCurrentPageData$ = this.frontPagination$.pipe(switchMap(pagination => pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfDataAfterCalc$));\n    this.total$ = this.frontPagination$.pipe(switchMap(pagination => pagination ? this.listOfDataAfterCalc$ : this.listOfData$), map(list => list.length), distinctUntilChanged());\n  }\n\n  updatePageSize(size) {\n    this.pageSize$.next(size);\n  }\n\n  updateFrontPagination(pagination) {\n    this.frontPagination$.next(pagination);\n  }\n\n  updatePageIndex(index) {\n    this.pageIndex$.next(index);\n  }\n\n  updateListOfData(list) {\n    this.listOfData$.next(list);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTableDataService.ɵfac = function NzTableDataService_Factory(t) {\n  return new (t || NzTableDataService)();\n};\n\nNzTableDataService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzTableDataService,\n  factory: NzTableDataService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableDataService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableTitleFooterComponent {\n  constructor() {\n    this.title = null;\n    this.footer = null;\n  }\n\n}\n\nNzTableTitleFooterComponent.ɵfac = function NzTableTitleFooterComponent_Factory(t) {\n  return new (t || NzTableTitleFooterComponent)();\n};\n\nNzTableTitleFooterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableTitleFooterComponent,\n  selectors: [[\"nz-table-title-footer\"]],\n  hostVars: 4,\n  hostBindings: function NzTableTitleFooterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-title\", ctx.title !== null)(\"ant-table-footer\", ctx.footer !== null);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    footer: \"footer\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"nzStringTemplateOutlet\"]],\n  template: function NzTableTitleFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTableTitleFooterComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzTableTitleFooterComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.footer);\n    }\n  },\n  directives: [i1$5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableTitleFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table-title-footer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `,\n      host: {\n        '[class.ant-table-title]': `title !== null`,\n        '[class.ant-table-footer]': `footer !== null`\n      }\n    }]\n  }], null, {\n    title: [{\n      type: Input\n    }],\n    footer: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'table';\n\nclass NzTableComponent {\n  constructor(elementRef, nzResizeObserver, nzConfigService, cdr, nzTableStyleService, nzTableDataService, directionality) {\n    this.elementRef = elementRef;\n    this.nzResizeObserver = nzResizeObserver;\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.nzTableStyleService = nzTableStyleService;\n    this.nzTableDataService = nzTableDataService;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzTableLayout = 'auto';\n    this.nzShowTotal = null;\n    this.nzItemRender = null;\n    this.nzTitle = null;\n    this.nzFooter = null;\n    this.nzNoResult = undefined;\n    this.nzPageSizeOptions = [10, 20, 30, 40, 50];\n    this.nzVirtualItemSize = 0;\n    this.nzVirtualMaxBufferPx = 200;\n    this.nzVirtualMinBufferPx = 100;\n\n    this.nzVirtualForTrackBy = index => index;\n\n    this.nzLoadingDelay = 0;\n    this.nzPageIndex = 1;\n    this.nzPageSize = 10;\n    this.nzTotal = 0;\n    this.nzWidthConfig = [];\n    this.nzData = [];\n    this.nzPaginationPosition = 'bottom';\n    this.nzScroll = {\n      x: null,\n      y: null\n    };\n    this.nzPaginationType = 'default';\n    this.nzFrontPagination = true;\n    this.nzTemplateMode = false;\n    this.nzShowPagination = true;\n    this.nzLoading = false;\n    this.nzOuterBordered = false;\n    this.nzLoadingIndicator = null;\n    this.nzBordered = false;\n    this.nzSize = 'default';\n    this.nzShowSizeChanger = false;\n    this.nzHideOnSinglePage = false;\n    this.nzShowQuickJumper = false;\n    this.nzSimple = false;\n    this.nzPageSizeChange = new EventEmitter();\n    this.nzPageIndexChange = new EventEmitter();\n    this.nzQueryParams = new EventEmitter();\n    this.nzCurrentPageDataChange = new EventEmitter();\n    /** public data for ngFor tr */\n\n    this.data = [];\n    this.scrollX = null;\n    this.scrollY = null;\n    this.theadTemplate = null;\n    this.listOfAutoColWidth = [];\n    this.listOfManualColWidth = [];\n    this.hasFixLeft = false;\n    this.hasFixRight = false;\n    this.showPagination = true;\n    this.destroy$ = new Subject();\n    this.templateMode$ = new BehaviorSubject(false);\n    this.dir = 'ltr';\n    this.verticalScrollBarWidth = 0;\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  onPageSizeChange(size) {\n    this.nzTableDataService.updatePageSize(size);\n  }\n\n  onPageIndexChange(index) {\n    this.nzTableDataService.updatePageIndex(index);\n  }\n\n  ngOnInit() {\n    var _a;\n\n    const {\n      pageIndexDistinct$,\n      pageSizeDistinct$,\n      listOfCurrentPageData$,\n      total$,\n      queryParams$\n    } = this.nzTableDataService;\n    const {\n      theadTemplate$,\n      hasFixLeft$,\n      hasFixRight$\n    } = this.nzTableStyleService;\n    this.dir = this.directionality.value;\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n    pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n      if (pageIndex !== this.nzPageIndex) {\n        this.nzPageIndex = pageIndex;\n        this.nzPageIndexChange.next(pageIndex);\n      }\n    });\n    pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n      if (pageSize !== this.nzPageSize) {\n        this.nzPageSize = pageSize;\n        this.nzPageSizeChange.next(pageSize);\n      }\n    });\n    total$.pipe(takeUntil(this.destroy$), filter(() => this.nzFrontPagination)).subscribe(total => {\n      if (total !== this.nzTotal) {\n        this.nzTotal = total;\n        this.cdr.markForCheck();\n      }\n    });\n    listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.data = data;\n      this.nzCurrentPageDataChange.next(data);\n      this.cdr.markForCheck();\n    });\n    theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n      this.theadTemplate = theadTemplate;\n      this.cdr.markForCheck();\n    });\n    hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n      this.hasFixLeft = hasFixLeft;\n      this.cdr.markForCheck();\n    });\n    hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n      this.hasFixRight = hasFixRight;\n      this.cdr.markForCheck();\n    });\n    combineLatest([total$, this.templateMode$]).pipe(map(([total, templateMode]) => total === 0 && !templateMode), takeUntil(this.destroy$)).subscribe(empty => {\n      this.nzTableStyleService.setShowEmpty(empty);\n    });\n    this.verticalScrollBarWidth = measureScrollbar('vertical');\n    this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfAutoColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n    this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfManualColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzScroll,\n      nzPageIndex,\n      nzPageSize,\n      nzFrontPagination,\n      nzData,\n      nzWidthConfig,\n      nzNoResult,\n      nzTemplateMode\n    } = changes;\n\n    if (nzPageIndex) {\n      this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n    }\n\n    if (nzPageSize) {\n      this.nzTableDataService.updatePageSize(this.nzPageSize);\n    }\n\n    if (nzData) {\n      this.nzData = this.nzData || [];\n      this.nzTableDataService.updateListOfData(this.nzData);\n    }\n\n    if (nzFrontPagination) {\n      this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n    }\n\n    if (nzScroll) {\n      this.setScrollOnChanges();\n    }\n\n    if (nzWidthConfig) {\n      this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n    }\n\n    if (nzTemplateMode) {\n      this.templateMode$.next(this.nzTemplateMode);\n    }\n\n    if (nzNoResult) {\n      this.nzTableStyleService.setNoResult(this.nzNoResult);\n    }\n\n    this.updateShowPagination();\n  }\n\n  ngAfterViewInit() {\n    this.nzResizeObserver.observe(this.elementRef).pipe(map(([entry]) => {\n      const {\n        width\n      } = entry.target.getBoundingClientRect();\n      const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n      return Math.floor(width - scrollBarWidth);\n    }), takeUntil(this.destroy$)).subscribe(this.nzTableStyleService.hostWidth$);\n\n    if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n      this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setScrollOnChanges() {\n    this.scrollX = this.nzScroll && this.nzScroll.x || null;\n    this.scrollY = this.nzScroll && this.nzScroll.y || null;\n    this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n  }\n\n  updateShowPagination() {\n    this.showPagination = this.nzHideOnSinglePage && this.nzData.length > this.nzPageSize || this.nzData.length > 0 && !this.nzHideOnSinglePage || !this.nzFrontPagination && this.nzTotal > this.nzPageSize;\n  }\n\n}\n\nNzTableComponent.ɵfac = function NzTableComponent_Factory(t) {\n  return new (t || NzTableComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$3.NzResizeObserver), i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzTableStyleService), i0.ɵɵdirectiveInject(NzTableDataService), i0.ɵɵdirectiveInject(i5.Directionality, 8));\n};\n\nNzTableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTableComponent,\n  selectors: [[\"nz-table\"]],\n  contentQueries: function NzTableComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzTableVirtualScrollDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzVirtualScrollDirective = _t.first);\n    }\n  },\n  viewQuery: function NzTableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NzTableInnerScrollComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTableInnerScrollComponent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-table-wrapper\"],\n  hostVars: 2,\n  hostBindings: function NzTableComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-wrapper-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzTableLayout: \"nzTableLayout\",\n    nzShowTotal: \"nzShowTotal\",\n    nzItemRender: \"nzItemRender\",\n    nzTitle: \"nzTitle\",\n    nzFooter: \"nzFooter\",\n    nzNoResult: \"nzNoResult\",\n    nzPageSizeOptions: \"nzPageSizeOptions\",\n    nzVirtualItemSize: \"nzVirtualItemSize\",\n    nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n    nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n    nzVirtualForTrackBy: \"nzVirtualForTrackBy\",\n    nzLoadingDelay: \"nzLoadingDelay\",\n    nzPageIndex: \"nzPageIndex\",\n    nzPageSize: \"nzPageSize\",\n    nzTotal: \"nzTotal\",\n    nzWidthConfig: \"nzWidthConfig\",\n    nzData: \"nzData\",\n    nzPaginationPosition: \"nzPaginationPosition\",\n    nzScroll: \"nzScroll\",\n    nzPaginationType: \"nzPaginationType\",\n    nzFrontPagination: \"nzFrontPagination\",\n    nzTemplateMode: \"nzTemplateMode\",\n    nzShowPagination: \"nzShowPagination\",\n    nzLoading: \"nzLoading\",\n    nzOuterBordered: \"nzOuterBordered\",\n    nzLoadingIndicator: \"nzLoadingIndicator\",\n    nzBordered: \"nzBordered\",\n    nzSize: \"nzSize\",\n    nzShowSizeChanger: \"nzShowSizeChanger\",\n    nzHideOnSinglePage: \"nzHideOnSinglePage\",\n    nzShowQuickJumper: \"nzShowQuickJumper\",\n    nzSimple: \"nzSimple\"\n  },\n  outputs: {\n    nzPageSizeChange: \"nzPageSizeChange\",\n    nzPageIndexChange: \"nzPageIndexChange\",\n    nzQueryParams: \"nzQueryParams\",\n    nzCurrentPageDataChange: \"nzCurrentPageDataChange\"\n  },\n  exportAs: [\"nzTable\"],\n  features: [i0.ɵɵProvidersFeature([NzTableStyleService, NzTableDataService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 27,\n  consts: [[3, \"nzDelay\", \"nzSpinning\", \"nzIndicator\"], [4, \"ngIf\"], [1, \"ant-table\"], [\"tableMainElement\", \"\"], [3, \"title\", 4, \"ngIf\"], [3, \"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"listOfColWidth\", \"theadTemplate\", \"verticalScrollBarWidth\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultTemplate\", \"\"], [3, \"footer\", 4, \"ngIf\"], [\"paginationTemplate\", \"\"], [\"contentTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [3, \"title\"], [3, \"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"listOfColWidth\", \"theadTemplate\", \"verticalScrollBarWidth\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\"], [3, \"tableLayout\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"], [3, \"footer\"], [\"class\", \"ant-table-pagination ant-table-pagination-right\", 3, \"hidden\", \"nzShowSizeChanger\", \"nzPageSizeOptions\", \"nzItemRender\", \"nzShowQuickJumper\", \"nzHideOnSinglePage\", \"nzShowTotal\", \"nzSize\", \"nzPageSize\", \"nzTotal\", \"nzSimple\", \"nzPageIndex\", \"nzPageSizeChange\", \"nzPageIndexChange\", 4, \"ngIf\"], [1, \"ant-table-pagination\", \"ant-table-pagination-right\", 3, \"hidden\", \"nzShowSizeChanger\", \"nzPageSizeOptions\", \"nzItemRender\", \"nzShowQuickJumper\", \"nzHideOnSinglePage\", \"nzShowTotal\", \"nzSize\", \"nzPageSize\", \"nzTotal\", \"nzSimple\", \"nzPageIndex\", \"nzPageSizeChange\", \"nzPageIndexChange\"]],\n  template: function NzTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"nz-spin\", 0);\n      i0.ɵɵtemplate(1, NzTableComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2, 3);\n      i0.ɵɵtemplate(4, NzTableComponent_nz_table_title_footer_4_Template, 1, 1, \"nz-table-title-footer\", 4);\n      i0.ɵɵtemplate(5, NzTableComponent_nz_table_inner_scroll_5_Template, 1, 13, \"nz-table-inner-scroll\", 5);\n      i0.ɵɵtemplate(6, NzTableComponent_ng_template_6_Template, 1, 4, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, NzTableComponent_nz_table_title_footer_8_Template, 1, 1, \"nz-table-title-footer\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, NzTableComponent_ng_container_9_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, NzTableComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, NzTableComponent_ng_template_12_Template, 1, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(7);\n\n      i0.ɵɵproperty(\"nzDelay\", ctx.nzLoadingDelay)(\"nzSpinning\", ctx.nzLoading)(\"nzIndicator\", ctx.nzLoadingIndicator);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzPaginationPosition === \"both\" || ctx.nzPaginationPosition === \"top\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"ant-table-rtl\", ctx.dir === \"rtl\")(\"ant-table-fixed-header\", ctx.nzData.length && ctx.scrollY)(\"ant-table-fixed-column\", ctx.scrollX)(\"ant-table-has-fix-left\", ctx.hasFixLeft)(\"ant-table-has-fix-right\", ctx.hasFixRight)(\"ant-table-bordered\", ctx.nzBordered)(\"nz-table-out-bordered\", ctx.nzOuterBordered && !ctx.nzBordered)(\"ant-table-middle\", ctx.nzSize === \"middle\")(\"ant-table-small\", ctx.nzSize === \"small\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.scrollY || ctx.scrollX)(\"ngIfElse\", _r4);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzFooter);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzPaginationPosition === \"both\" || ctx.nzPaginationPosition === \"bottom\");\n    }\n  },\n  directives: [i6$1.NzSpinComponent, NzTableTitleFooterComponent, NzTableInnerScrollComponent, NzTableInnerDefaultComponent, i10$1.NzPaginationComponent, i3$1.NgIf, i3$1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzTableComponent.prototype, \"nzFrontPagination\", void 0);\n\n__decorate([InputBoolean()], NzTableComponent.prototype, \"nzTemplateMode\", void 0);\n\n__decorate([InputBoolean()], NzTableComponent.prototype, \"nzShowPagination\", void 0);\n\n__decorate([InputBoolean()], NzTableComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean()], NzTableComponent.prototype, \"nzOuterBordered\", void 0);\n\n__decorate([WithConfig()], NzTableComponent.prototype, \"nzLoadingIndicator\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzBordered\", void 0);\n\n__decorate([WithConfig()], NzTableComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzShowSizeChanger\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzHideOnSinglePage\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzShowQuickJumper\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzSimple\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-table',\n      exportAs: 'nzTable',\n      providers: [NzTableStyleService, NzTableDataService],\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-rtl]=\"dir === 'rtl'\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.nz-table-out-bordered]=\"nzOuterBordered && !nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && data.length\"\n        [hidden]=\"!showPagination\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzPaginationType === 'small' ? 'small' : nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      ></nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n      host: {\n        class: 'ant-table-wrapper',\n        '[class.ant-table-wrapper-rtl]': 'dir === \"rtl\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1$3.NzResizeObserver\n    }, {\n      type: i1.NzConfigService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NzTableStyleService\n    }, {\n      type: NzTableDataService\n    }, {\n      type: i5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzTableLayout: [{\n      type: Input\n    }],\n    nzShowTotal: [{\n      type: Input\n    }],\n    nzItemRender: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzFooter: [{\n      type: Input\n    }],\n    nzNoResult: [{\n      type: Input\n    }],\n    nzPageSizeOptions: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualForTrackBy: [{\n      type: Input\n    }],\n    nzLoadingDelay: [{\n      type: Input\n    }],\n    nzPageIndex: [{\n      type: Input\n    }],\n    nzPageSize: [{\n      type: Input\n    }],\n    nzTotal: [{\n      type: Input\n    }],\n    nzWidthConfig: [{\n      type: Input\n    }],\n    nzData: [{\n      type: Input\n    }],\n    nzPaginationPosition: [{\n      type: Input\n    }],\n    nzScroll: [{\n      type: Input\n    }],\n    nzPaginationType: [{\n      type: Input\n    }],\n    nzFrontPagination: [{\n      type: Input\n    }],\n    nzTemplateMode: [{\n      type: Input\n    }],\n    nzShowPagination: [{\n      type: Input\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzOuterBordered: [{\n      type: Input\n    }],\n    nzLoadingIndicator: [{\n      type: Input\n    }],\n    nzBordered: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzShowSizeChanger: [{\n      type: Input\n    }],\n    nzHideOnSinglePage: [{\n      type: Input\n    }],\n    nzShowQuickJumper: [{\n      type: Input\n    }],\n    nzSimple: [{\n      type: Input\n    }],\n    nzPageSizeChange: [{\n      type: Output\n    }],\n    nzPageIndexChange: [{\n      type: Output\n    }],\n    nzQueryParams: [{\n      type: Output\n    }],\n    nzCurrentPageDataChange: [{\n      type: Output\n    }],\n    nzVirtualScrollDirective: [{\n      type: ContentChild,\n      args: [NzTableVirtualScrollDirective, {\n        static: false\n      }]\n    }],\n    nzTableInnerScrollComponent: [{\n      type: ViewChild,\n      args: [NzTableInnerScrollComponent]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTrDirective {\n  constructor(nzTableStyleService) {\n    this.nzTableStyleService = nzTableStyleService;\n    this.destroy$ = new Subject();\n    this.listOfFixedColumns$ = new ReplaySubject(1);\n    this.listOfColumns$ = new ReplaySubject(1);\n    this.listOfFixedColumnsChanges$ = this.listOfFixedColumns$.pipe(switchMap(list => merge(...[this.listOfFixedColumns$, ...list.map(c => c.changes$)]).pipe(mergeMap(() => this.listOfFixedColumns$))), takeUntil(this.destroy$));\n    this.listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n    this.listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n    this.listOfColumnsChanges$ = this.listOfColumns$.pipe(switchMap(list => merge(...[this.listOfColumns$, ...list.map(c => c.changes$)]).pipe(mergeMap(() => this.listOfColumns$))), takeUntil(this.destroy$));\n    this.isInsideTable = false;\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n  ngAfterContentInit() {\n    if (this.nzTableStyleService) {\n      this.listOfCellFixedDirective.changes.pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$)).subscribe(this.listOfFixedColumns$);\n      this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n      /** set last left and first right **/\n\n      this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n        listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n      });\n      this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n        listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n      });\n      /** calculate fixed nzLeft and nzRight **/\n\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).pipe(takeUntil(this.destroy$)).subscribe(([listOfAutoWidth, listOfLeftCell]) => {\n        listOfLeftCell.forEach((cell, index) => {\n          if (cell.isAutoLeft) {\n            const currentArray = listOfLeftCell.slice(0, index);\n            const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n            const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n            cell.setAutoLeftWidth(`${width}px`);\n          }\n        });\n      });\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).pipe(takeUntil(this.destroy$)).subscribe(([listOfAutoWidth, listOfRightCell]) => {\n        listOfRightCell.forEach((_, index) => {\n          const cell = listOfRightCell[listOfRightCell.length - index - 1];\n\n          if (cell.isAutoRight) {\n            const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n            const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n            const width = listOfAutoWidth.slice(listOfAutoWidth.length - count, listOfAutoWidth.length).reduce((pre, cur) => pre + cur, 0);\n            cell.setAutoRightWidth(`${width}px`);\n          }\n        });\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTrDirective.ɵfac = function NzTrDirective_Factory(t) {\n  return new (t || NzTrDirective)(i0.ɵɵdirectiveInject(NzTableStyleService, 8));\n};\n\nNzTrDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTrDirective,\n  selectors: [[\"tr\", 3, \"mat-row\", \"\", 3, \"mat-header-row\", \"\", 3, \"nz-table-measure-row\", \"\", 3, \"nzExpand\", \"\", 3, \"nz-table-fixed-row\", \"\"]],\n  contentQueries: function NzTrDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzThMeasureDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, NzCellFixedDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzThDirective = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfCellFixedDirective = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NzTrDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-table-row\", ctx.isInsideTable);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTrDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n      host: {\n        '[class.ant-table-row]': 'isInsideTable'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    listOfNzThDirective: [{\n      type: ContentChildren,\n      args: [NzThMeasureDirective]\n    }],\n    listOfCellFixedDirective: [{\n      type: ContentChildren,\n      args: [NzCellFixedDirective]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTheadComponent {\n  constructor(elementRef, renderer, nzTableStyleService, nzTableDataService) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.nzTableStyleService = nzTableStyleService;\n    this.nzTableDataService = nzTableDataService;\n    this.destroy$ = new Subject();\n    this.isInsideTable = false;\n    this.nzSortOrderChange = new EventEmitter();\n    this.isInsideTable = !!this.nzTableStyleService;\n  }\n\n  ngOnInit() {\n    if (this.nzTableStyleService) {\n      this.nzTableStyleService.setTheadTemplate(this.templateRef);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.nzTableStyleService) {\n      const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(startWith(this.listOfNzTrDirective), map(item => item && item.first));\n      const listOfColumnsChanges$ = firstTableRow$.pipe(switchMap(firstTableRow => firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY), takeUntil(this.destroy$));\n      listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n      /** TODO: need reset the measure row when scrollX change **/\n\n      this.nzTableStyleService.enableAutoMeasure$.pipe(switchMap(enable => enable ? listOfColumnsChanges$ : of([]))).pipe(takeUntil(this.destroy$)).subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n      const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(switchMap(firstTr => firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY), takeUntil(this.destroy$));\n      const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(switchMap(firstTr => firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY), takeUntil(this.destroy$));\n      listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n        this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n      });\n      listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n        this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n      });\n    }\n\n    if (this.nzTableDataService) {\n      const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent));\n      const manualSort$ = listOfColumn$.pipe(switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))), takeUntil(this.destroy$));\n      manualSort$.subscribe(data => {\n        const emitValue = {\n          key: data.nzColumnKey,\n          value: data.sortOrder\n        };\n        this.nzSortOrderChange.emit(emitValue);\n\n        if (data.nzSortFn && data.nzSortPriority === false) {\n          this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n        }\n      });\n      const listOfCalcOperator$ = listOfColumn$.pipe(switchMap(list => merge(...[listOfColumn$, ...list.map(c => c.calcOperatorChange$)]).pipe(mergeMap(() => listOfColumn$))), map(list => list.filter(item => !!item.nzSortFn || !!item.nzFilterFn).map(item => {\n        const {\n          nzSortFn,\n          sortOrder,\n          nzFilterFn,\n          nzFilterValue,\n          nzSortPriority,\n          nzColumnKey\n        } = item;\n        return {\n          key: nzColumnKey,\n          sortFn: nzSortFn,\n          sortPriority: nzSortPriority,\n          sortOrder: sortOrder,\n          filterFn: nzFilterFn,\n          filterValue: nzFilterValue\n        };\n      })), // TODO: after checked error here\n      delay(0), takeUntil(this.destroy$));\n      listOfCalcOperator$.subscribe(list => {\n        this.nzTableDataService.listOfCalcOperator$.next(list);\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.nzTableStyleService) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTheadComponent.ɵfac = function NzTheadComponent_Factory(t) {\n  return new (t || NzTheadComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzTableStyleService, 8), i0.ɵɵdirectiveInject(NzTableDataService, 8));\n};\n\nNzTheadComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTheadComponent,\n  selectors: [[\"thead\", 9, \"ant-table-thead\"]],\n  contentQueries: function NzTheadComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzTrDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NzThAddOnComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzTrDirective = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzThAddOnComponent = _t);\n    }\n  },\n  viewQuery: function NzTheadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c13, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  outputs: {\n    nzSortOrderChange: \"nzSortOrderChange\"\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 1,\n  consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzTheadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzTheadComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NzTheadComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isInsideTable);\n    }\n  },\n  directives: [i3$1.NgIf, i3$1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTheadComponent, [{\n    type: Component,\n    args: [{\n      selector: 'thead:not(.ant-table-thead)',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NzTableStyleService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: NzTableDataService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    templateRef: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: true\n      }]\n    }],\n    listOfNzTrDirective: [{\n      type: ContentChildren,\n      args: [NzTrDirective, {\n        descendants: true\n      }]\n    }],\n    listOfNzThAddOnComponent: [{\n      type: ContentChildren,\n      args: [NzThAddOnComponent, {\n        descendants: true\n      }]\n    }],\n    nzSortOrderChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTrExpandDirective {\n  constructor() {\n    this.nzExpand = true;\n  }\n\n}\n\nNzTrExpandDirective.ɵfac = function NzTrExpandDirective_Factory(t) {\n  return new (t || NzTrExpandDirective)();\n};\n\nNzTrExpandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTrExpandDirective,\n  selectors: [[\"tr\", \"nzExpand\", \"\"]],\n  hostAttrs: [1, \"ant-table-expanded-row\"],\n  hostVars: 1,\n  hostBindings: function NzTrExpandDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"hidden\", !ctx.nzExpand);\n    }\n  },\n  inputs: {\n    nzExpand: \"nzExpand\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTrExpandDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tr[nzExpand]',\n      host: {\n        class: 'ant-table-expanded-row',\n        '[hidden]': `!nzExpand`\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzExpand: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTableModule {}\n\nNzTableModule.ɵfac = function NzTableModule_Factory(t) {\n  return new (t || NzTableModule)();\n};\n\nNzTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTableModule\n});\nNzTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, NzMenuModule, FormsModule, NzOutletModule, NzRadioModule, NzCheckboxModule, NzDropDownModule, NzButtonModule, CommonModule, PlatformModule, NzPaginationModule, NzResizeObserverModule, NzSpinModule, NzI18nModule, NzIconModule, NzEmptyModule, ScrollingModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzTableComponent, NzThAddOnComponent, NzTableCellDirective, NzThMeasureDirective, NzTdAddOnComponent, NzTheadComponent, NzTbodyComponent, NzTrDirective, NzTrExpandDirective, NzTableVirtualScrollDirective, NzCellFixedDirective, NzTableContentComponent, NzTableTitleFooterComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTrMeasureComponent, NzRowIndentDirective, NzRowExpandButtonDirective, NzCellBreakWordDirective, NzCellAlignDirective, NzTableSortersComponent, NzTableFilterComponent, NzTableSelectionComponent, NzCellEllipsisDirective, NzFilterTriggerComponent, NzTableFixedRowComponent, NzThSelectionComponent],\n      exports: [NzTableComponent, NzThAddOnComponent, NzTableCellDirective, NzThMeasureDirective, NzTdAddOnComponent, NzTheadComponent, NzTbodyComponent, NzTrDirective, NzTableVirtualScrollDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzTrExpandDirective, NzCellBreakWordDirective, NzCellAlignDirective, NzCellEllipsisDirective, NzTableFixedRowComponent, NzThSelectionComponent],\n      imports: [BidiModule, NzMenuModule, FormsModule, NzOutletModule, NzRadioModule, NzCheckboxModule, NzDropDownModule, NzButtonModule, CommonModule, PlatformModule, NzPaginationModule, NzResizeObserverModule, NzSpinModule, NzI18nModule, NzIconModule, NzEmptyModule, ScrollingModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCellAlignDirective, NzCellBreakWordDirective, NzCellEllipsisDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzRowExpandButtonDirective, NzRowIndentDirective, NzTableCellDirective, NzTableComponent, NzTableContentComponent, NzTableDataService, NzTableFilterComponent, NzTableFixedRowComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTableModule, NzTableSelectionComponent, NzTableSortersComponent, NzTableStyleService, NzTableTitleFooterComponent, NzTableVirtualScrollDirective, NzTbodyComponent, NzTdAddOnComponent, NzThAddOnComponent, NzThMeasureDirective, NzThSelectionComponent, NzTheadComponent, NzTrDirective, NzTrExpandDirective, NzTrMeasureComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-table.mjs"],"names":["i5","BidiModule","i1$4","PlatformModule","i4$2","CdkVirtualScrollViewport","ScrollingModule","i3$1","CommonModule","i0","EventEmitter","ElementRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","Directive","Injectable","Optional","ViewChildren","ContentChild","ContentChildren","NgModule","i11","FormsModule","i6","NzButtonModule","i1$3","NzResizeObserverModule","i1$2","NzCheckboxModule","i1$5","NzOutletModule","i3","NzDropDownDirective","NzDropDownModule","i4$1","NzEmptyModule","i1$1","NzI18nModule","i9","NzIconModule","i10","NzMenuModule","i10$1","NzPaginationModule","i4","NzRadioModule","i6$1","NzSpinModule","__decorate","fromEvent","Subject","ReplaySubject","BehaviorSubject","combineLatest","merge","EMPTY","of","takeUntil","map","startWith","switchMap","debounceTime","delay","filter","distinctUntilChanged","skip","mergeMap","i1","WithConfig","i2","NzDestroyService","InputBoolean","arraysEqual","isNil","measureScrollbar","i8","i12","NZ_CONFIG_MODULE_NAME$1","NzFilterTriggerComponent","constructor","nzConfigService","ngZone","cdr","destroy$","_nzModuleName","nzActive","nzVisible","nzBackdrop","nzVisibleChange","onVisibleChange","visible","next","hide","markForCheck","show","ngOnInit","runOutsideAngular","nzDropdown","nativeElement","pipe","subscribe","event","stopPropagation","ɵfac","NzConfigService","NgZone","ChangeDetectorRef","ɵcmp","prototype","type","args","selector","exportAs","changeDetection","OnPush","preserveWhitespaces","encapsulation","None","template","providers","nzDropdownMenu","static","read","NzTableFilterComponent","i18n","contentTemplate","customFilter","extraTemplate","filterMultiple","listOfFilter","filterChange","isChecked","isVisible","listOfParsedFilter","listOfChecked","trackByValue","_","item","value","check","Object","assign","checked","getCheckedStatus","confirm","emitFilterData","reset","parseListOfFilter","emit","length","byDefault","text","some","localeChange","locale","getLocaleData","ngOnChanges","changes","ngOnDestroy","complete","NzI18nService","NzDropdownMenuComponent","NzRadioComponent","NzCheckboxComponent","NzButtonComponent","NgTemplateOutlet","NgIf","ɵNzTransitionPatchDirective","NzIconDirective","NzMenuDirective","NgForOf","NzMenuItemDirective","NgControlStatus","NgModel","NzWaveDirective","host","class","NzRowExpandButtonDirective","expand","spaceMode","expandChange","onHostClick","ɵdir","NzRowIndentDirective","indentSize","NzTableSelectionComponent","listOfSelections","disabled","indeterminate","showCheckbox","showRowSelection","checkedChange","onCheckedChange","NzTableSortersComponent","sortDirections","sortOrder","isUp","isDown","indexOf","NzCellFixedDirective","renderer","elementRef","nzRight","nzLeft","colspan","colSpan","changes$","isAutoLeft","isAutoRight","isFixedLeft","isFixedRight","isFixed","setAutoLeftWidth","autoLeft","setStyle","setAutoRightWidth","autoRight","setIsFirstRight","isFirstRight","setFixClass","setIsLastLeft","isLastLeft","flag","className","removeClass","addClass","validatePx","Renderer2","NzTableStyleService","theadTemplate$","hasFixLeft$","hasFixRight$","hostWidth$","columnCount$","showEmpty$","noResult$","listOfThWidthConfigPx$","tableWidthConfigPx$","manualWidthConfigPx$","widthConfig","listOfWidth","listOfAutoWidthPx$","listOfListOfThWidthPx$","autoWidth","manualWidth","width","index","listOfMeasureColumn$","listOfListOfThWidth$","list","parseInt","enableAutoMeasure$","setTheadTemplate","setHasFixLeft","hasFixLeft","setHasFixRight","hasFixRight","setTableWidthConfig","setListOfTh","listOfTh","columnCount","forEach","th","listOfThPx","nzWidth","setListOfMeasureColumn","listOfKeys","i","push","setListOfAutoWidth","listOfAutoWidth","setShowEmpty","showEmpty","setNoResult","noResult","setScroll","scrollX","scrollY","enableAutoMeasure","ɵprov","NzTableCellDirective","nzTableStyleService","isInsideTable","decorators","NzTdAddOnComponent","nzChecked","nzDisabled","nzIndeterminate","nzIndentSize","nzShowExpand","nzShowCheckbox","nzExpand","nzCheckedChange","nzExpandChange","isNzShowExpandChanged","isNzShowCheckboxChanged","onExpandChange","isFirstChange","firstChange","currentValue","undefined","NzThAddOnComponent","manualClickOrder$","calcOperatorChange$","nzFilterValue","sortOrderChange$","isNzShowSortChanged","isNzShowFilterChanged","nzFilterMultiple","nzSortOrder","nzSortPriority","nzSortDirections","nzFilters","nzSortFn","nzFilterFn","nzShowSort","nzShowFilter","nzCustomFilter","nzSortOrderChange","nzFilterChange","getNextSortDirection","current","emitNextSortValue","nextOrder","setSortOrder","order","clearSortOrder","onFilterValueChange","updateCalcOperator","listOfValue","nzColumnKey","NzThMeasureDirective","rowspan","rowSpan","col","setAttribute","removeAttribute","row","NzThSelectionComponent","nzSelections","nzShowRowSelection","NzCellAlignDirective","nzAlign","NzCellEllipsisDirective","nzEllipsis","NzCellBreakWordDirective","nzBreakWord","NzTableContentComponent","tableLayout","theadTemplate","listOfColWidth","NzTableFixedRowComponent","ngAfterViewInit","count","tdElement","AsyncPipe","NzTableInnerDefaultComponent","NzTrMeasureComponent","nzResizeObserver","listOfMeasureColumn","trackByFunc","key","listOfTdElement","toArray","observe","entry","target","getBoundingClientRect","Math","floor","data","run","NzResizeObserver","NzTbodyComponent","onListOfAutoWidthChange","NzEmbedEmptyComponent","NzTableInnerScrollComponent","platform","resizeService","virtualTemplate","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","virtualForTrackBy","headerStyleMap","bodyStyleMap","verticalScrollBarWidth","noDateVirtualHeight","data$","scroll$","setScrollPositionClassName","clear","scrollWidth","scrollLeft","clientWidth","tableBodyElement","leftClassName","rightClassName","tableMainElement","hasVerticalScrollBar","overflowX","overflowY","maxHeight","isBrowser","scrollEvent$","resize$","setClassName$","tableHeaderElement","Platform","NzResizeService","NgStyle","CdkFixedSizeVirtualScroll","CdkVirtualForOf","cdkVirtualScrollViewport","NzTableVirtualScrollDirective","templateRef","ngTemplateContextGuard","_dir","_ctx","TemplateRef","NzTableDataService","pageIndex$","frontPagination$","pageSize$","listOfData$","pageIndexDistinct$","pageSizeDistinct$","listOfCalcOperator$","queryParams$","pageIndex","pageSize","listOfCalc","sort","sortFn","filterFn","filterValue","listOfDataAfterCalc$","listOfData","listOfCalcOperator","listOfDataAfterCalc","listOfFilterOperator","isReset","Array","isArray","listOfSortOperator","a","b","sortPriority","record1","record2","compareResult","listOfFrontEndCurrentPageData$","maxPageIndex","ceil","slice","listOfCurrentPageData$","pagination","total$","updatePageSize","size","updateFrontPagination","updatePageIndex","updateListOfData","NzTableTitleFooterComponent","title","footer","NzStringTemplateOutletDirective","NZ_CONFIG_MODULE_NAME","NzTableComponent","nzTableDataService","directionality","nzTableLayout","nzShowTotal","nzItemRender","nzTitle","nzFooter","nzNoResult","nzPageSizeOptions","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualForTrackBy","nzLoadingDelay","nzPageIndex","nzPageSize","nzTotal","nzWidthConfig","nzData","nzPaginationPosition","nzScroll","x","y","nzPaginationType","nzFrontPagination","nzTemplateMode","nzShowPagination","nzLoading","nzOuterBordered","nzLoadingIndicator","nzBordered","nzSize","nzShowSizeChanger","nzHideOnSinglePage","nzShowQuickJumper","nzSimple","nzPageSizeChange","nzPageIndexChange","nzQueryParams","nzCurrentPageDataChange","listOfAutoColWidth","listOfManualColWidth","showPagination","templateMode$","dir","getConfigChangeEventForComponent","onPageSizeChange","onPageIndexChange","_a","change","direction","detectChanges","total","templateMode","empty","setScrollOnChanges","updateShowPagination","scrollBarWidth","nzTableInnerScrollComponent","Directionality","NzSpinComponent","NzPaginationComponent","nzVirtualScrollDirective","NzTrDirective","listOfFixedColumns$","listOfColumns$","listOfFixedColumnsChanges$","c","listOfFixedLeftColumnChanges$","listOfFixedRightColumnChanges$","listOfColumnsChanges$","ngAfterContentInit","listOfCellFixedDirective","listOfNzThDirective","listOfFixedLeft","cell","listOfFixedRight","listOfLeftCell","currentArray","reduce","pre","cur","listOfRightCell","NzTheadComponent","firstTableRow$","listOfNzTrDirective","first","firstTableRow","enable","firstTr","listOfFixedLeftColumn","listOfFixedRightColumn","listOfColumn$","listOfNzThAddOnComponent","manualSort$","emitValue","removeChild","parentNode","descendants","NzTrExpandDirective","NzTableModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$4 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4$2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Directive, Injectable, Optional, ViewChildren, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i11 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i6 from 'ng-zorro-antd/button';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport * as i1$3 from 'ng-zorro-antd/cdk/resize-observer';\nimport { NzResizeObserverModule } from 'ng-zorro-antd/cdk/resize-observer';\nimport * as i1$2 from 'ng-zorro-antd/checkbox';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport * as i1$5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i3 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownDirective, NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i4$1 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i1$1 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i9 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i10 from 'ng-zorro-antd/menu';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport * as i10$1 from 'ng-zorro-antd/pagination';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport * as i4 from 'ng-zorro-antd/radio';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport * as i6$1 from 'ng-zorro-antd/spin';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { __decorate } from 'tslib';\nimport { fromEvent, Subject, ReplaySubject, BehaviorSubject, combineLatest, merge, EMPTY, of } from 'rxjs';\nimport { takeUntil, map, startWith, switchMap, debounceTime, delay, filter, distinctUntilChanged, skip, mergeMap } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i2 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean, arraysEqual, isNil, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/core/transition-patch';\nimport * as i12 from 'ng-zorro-antd/core/wave';\n\nconst NZ_CONFIG_MODULE_NAME$1 = 'filterTrigger';\nclass NzFilterTriggerComponent {\n    constructor(nzConfigService, ngZone, cdr, destroy$) {\n        this.nzConfigService = nzConfigService;\n        this.ngZone = ngZone;\n        this.cdr = cdr;\n        this.destroy$ = destroy$;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME$1;\n        this.nzActive = false;\n        this.nzVisible = false;\n        this.nzBackdrop = false;\n        this.nzVisibleChange = new EventEmitter();\n    }\n    onVisibleChange(visible) {\n        this.nzVisible = visible;\n        this.nzVisibleChange.next(visible);\n    }\n    hide() {\n        this.nzVisible = false;\n        this.cdr.markForCheck();\n    }\n    show() {\n        this.nzVisible = true;\n        this.cdr.markForCheck();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.nzDropdown.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                event.stopPropagation();\n            });\n        });\n    }\n}\nNzFilterTriggerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFilterTriggerComponent, deps: [{ token: i1.NzConfigService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i2.NzDestroyService }], target: i0.ɵɵFactoryTarget.Component });\nNzFilterTriggerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzFilterTriggerComponent, selector: \"nz-filter-trigger\", inputs: { nzActive: \"nzActive\", nzDropdownMenu: \"nzDropdownMenu\", nzVisible: \"nzVisible\", nzBackdrop: \"nzBackdrop\" }, outputs: { nzVisibleChange: \"nzVisibleChange\" }, providers: [NzDestroyService], viewQueries: [{ propertyName: \"nzDropdown\", first: true, predicate: NzDropDownDirective, descendants: true, read: ElementRef, static: true }], exportAs: [\"nzFilterTrigger\"], ngImport: i0, template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzBackdrop]=\"nzBackdrop\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true, directives: [{ type: i3.NzDropDownDirective, selector: \"[nz-dropdown]\", inputs: [\"nzDropdownMenu\", \"nzTrigger\", \"nzMatchWidthElement\", \"nzBackdrop\", \"nzClickHide\", \"nzDisabled\", \"nzVisible\", \"nzOverlayClassName\", \"nzOverlayStyle\", \"nzPlacement\"], outputs: [\"nzVisibleChange\"], exportAs: [\"nzDropdown\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzFilterTriggerComponent.prototype, \"nzBackdrop\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzFilterTriggerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-filter-trigger',\n                    exportAs: `nzFilterTrigger`,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzBackdrop]=\"nzBackdrop\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `,\n                    providers: [NzDestroyService]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.NzConfigService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i2.NzDestroyService }]; }, propDecorators: { nzActive: [{\n                type: Input\n            }], nzDropdownMenu: [{\n                type: Input\n            }], nzVisible: [{\n                type: Input\n            }], nzBackdrop: [{\n                type: Input\n            }], nzVisibleChange: [{\n                type: Output\n            }], nzDropdown: [{\n                type: ViewChild,\n                args: [NzDropDownDirective, { static: true, read: ElementRef }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableFilterComponent {\n    constructor(cdr, i18n) {\n        this.cdr = cdr;\n        this.i18n = i18n;\n        this.contentTemplate = null;\n        this.customFilter = false;\n        this.extraTemplate = null;\n        this.filterMultiple = true;\n        this.listOfFilter = [];\n        this.filterChange = new EventEmitter();\n        this.destroy$ = new Subject();\n        this.isChecked = false;\n        this.isVisible = false;\n        this.listOfParsedFilter = [];\n        this.listOfChecked = [];\n    }\n    trackByValue(_, item) {\n        return item.value;\n    }\n    check(filter) {\n        if (this.filterMultiple) {\n            this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n                if (item === filter) {\n                    return Object.assign(Object.assign({}, item), { checked: !filter.checked });\n                }\n                else {\n                    return item;\n                }\n            });\n            filter.checked = !filter.checked;\n        }\n        else {\n            this.listOfParsedFilter = this.listOfParsedFilter.map(item => (Object.assign(Object.assign({}, item), { checked: item === filter })));\n        }\n        this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n    confirm() {\n        this.isVisible = false;\n        this.emitFilterData();\n    }\n    reset() {\n        this.isVisible = false;\n        this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n        this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n        this.emitFilterData();\n    }\n    onVisibleChange(value) {\n        this.isVisible = value;\n        if (!value) {\n            this.emitFilterData();\n        }\n        else {\n            this.listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n        }\n    }\n    emitFilterData() {\n        const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n        if (!arraysEqual(this.listOfChecked, listOfChecked)) {\n            if (this.filterMultiple) {\n                this.filterChange.emit(listOfChecked);\n            }\n            else {\n                this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n            }\n        }\n    }\n    parseListOfFilter(listOfFilter, reset) {\n        return listOfFilter.map(item => {\n            const checked = reset ? false : !!item.byDefault;\n            return { text: item.text, value: item.value, checked };\n        });\n    }\n    getCheckedStatus(listOfParsedFilter) {\n        return listOfParsedFilter.some(item => item.checked);\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Table');\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { listOfFilter } = changes;\n        if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n            this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n            this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTableFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableFilterComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.NzI18nService }], target: i0.ɵɵFactoryTarget.Component });\nNzTableFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableFilterComponent, selector: \"nz-table-filter\", inputs: { contentTemplate: \"contentTemplate\", customFilter: \"customFilter\", extraTemplate: \"extraTemplate\", filterMultiple: \"filterMultiple\", listOfFilter: \"listOfFilter\" }, outputs: { filterChange: \"filterChange\" }, host: { classAttribute: \"ant-table-filter-column\" }, usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-table-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li\n              nz-menu-item\n              [nzSelected]=\"f.checked\"\n              *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\"\n              (click)=\"check(f)\"\n            >\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">\n              {{ locale.filterReset }}\n            </button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `, isInline: true, components: [{ type: NzFilterTriggerComponent, selector: \"nz-filter-trigger\", inputs: [\"nzActive\", \"nzDropdownMenu\", \"nzVisible\", \"nzBackdrop\"], outputs: [\"nzVisibleChange\"], exportAs: [\"nzFilterTrigger\"] }, { type: i3.NzDropdownMenuComponent, selector: \"nz-dropdown-menu\", exportAs: [\"nzDropdownMenu\"] }, { type: i4.NzRadioComponent, selector: \"[nz-radio],[nz-radio-button]\", inputs: [\"nzValue\", \"nzDisabled\", \"nzAutoFocus\"], exportAs: [\"nzRadio\"] }, { type: i1$2.NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: [\"nzValue\", \"nzAutoFocus\", \"nzDisabled\", \"nzIndeterminate\", \"nzChecked\", \"nzId\"], outputs: [\"nzCheckedChange\"], exportAs: [\"nzCheckbox\"] }, { type: i6.NzButtonComponent, selector: \"button[nz-button], a[nz-button]\", inputs: [\"nzBlock\", \"nzGhost\", \"nzSearch\", \"nzLoading\", \"nzDanger\", \"disabled\", \"tabIndex\", \"nzType\", \"nzShape\", \"nzSize\"], exportAs: [\"nzButton\"] }], directives: [{ type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i8.ɵNzTransitionPatchDirective, selector: \"[nz-button], nz-button-group, [nz-icon], [nz-menu-item], [nz-submenu], nz-select-top-control, nz-select-placeholder, nz-input-group\", inputs: [\"hidden\"] }, { type: i9.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i10.NzMenuDirective, selector: \"[nz-menu]\", inputs: [\"nzInlineIndent\", \"nzTheme\", \"nzMode\", \"nzInlineCollapsed\", \"nzSelectable\"], outputs: [\"nzClick\"], exportAs: [\"nzMenu\"] }, { type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i10.NzMenuItemDirective, selector: \"[nz-menu-item]\", inputs: [\"nzPaddingLeft\", \"nzDisabled\", \"nzSelected\", \"nzDanger\", \"nzMatchRouterExact\", \"nzMatchRouter\"], exportAs: [\"nzMenuItem\"] }, { type: i11.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i11.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i12.NzWaveDirective, selector: \"[nz-wave],button[nz-button]:not([nzType=\\\"link\\\"]):not([nzType=\\\"text\\\"])\", inputs: [\"nzWaveExtraNode\"], exportAs: [\"nzWave\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table-filter',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span class=\"ant-table-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li\n              nz-menu-item\n              [nzSelected]=\"f.checked\"\n              *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\"\n              (click)=\"check(f)\"\n            >\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">\n              {{ locale.filterReset }}\n            </button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `,\n                    host: { class: 'ant-table-filter-column' }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.NzI18nService }]; }, propDecorators: { contentTemplate: [{\n                type: Input\n            }], customFilter: [{\n                type: Input\n            }], extraTemplate: [{\n                type: Input\n            }], filterMultiple: [{\n                type: Input\n            }], listOfFilter: [{\n                type: Input\n            }], filterChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRowExpandButtonDirective {\n    constructor() {\n        this.expand = false;\n        this.spaceMode = false;\n        this.expandChange = new EventEmitter();\n    }\n    onHostClick() {\n        if (!this.spaceMode) {\n            this.expand = !this.expand;\n            this.expandChange.next(this.expand);\n        }\n    }\n}\nNzRowExpandButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzRowExpandButtonDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzRowExpandButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzRowExpandButtonDirective, selector: \"button[nz-row-expand-button]\", inputs: { expand: \"expand\", spaceMode: \"spaceMode\" }, outputs: { expandChange: \"expandChange\" }, host: { listeners: { \"click\": \"onHostClick()\" }, properties: { \"type\": \"'button'\", \"class.ant-table-row-expand-icon-expanded\": \"!spaceMode && expand === true\", \"class.ant-table-row-expand-icon-collapsed\": \"!spaceMode && expand === false\", \"class.ant-table-row-expand-icon-spaced\": \"spaceMode\" }, classAttribute: \"ant-table-row-expand-icon\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzRowExpandButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[nz-row-expand-button]',\n                    host: {\n                        class: 'ant-table-row-expand-icon',\n                        '[type]': `'button'`,\n                        '[class.ant-table-row-expand-icon-expanded]': `!spaceMode && expand === true`,\n                        '[class.ant-table-row-expand-icon-collapsed]': `!spaceMode && expand === false`,\n                        '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n                        '(click)': 'onHostClick()'\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { expand: [{\n                type: Input\n            }], spaceMode: [{\n                type: Input\n            }], expandChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRowIndentDirective {\n    constructor() {\n        this.indentSize = 0;\n    }\n}\nNzRowIndentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzRowIndentDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzRowIndentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzRowIndentDirective, selector: \"nz-row-indent\", inputs: { indentSize: \"indentSize\" }, host: { properties: { \"style.padding-left.px\": \"indentSize\" }, classAttribute: \"ant-table-row-indent\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzRowIndentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'nz-row-indent',\n                    host: {\n                        class: 'ant-table-row-indent',\n                        '[style.padding-left.px]': 'indentSize'\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { indentSize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableSelectionComponent {\n    constructor() {\n        this.listOfSelections = [];\n        this.checked = false;\n        this.disabled = false;\n        this.indeterminate = false;\n        this.showCheckbox = false;\n        this.showRowSelection = false;\n        this.checkedChange = new EventEmitter();\n    }\n    onCheckedChange(checked) {\n        this.checked = checked;\n        this.checkedChange.emit(checked);\n    }\n}\nNzTableSelectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableSelectionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzTableSelectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableSelectionComponent, selector: \"nz-table-selection\", inputs: { listOfSelections: \"listOfSelections\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", showCheckbox: \"showCheckbox\", showRowSelection: \"showRowSelection\" }, outputs: { checkedChange: \"checkedChange\" }, host: { classAttribute: \"ant-table-selection\" }, ngImport: i0, template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `, isInline: true, components: [{ type: i1$2.NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: [\"nzValue\", \"nzAutoFocus\", \"nzDisabled\", \"nzIndeterminate\", \"nzChecked\", \"nzId\"], outputs: [\"nzCheckedChange\"], exportAs: [\"nzCheckbox\"] }, { type: i3.NzDropdownMenuComponent, selector: \"nz-dropdown-menu\", exportAs: [\"nzDropdownMenu\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i11.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i11.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i3.NzDropDownDirective, selector: \"[nz-dropdown]\", inputs: [\"nzDropdownMenu\", \"nzTrigger\", \"nzMatchWidthElement\", \"nzBackdrop\", \"nzClickHide\", \"nzDisabled\", \"nzVisible\", \"nzOverlayClassName\", \"nzOverlayStyle\", \"nzPlacement\"], outputs: [\"nzVisibleChange\"], exportAs: [\"nzDropdown\"] }, { type: i8.ɵNzTransitionPatchDirective, selector: \"[nz-button], nz-button-group, [nz-icon], [nz-menu-item], [nz-submenu], nz-select-top-control, nz-select-placeholder, nz-input-group\", inputs: [\"hidden\"] }, { type: i9.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i10.NzMenuDirective, selector: \"[nz-menu]\", inputs: [\"nzInlineIndent\", \"nzTheme\", \"nzMode\", \"nzInlineCollapsed\", \"nzSelectable\"], outputs: [\"nzClick\"], exportAs: [\"nzMenu\"] }, { type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i10.NzMenuItemDirective, selector: \"[nz-menu-item]\", inputs: [\"nzPaddingLeft\", \"nzDisabled\", \"nzSelected\", \"nzDanger\", \"nzMatchRouterExact\", \"nzMatchRouter\"], exportAs: [\"nzMenuItem\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableSelectionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table-selection',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `,\n                    host: { class: 'ant-table-selection' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { listOfSelections: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }], showCheckbox: [{\n                type: Input\n            }], showRowSelection: [{\n                type: Input\n            }], checkedChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableSortersComponent {\n    constructor() {\n        this.sortDirections = ['ascend', 'descend', null];\n        this.sortOrder = null;\n        this.contentTemplate = null;\n        this.isUp = false;\n        this.isDown = false;\n    }\n    ngOnChanges(changes) {\n        const { sortDirections } = changes;\n        if (sortDirections) {\n            this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n            this.isDown = this.sortDirections.indexOf('descend') !== -1;\n        }\n    }\n}\nNzTableSortersComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableSortersComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzTableSortersComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableSortersComponent, selector: \"nz-table-sorters\", inputs: { sortDirections: \"sortDirections\", sortOrder: \"sortOrder\", contentTemplate: \"contentTemplate\" }, host: { classAttribute: \"ant-table-column-sorters\" }, usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-table-column-title\"><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i\n          nz-icon\n          nzType=\"caret-up\"\n          *ngIf=\"isUp\"\n          class=\"ant-table-column-sorter-up\"\n          [class.active]=\"sortOrder === 'ascend'\"\n        ></i>\n        <i\n          nz-icon\n          nzType=\"caret-down\"\n          *ngIf=\"isDown\"\n          class=\"ant-table-column-sorter-down\"\n          [class.active]=\"sortOrder === 'descend'\"\n        ></i>\n      </span>\n    </span>\n  `, isInline: true, directives: [{ type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i8.ɵNzTransitionPatchDirective, selector: \"[nz-button], nz-button-group, [nz-icon], [nz-menu-item], [nz-submenu], nz-select-top-control, nz-select-placeholder, nz-input-group\", inputs: [\"hidden\"] }, { type: i9.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableSortersComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table-sorters',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span class=\"ant-table-column-title\"><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i\n          nz-icon\n          nzType=\"caret-up\"\n          *ngIf=\"isUp\"\n          class=\"ant-table-column-sorter-up\"\n          [class.active]=\"sortOrder === 'ascend'\"\n        ></i>\n        <i\n          nz-icon\n          nzType=\"caret-down\"\n          *ngIf=\"isDown\"\n          class=\"ant-table-column-sorter-down\"\n          [class.active]=\"sortOrder === 'descend'\"\n        ></i>\n      </span>\n    </span>\n  `,\n                    host: { class: 'ant-table-column-sorters' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { sortDirections: [{\n                type: Input\n            }], sortOrder: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCellFixedDirective {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nzRight = false;\n        this.nzLeft = false;\n        this.colspan = null;\n        this.colSpan = null;\n        this.changes$ = new Subject();\n        this.isAutoLeft = false;\n        this.isAutoRight = false;\n        this.isFixedLeft = false;\n        this.isFixedRight = false;\n        this.isFixed = false;\n    }\n    setAutoLeftWidth(autoLeft) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n    }\n    setAutoRightWidth(autoRight) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n    }\n    setIsFirstRight(isFirstRight) {\n        this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n    }\n    setIsLastLeft(isLastLeft) {\n        this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n    }\n    setFixClass(flag, className) {\n        // the setFixClass function may call many times, so remove it first.\n        this.renderer.removeClass(this.elementRef.nativeElement, className);\n        if (flag) {\n            this.renderer.addClass(this.elementRef.nativeElement, className);\n        }\n    }\n    ngOnChanges() {\n        this.setIsFirstRight(false);\n        this.setIsLastLeft(false);\n        this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n        this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n        this.isFixedLeft = this.nzLeft !== false;\n        this.isFixedRight = this.nzRight !== false;\n        this.isFixed = this.isFixedLeft || this.isFixedRight;\n        const validatePx = (value) => {\n            if (typeof value === 'string' && value !== '') {\n                return value;\n            }\n            else {\n                return null;\n            }\n        };\n        this.setAutoLeftWidth(validatePx(this.nzLeft));\n        this.setAutoRightWidth(validatePx(this.nzRight));\n        this.changes$.next();\n    }\n}\nNzCellFixedDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellFixedDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzCellFixedDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCellFixedDirective, selector: \"td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]\", inputs: { nzRight: \"nzRight\", nzLeft: \"nzLeft\", colspan: \"colspan\", colSpan: \"colSpan\" }, host: { properties: { \"class.ant-table-cell-fix-right\": \"isFixedRight\", \"class.ant-table-cell-fix-left\": \"isFixedLeft\", \"style.position\": \"isFixed? 'sticky' : null\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellFixedDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n                    host: {\n                        '[class.ant-table-cell-fix-right]': `isFixedRight`,\n                        '[class.ant-table-cell-fix-left]': `isFixedLeft`,\n                        '[style.position]': `isFixed? 'sticky' : null`\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzRight: [{\n                type: Input\n            }], nzLeft: [{\n                type: Input\n            }], colspan: [{\n                type: Input\n            }], colSpan: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableStyleService {\n    constructor() {\n        this.theadTemplate$ = new ReplaySubject(1);\n        this.hasFixLeft$ = new ReplaySubject(1);\n        this.hasFixRight$ = new ReplaySubject(1);\n        this.hostWidth$ = new ReplaySubject(1);\n        this.columnCount$ = new ReplaySubject(1);\n        this.showEmpty$ = new ReplaySubject(1);\n        this.noResult$ = new ReplaySubject(1);\n        this.listOfThWidthConfigPx$ = new BehaviorSubject([]);\n        this.tableWidthConfigPx$ = new BehaviorSubject([]);\n        this.manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(map(([widthConfig, listOfWidth]) => (widthConfig.length ? widthConfig : listOfWidth)));\n        this.listOfAutoWidthPx$ = new ReplaySubject(1);\n        this.listOfListOfThWidthPx$ = merge(\n        /** init with manual width **/\n        this.manualWidthConfigPx$, combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(map(([autoWidth, manualWidth]) => {\n            /** use autoWidth until column length match **/\n            if (autoWidth.length === manualWidth.length) {\n                return autoWidth.map((width, index) => {\n                    if (width === '0px') {\n                        return manualWidth[index] || null;\n                    }\n                    else {\n                        return manualWidth[index] || width;\n                    }\n                });\n            }\n            else {\n                return manualWidth;\n            }\n        })));\n        this.listOfMeasureColumn$ = new ReplaySubject(1);\n        this.listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n        this.enableAutoMeasure$ = new ReplaySubject(1);\n    }\n    setTheadTemplate(template) {\n        this.theadTemplate$.next(template);\n    }\n    setHasFixLeft(hasFixLeft) {\n        this.hasFixLeft$.next(hasFixLeft);\n    }\n    setHasFixRight(hasFixRight) {\n        this.hasFixRight$.next(hasFixRight);\n    }\n    setTableWidthConfig(widthConfig) {\n        this.tableWidthConfigPx$.next(widthConfig);\n    }\n    setListOfTh(listOfTh) {\n        let columnCount = 0;\n        listOfTh.forEach(th => {\n            columnCount += (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n        });\n        const listOfThPx = listOfTh.map(item => item.nzWidth);\n        this.columnCount$.next(columnCount);\n        this.listOfThWidthConfigPx$.next(listOfThPx);\n    }\n    setListOfMeasureColumn(listOfTh) {\n        const listOfKeys = [];\n        listOfTh.forEach(th => {\n            const length = (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n            for (let i = 0; i < length; i++) {\n                listOfKeys.push(`measure_key_${i}`);\n            }\n        });\n        this.listOfMeasureColumn$.next(listOfKeys);\n    }\n    setListOfAutoWidth(listOfAutoWidth) {\n        this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n    }\n    setShowEmpty(showEmpty) {\n        this.showEmpty$.next(showEmpty);\n    }\n    setNoResult(noResult) {\n        this.noResult$.next(noResult);\n    }\n    setScroll(scrollX, scrollY) {\n        const enableAutoMeasure = !!(scrollX || scrollY);\n        if (!enableAutoMeasure) {\n            this.setListOfAutoWidth([]);\n        }\n        this.enableAutoMeasure$.next(enableAutoMeasure);\n    }\n}\nNzTableStyleService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableStyleService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzTableStyleService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableStyleService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableStyleService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableCellDirective {\n    constructor(nzTableStyleService) {\n        this.isInsideTable = false;\n        this.isInsideTable = !!nzTableStyleService;\n    }\n}\nNzTableCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableCellDirective, deps: [{ token: NzTableStyleService, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzTableCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableCellDirective, selector: \"th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])\", host: { properties: { \"class.ant-table-cell\": \"isInsideTable\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableCellDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n                    host: {\n                        '[class.ant-table-cell]': 'isInsideTable'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NzTableStyleService, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\nclass NzTdAddOnComponent {\n    constructor() {\n        this.nzChecked = false;\n        this.nzDisabled = false;\n        this.nzIndeterminate = false;\n        this.nzIndentSize = 0;\n        this.nzShowExpand = false;\n        this.nzShowCheckbox = false;\n        this.nzExpand = false;\n        this.nzCheckedChange = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        this.isNzShowExpandChanged = false;\n        this.isNzShowCheckboxChanged = false;\n    }\n    onCheckedChange(checked) {\n        this.nzChecked = checked;\n        this.nzCheckedChange.emit(checked);\n    }\n    onExpandChange(expand) {\n        this.nzExpand = expand;\n        this.nzExpandChange.emit(expand);\n    }\n    ngOnChanges(changes) {\n        const isFirstChange = (value) => value && value.firstChange && value.currentValue !== undefined;\n        const { nzExpand, nzChecked, nzShowExpand, nzShowCheckbox } = changes;\n        if (nzShowExpand) {\n            this.isNzShowExpandChanged = true;\n        }\n        if (nzShowCheckbox) {\n            this.isNzShowCheckboxChanged = true;\n        }\n        if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n            this.nzShowExpand = true;\n        }\n        if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n            this.nzShowCheckbox = true;\n        }\n    }\n}\nNzTdAddOnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTdAddOnComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzTdAddOnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTdAddOnComponent, selector: \"td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]\", inputs: { nzChecked: \"nzChecked\", nzDisabled: \"nzDisabled\", nzIndeterminate: \"nzIndeterminate\", nzIndentSize: \"nzIndentSize\", nzShowExpand: \"nzShowExpand\", nzShowCheckbox: \"nzShowCheckbox\", nzExpand: \"nzExpand\" }, outputs: { nzCheckedChange: \"nzCheckedChange\", nzExpandChange: \"nzExpandChange\" }, host: { properties: { \"class.ant-table-cell-with-append\": \"nzShowExpand || nzIndentSize > 0\", \"class.ant-table-selection-column\": \"nzShowCheckbox\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button\n        nz-row-expand-button\n        [expand]=\"nzExpand\"\n        (expandChange)=\"onExpandChange($event)\"\n        [spaceMode]=\"!nzShowExpand\"\n      ></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <ng-content></ng-content>\n  `, isInline: true, components: [{ type: i1$2.NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: [\"nzValue\", \"nzAutoFocus\", \"nzDisabled\", \"nzIndeterminate\", \"nzChecked\", \"nzId\"], outputs: [\"nzCheckedChange\"], exportAs: [\"nzCheckbox\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: NzRowIndentDirective, selector: \"nz-row-indent\", inputs: [\"indentSize\"] }, { type: NzRowExpandButtonDirective, selector: \"button[nz-row-expand-button]\", inputs: [\"expand\", \"spaceMode\"], outputs: [\"expandChange\"] }, { type: i11.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i11.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzTdAddOnComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([\n    InputBoolean()\n], NzTdAddOnComponent.prototype, \"nzShowCheckbox\", void 0);\n__decorate([\n    InputBoolean()\n], NzTdAddOnComponent.prototype, \"nzExpand\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTdAddOnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button\n        nz-row-expand-button\n        [expand]=\"nzExpand\"\n        (expandChange)=\"onExpandChange($event)\"\n        [spaceMode]=\"!nzShowExpand\"\n      ></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <ng-content></ng-content>\n  `,\n                    host: {\n                        '[class.ant-table-cell-with-append]': `nzShowExpand || nzIndentSize > 0`,\n                        '[class.ant-table-selection-column]': `nzShowCheckbox`\n                    }\n                }]\n        }], propDecorators: { nzChecked: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzIndeterminate: [{\n                type: Input\n            }], nzIndentSize: [{\n                type: Input\n            }], nzShowExpand: [{\n                type: Input\n            }], nzShowCheckbox: [{\n                type: Input\n            }], nzExpand: [{\n                type: Input\n            }], nzCheckedChange: [{\n                type: Output\n            }], nzExpandChange: [{\n                type: Output\n            }] } });\n\nclass NzThAddOnComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.manualClickOrder$ = new Subject();\n        this.calcOperatorChange$ = new Subject();\n        this.nzFilterValue = null;\n        this.sortOrder = null;\n        this.sortDirections = ['ascend', 'descend', null];\n        this.sortOrderChange$ = new Subject();\n        this.destroy$ = new Subject();\n        this.isNzShowSortChanged = false;\n        this.isNzShowFilterChanged = false;\n        this.nzFilterMultiple = true;\n        this.nzSortOrder = null;\n        this.nzSortPriority = false;\n        this.nzSortDirections = ['ascend', 'descend', null];\n        this.nzFilters = [];\n        this.nzSortFn = null;\n        this.nzFilterFn = null;\n        this.nzShowSort = false;\n        this.nzShowFilter = false;\n        this.nzCustomFilter = false;\n        this.nzCheckedChange = new EventEmitter();\n        this.nzSortOrderChange = new EventEmitter();\n        this.nzFilterChange = new EventEmitter();\n    }\n    getNextSortDirection(sortDirections, current) {\n        const index = sortDirections.indexOf(current);\n        if (index === sortDirections.length - 1) {\n            return sortDirections[0];\n        }\n        else {\n            return sortDirections[index + 1];\n        }\n    }\n    emitNextSortValue() {\n        if (this.nzShowSort) {\n            const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder);\n            this.setSortOrder(nextOrder);\n            this.manualClickOrder$.next(this);\n        }\n    }\n    setSortOrder(order) {\n        this.sortOrderChange$.next(order);\n    }\n    clearSortOrder() {\n        if (this.sortOrder !== null) {\n            this.setSortOrder(null);\n        }\n    }\n    onFilterValueChange(value) {\n        this.nzFilterChange.emit(value);\n        this.nzFilterValue = value;\n        this.updateCalcOperator();\n    }\n    updateCalcOperator() {\n        this.calcOperatorChange$.next();\n    }\n    ngOnInit() {\n        this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n            if (this.sortOrder !== order) {\n                this.sortOrder = order;\n                this.nzSortOrderChange.emit(order);\n            }\n            this.updateCalcOperator();\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { nzSortDirections, nzFilters, nzSortOrder, nzSortFn, nzFilterFn, nzSortPriority, nzFilterMultiple, nzShowSort, nzShowFilter } = changes;\n        if (nzSortDirections) {\n            if (this.nzSortDirections && this.nzSortDirections.length) {\n                this.sortDirections = this.nzSortDirections;\n            }\n        }\n        if (nzSortOrder) {\n            this.sortOrder = this.nzSortOrder;\n            this.setSortOrder(this.nzSortOrder);\n        }\n        if (nzShowSort) {\n            this.isNzShowSortChanged = true;\n        }\n        if (nzShowFilter) {\n            this.isNzShowFilterChanged = true;\n        }\n        const isFirstChange = (value) => value && value.firstChange && value.currentValue !== undefined;\n        if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n            this.nzShowSort = true;\n        }\n        if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n            this.nzShowFilter = true;\n        }\n        if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n            const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n            this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n        }\n        if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n            this.updateCalcOperator();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzThAddOnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzThAddOnComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzThAddOnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzThAddOnComponent, selector: \"th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]\", inputs: { nzColumnKey: \"nzColumnKey\", nzFilterMultiple: \"nzFilterMultiple\", nzSortOrder: \"nzSortOrder\", nzSortPriority: \"nzSortPriority\", nzSortDirections: \"nzSortDirections\", nzFilters: \"nzFilters\", nzSortFn: \"nzSortFn\", nzFilterFn: \"nzFilterFn\", nzShowSort: \"nzShowSort\", nzShowFilter: \"nzShowFilter\", nzCustomFilter: \"nzCustomFilter\" }, outputs: { nzCheckedChange: \"nzCheckedChange\", nzSortOrderChange: \"nzSortOrderChange\", nzFilterChange: \"nzFilterChange\" }, host: { listeners: { \"click\": \"emitNextSortValue()\" }, properties: { \"class.ant-table-column-has-sorters\": \"nzShowSort\", \"class.ant-table-column-sort\": \"sortOrder === 'descend' || sortOrder === 'ascend'\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters\n        [sortOrder]=\"sortOrder\"\n        [sortDirections]=\"sortDirections\"\n        [contentTemplate]=\"contentTemplate\"\n      ></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `, isInline: true, components: [{ type: NzTableFilterComponent, selector: \"nz-table-filter\", inputs: [\"contentTemplate\", \"customFilter\", \"extraTemplate\", \"filterMultiple\", \"listOfFilter\"], outputs: [\"filterChange\"] }, { type: NzTableSortersComponent, selector: \"nz-table-sorters\", inputs: [\"sortDirections\", \"sortOrder\", \"contentTemplate\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzThAddOnComponent.prototype, \"nzShowSort\", void 0);\n__decorate([\n    InputBoolean()\n], NzThAddOnComponent.prototype, \"nzShowFilter\", void 0);\n__decorate([\n    InputBoolean()\n], NzThAddOnComponent.prototype, \"nzCustomFilter\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzThAddOnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters\n        [sortOrder]=\"sortOrder\"\n        [sortDirections]=\"sortDirections\"\n        [contentTemplate]=\"contentTemplate\"\n      ></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n                    host: {\n                        '[class.ant-table-column-has-sorters]': 'nzShowSort',\n                        '[class.ant-table-column-sort]': `sortOrder === 'descend' || sortOrder === 'ascend'`,\n                        '(click)': 'emitNextSortValue()'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { nzColumnKey: [{\n                type: Input\n            }], nzFilterMultiple: [{\n                type: Input\n            }], nzSortOrder: [{\n                type: Input\n            }], nzSortPriority: [{\n                type: Input\n            }], nzSortDirections: [{\n                type: Input\n            }], nzFilters: [{\n                type: Input\n            }], nzSortFn: [{\n                type: Input\n            }], nzFilterFn: [{\n                type: Input\n            }], nzShowSort: [{\n                type: Input\n            }], nzShowFilter: [{\n                type: Input\n            }], nzCustomFilter: [{\n                type: Input\n            }], nzCheckedChange: [{\n                type: Output\n            }], nzSortOrderChange: [{\n                type: Output\n            }], nzFilterChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzThMeasureDirective {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.changes$ = new Subject();\n        this.nzWidth = null;\n        this.colspan = null;\n        this.colSpan = null;\n        this.rowspan = null;\n        this.rowSpan = null;\n    }\n    ngOnChanges(changes) {\n        const { nzWidth, colspan, rowspan, colSpan, rowSpan } = changes;\n        if (colspan || colSpan) {\n            const col = this.colspan || this.colSpan;\n            if (!isNil(col)) {\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n            }\n            else {\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n            }\n        }\n        if (rowspan || rowSpan) {\n            const row = this.rowspan || this.rowSpan;\n            if (!isNil(row)) {\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n            }\n            else {\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n            }\n        }\n        if (nzWidth || colspan) {\n            this.changes$.next();\n        }\n    }\n}\nNzThMeasureDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzThMeasureDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzThMeasureDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzThMeasureDirective, selector: \"th\", inputs: { nzWidth: \"nzWidth\", colspan: \"colspan\", colSpan: \"colSpan\", rowspan: \"rowspan\", rowSpan: \"rowSpan\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzThMeasureDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'th'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzWidth: [{\n                type: Input\n            }], colspan: [{\n                type: Input\n            }], colSpan: [{\n                type: Input\n            }], rowspan: [{\n                type: Input\n            }], rowSpan: [{\n                type: Input\n            }] } });\n\nclass NzThSelectionComponent {\n    constructor() {\n        this.nzSelections = [];\n        this.nzChecked = false;\n        this.nzDisabled = false;\n        this.nzIndeterminate = false;\n        this.nzShowCheckbox = false;\n        this.nzShowRowSelection = false;\n        this.nzCheckedChange = new EventEmitter();\n        this.isNzShowExpandChanged = false;\n        this.isNzShowCheckboxChanged = false;\n    }\n    onCheckedChange(checked) {\n        this.nzChecked = checked;\n        this.nzCheckedChange.emit(checked);\n    }\n    ngOnChanges(changes) {\n        const isFirstChange = (value) => value && value.firstChange && value.currentValue !== undefined;\n        const { nzChecked, nzSelections, nzShowExpand, nzShowCheckbox } = changes;\n        if (nzShowExpand) {\n            this.isNzShowExpandChanged = true;\n        }\n        if (nzShowCheckbox) {\n            this.isNzShowCheckboxChanged = true;\n        }\n        if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n            this.nzShowRowSelection = true;\n        }\n        if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n            this.nzShowCheckbox = true;\n        }\n    }\n}\nNzThSelectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzThSelectionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzThSelectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzThSelectionComponent, selector: \"th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]\", inputs: { nzSelections: \"nzSelections\", nzChecked: \"nzChecked\", nzDisabled: \"nzDisabled\", nzIndeterminate: \"nzIndeterminate\", nzShowCheckbox: \"nzShowCheckbox\", nzShowRowSelection: \"nzShowRowSelection\" }, outputs: { nzCheckedChange: \"nzCheckedChange\" }, host: { classAttribute: \"ant-table-selection-column\" }, usesOnChanges: true, ngImport: i0, template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `, isInline: true, components: [{ type: NzTableSelectionComponent, selector: \"nz-table-selection\", inputs: [\"listOfSelections\", \"checked\", \"disabled\", \"indeterminate\", \"showCheckbox\", \"showRowSelection\"], outputs: [\"checkedChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzThSelectionComponent.prototype, \"nzShowCheckbox\", void 0);\n__decorate([\n    InputBoolean()\n], NzThSelectionComponent.prototype, \"nzShowRowSelection\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzThSelectionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `,\n                    host: { class: 'ant-table-selection-column' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzSelections: [{\n                type: Input\n            }], nzChecked: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzIndeterminate: [{\n                type: Input\n            }], nzShowCheckbox: [{\n                type: Input\n            }], nzShowRowSelection: [{\n                type: Input\n            }], nzCheckedChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCellAlignDirective {\n    constructor() {\n        this.nzAlign = null;\n    }\n}\nNzCellAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellAlignDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzCellAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCellAlignDirective, selector: \"th[nzAlign],td[nzAlign]\", inputs: { nzAlign: \"nzAlign\" }, host: { properties: { \"style.text-align\": \"nzAlign\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellAlignDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'th[nzAlign],td[nzAlign]',\n                    host: {\n                        '[style.text-align]': 'nzAlign'\n                    }\n                }]\n        }], propDecorators: { nzAlign: [{\n                type: Input\n            }] } });\n\nclass NzCellEllipsisDirective {\n    constructor() {\n        this.nzEllipsis = true;\n    }\n}\nNzCellEllipsisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellEllipsisDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzCellEllipsisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCellEllipsisDirective, selector: \"th[nzEllipsis],td[nzEllipsis]\", inputs: { nzEllipsis: \"nzEllipsis\" }, host: { properties: { \"class.ant-table-cell-ellipsis\": \"nzEllipsis\" } }, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzCellEllipsisDirective.prototype, \"nzEllipsis\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellEllipsisDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'th[nzEllipsis],td[nzEllipsis]',\n                    host: {\n                        '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n                    }\n                }]\n        }], propDecorators: { nzEllipsis: [{\n                type: Input\n            }] } });\n\nclass NzCellBreakWordDirective {\n    constructor() {\n        this.nzBreakWord = true;\n    }\n}\nNzCellBreakWordDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellBreakWordDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzCellBreakWordDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzCellBreakWordDirective, selector: \"th[nzBreakWord],td[nzBreakWord]\", inputs: { nzBreakWord: \"nzBreakWord\" }, host: { properties: { \"style.word-break\": \"nzBreakWord ? 'break-all' : ''\" } }, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzCellBreakWordDirective.prototype, \"nzBreakWord\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzCellBreakWordDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'th[nzBreakWord],td[nzBreakWord]',\n                    host: {\n                        '[style.word-break]': `nzBreakWord ? 'break-all' : ''`\n                    }\n                }]\n        }], propDecorators: { nzBreakWord: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableContentComponent {\n    constructor() {\n        this.tableLayout = 'auto';\n        this.theadTemplate = null;\n        this.contentTemplate = null;\n        this.listOfColWidth = [];\n        this.scrollX = null;\n    }\n}\nNzTableContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableContentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzTableContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableContentComponent, selector: \"table[nz-table-content]\", inputs: { tableLayout: \"tableLayout\", theadTemplate: \"theadTemplate\", contentTemplate: \"contentTemplate\", listOfColWidth: \"listOfColWidth\", scrollX: \"scrollX\" }, host: { properties: { \"style.table-layout\": \"tableLayout\", \"class.ant-table-fixed\": \"scrollX\", \"style.width\": \"scrollX\", \"style.min-width\": \"scrollX ? '100%': null\" } }, ngImport: i0, template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `, isInline: true, directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'table[nz-table-content]',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `,\n                    host: {\n                        '[style.table-layout]': 'tableLayout',\n                        '[class.ant-table-fixed]': 'scrollX',\n                        '[style.width]': 'scrollX',\n                        '[style.min-width]': `scrollX ? '100%': null`\n                    }\n                }]\n        }], propDecorators: { tableLayout: [{\n                type: Input\n            }], theadTemplate: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }], listOfColWidth: [{\n                type: Input\n            }], scrollX: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableFixedRowComponent {\n    constructor(nzTableStyleService, renderer) {\n        this.nzTableStyleService = nzTableStyleService;\n        this.renderer = renderer;\n        this.hostWidth$ = new BehaviorSubject(null);\n        this.enableAutoMeasure$ = new BehaviorSubject(false);\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        if (this.nzTableStyleService) {\n            const { enableAutoMeasure$, hostWidth$ } = this.nzTableStyleService;\n            enableAutoMeasure$.pipe(takeUntil(this.destroy$)).subscribe(this.enableAutoMeasure$);\n            hostWidth$.pipe(takeUntil(this.destroy$)).subscribe(this.hostWidth$);\n        }\n    }\n    ngAfterViewInit() {\n        this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n            this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTableFixedRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableFixedRowComponent, deps: [{ token: NzTableStyleService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNzTableFixedRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableFixedRowComponent, selector: \"tr[nz-table-fixed-row], tr[nzExpand]\", viewQueries: [{ propertyName: \"tdElement\", first: true, predicate: [\"tdElement\"], descendants: true, static: true }], ngImport: i0, template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `, isInline: true, directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"async\": i3$1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableFixedRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: NzTableStyleService }, { type: i0.Renderer2 }]; }, propDecorators: { tdElement: [{\n                type: ViewChild,\n                args: ['tdElement', { static: true }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableInnerDefaultComponent {\n    constructor() {\n        this.tableLayout = 'auto';\n        this.listOfColWidth = [];\n        this.theadTemplate = null;\n        this.contentTemplate = null;\n    }\n}\nNzTableInnerDefaultComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableInnerDefaultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzTableInnerDefaultComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableInnerDefaultComponent, selector: \"nz-table-inner-default\", inputs: { tableLayout: \"tableLayout\", listOfColWidth: \"listOfColWidth\", theadTemplate: \"theadTemplate\", contentTemplate: \"contentTemplate\" }, host: { classAttribute: \"ant-table-container\" }, ngImport: i0, template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `, isInline: true, components: [{ type: NzTableContentComponent, selector: \"table[nz-table-content]\", inputs: [\"tableLayout\", \"theadTemplate\", \"contentTemplate\", \"listOfColWidth\", \"scrollX\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableInnerDefaultComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table-inner-default',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `,\n                    host: { class: 'ant-table-container' }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { tableLayout: [{\n                type: Input\n            }], listOfColWidth: [{\n                type: Input\n            }], theadTemplate: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTrMeasureComponent {\n    constructor(nzResizeObserver, ngZone) {\n        this.nzResizeObserver = nzResizeObserver;\n        this.ngZone = ngZone;\n        this.listOfMeasureColumn = [];\n        this.listOfAutoWidth = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    trackByFunc(_, key) {\n        return key;\n    }\n    ngAfterViewInit() {\n        this.listOfTdElement.changes\n            .pipe(startWith(this.listOfTdElement))\n            .pipe(switchMap(list => combineLatest(list.toArray().map((item) => this.nzResizeObserver.observe(item).pipe(map(([entry]) => {\n            const { width } = entry.target.getBoundingClientRect();\n            return Math.floor(width);\n        }))))), debounceTime(16), takeUntil(this.destroy$))\n            .subscribe(data => {\n            this.ngZone.run(() => {\n                this.listOfAutoWidth.next(data);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTrMeasureComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTrMeasureComponent, deps: [{ token: i1$3.NzResizeObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNzTrMeasureComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTrMeasureComponent, selector: \"tr[nz-table-measure-row]\", inputs: { listOfMeasureColumn: \"listOfMeasureColumn\" }, outputs: { listOfAutoWidth: \"listOfAutoWidth\" }, host: { classAttribute: \"ant-table-measure-now\" }, viewQueries: [{ propertyName: \"listOfTdElement\", predicate: [\"tdElement\"], descendants: true }], ngImport: i0, template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `, isInline: true, directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTrMeasureComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tr[nz-table-measure-row]',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `,\n                    host: { class: 'ant-table-measure-now' }\n                }]\n        }], ctorParameters: function () { return [{ type: i1$3.NzResizeObserver }, { type: i0.NgZone }]; }, propDecorators: { listOfMeasureColumn: [{\n                type: Input\n            }], listOfAutoWidth: [{\n                type: Output\n            }], listOfTdElement: [{\n                type: ViewChildren,\n                args: ['tdElement']\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTbodyComponent {\n    constructor(nzTableStyleService) {\n        this.nzTableStyleService = nzTableStyleService;\n        this.isInsideTable = false;\n        this.showEmpty$ = new BehaviorSubject(false);\n        this.noResult$ = new BehaviorSubject(undefined);\n        this.listOfMeasureColumn$ = new BehaviorSubject([]);\n        this.destroy$ = new Subject();\n        this.isInsideTable = !!this.nzTableStyleService;\n        if (this.nzTableStyleService) {\n            const { showEmpty$, noResult$, listOfMeasureColumn$ } = this.nzTableStyleService;\n            noResult$.pipe(takeUntil(this.destroy$)).subscribe(this.noResult$);\n            listOfMeasureColumn$.pipe(takeUntil(this.destroy$)).subscribe(this.listOfMeasureColumn$);\n            showEmpty$.pipe(takeUntil(this.destroy$)).subscribe(this.showEmpty$);\n        }\n    }\n    onListOfAutoWidthChange(listOfAutoWidth) {\n        this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTbodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTbodyComponent, deps: [{ token: NzTableStyleService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTbodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTbodyComponent, selector: \"tbody\", host: { properties: { \"class.ant-table-tbody\": \"isInsideTable\" } }, ngImport: i0, template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `, isInline: true, components: [{ type: NzTrMeasureComponent, selector: \"tr[nz-table-measure-row]\", inputs: [\"listOfMeasureColumn\"], outputs: [\"listOfAutoWidth\"] }, { type: NzTableFixedRowComponent, selector: \"tr[nz-table-fixed-row], tr[nzExpand]\" }, { type: i4$1.NzEmbedEmptyComponent, selector: \"nz-embed-empty\", inputs: [\"nzComponentName\", \"specificContent\"], exportAs: [\"nzEmbedEmpty\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i3$1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTbodyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tbody',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `,\n                    host: {\n                        '[class.ant-table-tbody]': 'isInsideTable'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NzTableStyleService, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\nclass NzTableInnerScrollComponent {\n    constructor(renderer, ngZone, platform, resizeService) {\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.platform = platform;\n        this.resizeService = resizeService;\n        this.data = [];\n        this.scrollX = null;\n        this.scrollY = null;\n        this.contentTemplate = null;\n        this.widthConfig = [];\n        this.listOfColWidth = [];\n        this.theadTemplate = null;\n        this.virtualTemplate = null;\n        this.virtualItemSize = 0;\n        this.virtualMaxBufferPx = 200;\n        this.virtualMinBufferPx = 100;\n        this.virtualForTrackBy = index => index;\n        this.headerStyleMap = {};\n        this.bodyStyleMap = {};\n        this.verticalScrollBarWidth = 0;\n        this.noDateVirtualHeight = '182px';\n        this.data$ = new Subject();\n        this.scroll$ = new Subject();\n        this.destroy$ = new Subject();\n    }\n    setScrollPositionClassName(clear = false) {\n        const { scrollWidth, scrollLeft, clientWidth } = this.tableBodyElement.nativeElement;\n        const leftClassName = 'ant-table-ping-left';\n        const rightClassName = 'ant-table-ping-right';\n        if ((scrollWidth === clientWidth && scrollWidth !== 0) || clear) {\n            this.renderer.removeClass(this.tableMainElement, leftClassName);\n            this.renderer.removeClass(this.tableMainElement, rightClassName);\n        }\n        else if (scrollLeft === 0) {\n            this.renderer.removeClass(this.tableMainElement, leftClassName);\n            this.renderer.addClass(this.tableMainElement, rightClassName);\n        }\n        else if (scrollWidth === scrollLeft + clientWidth) {\n            this.renderer.removeClass(this.tableMainElement, rightClassName);\n            this.renderer.addClass(this.tableMainElement, leftClassName);\n        }\n        else {\n            this.renderer.addClass(this.tableMainElement, leftClassName);\n            this.renderer.addClass(this.tableMainElement, rightClassName);\n        }\n    }\n    ngOnChanges(changes) {\n        const { scrollX, scrollY, data } = changes;\n        if (scrollX || scrollY) {\n            const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n            this.headerStyleMap = {\n                overflowX: 'hidden',\n                overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n            };\n            this.bodyStyleMap = {\n                overflowY: this.scrollY ? 'scroll' : 'hidden',\n                overflowX: this.scrollX ? 'auto' : null,\n                maxHeight: this.scrollY\n            };\n            this.scroll$.next();\n        }\n        if (data) {\n            this.data$.next();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                const scrollEvent$ = this.scroll$.pipe(startWith(null), delay(0), switchMap(() => fromEvent(this.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true))), takeUntil(this.destroy$));\n                const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n                const data$ = this.data$.pipe(takeUntil(this.destroy$));\n                const setClassName$ = merge(scrollEvent$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0), takeUntil(this.destroy$));\n                setClassName$.subscribe(() => this.setScrollPositionClassName());\n                scrollEvent$\n                    .pipe(filter(() => !!this.scrollY))\n                    .subscribe(() => (this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.setScrollPositionClassName(true);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTableInnerScrollComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableInnerScrollComponent, deps: [{ token: i0.Renderer2 }, { token: i0.NgZone }, { token: i1$4.Platform }, { token: i2.NzResizeService }], target: i0.ɵɵFactoryTarget.Component });\nNzTableInnerScrollComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableInnerScrollComponent, selector: \"nz-table-inner-scroll\", inputs: { data: \"data\", scrollX: \"scrollX\", scrollY: \"scrollY\", contentTemplate: \"contentTemplate\", widthConfig: \"widthConfig\", listOfColWidth: \"listOfColWidth\", theadTemplate: \"theadTemplate\", virtualTemplate: \"virtualTemplate\", virtualItemSize: \"virtualItemSize\", virtualMaxBufferPx: \"virtualMaxBufferPx\", virtualMinBufferPx: \"virtualMinBufferPx\", tableMainElement: \"tableMainElement\", virtualForTrackBy: \"virtualForTrackBy\", verticalScrollBarWidth: \"verticalScrollBarWidth\" }, host: { classAttribute: \"ant-table-container\" }, viewQueries: [{ propertyName: \"tableHeaderElement\", first: true, predicate: [\"tableHeaderElement\"], descendants: true, read: ElementRef }, { propertyName: \"tableBodyElement\", first: true, predicate: [\"tableBodyElement\"], descendants: true, read: ElementRef }, { propertyName: \"cdkVirtualScrollViewport\", first: true, predicate: CdkVirtualScrollViewport, descendants: true, read: CdkVirtualScrollViewport }], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"scrollY\">\n      <div #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template\n                [ngTemplateOutlet]=\"virtualTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"\n              ></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"ant-table-content\" #tableBodyElement *ngIf=\"!scrollY\" [ngStyle]=\"bodyStyleMap\">\n      <table\n        nz-table-content\n        tableLayout=\"fixed\"\n        [scrollX]=\"scrollX\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n        [contentTemplate]=\"contentTemplate\"\n      ></table>\n    </div>\n  `, isInline: true, components: [{ type: NzTableContentComponent, selector: \"table[nz-table-content]\", inputs: [\"tableLayout\", \"theadTemplate\", \"contentTemplate\", \"listOfColWidth\", \"scrollX\"] }, { type: i4$2.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\", \"appendOnly\"], outputs: [\"scrolledIndexChange\"] }, { type: NzTbodyComponent, selector: \"tbody\" }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i4$2.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }, { type: i4$2.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }, { type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableInnerScrollComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table-inner-scroll',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-container *ngIf=\"scrollY\">\n      <div #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template\n                [ngTemplateOutlet]=\"virtualTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"\n              ></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"ant-table-content\" #tableBodyElement *ngIf=\"!scrollY\" [ngStyle]=\"bodyStyleMap\">\n      <table\n        nz-table-content\n        tableLayout=\"fixed\"\n        [scrollX]=\"scrollX\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n        [contentTemplate]=\"contentTemplate\"\n      ></table>\n    </div>\n  `,\n                    host: { class: 'ant-table-container' }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.NgZone }, { type: i1$4.Platform }, { type: i2.NzResizeService }]; }, propDecorators: { data: [{\n                type: Input\n            }], scrollX: [{\n                type: Input\n            }], scrollY: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }], widthConfig: [{\n                type: Input\n            }], listOfColWidth: [{\n                type: Input\n            }], theadTemplate: [{\n                type: Input\n            }], virtualTemplate: [{\n                type: Input\n            }], virtualItemSize: [{\n                type: Input\n            }], virtualMaxBufferPx: [{\n                type: Input\n            }], virtualMinBufferPx: [{\n                type: Input\n            }], tableMainElement: [{\n                type: Input\n            }], virtualForTrackBy: [{\n                type: Input\n            }], tableHeaderElement: [{\n                type: ViewChild,\n                args: ['tableHeaderElement', { read: ElementRef }]\n            }], tableBodyElement: [{\n                type: ViewChild,\n                args: ['tableBodyElement', { read: ElementRef }]\n            }], cdkVirtualScrollViewport: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport }]\n            }], verticalScrollBarWidth: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableVirtualScrollDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static ngTemplateContextGuard(_dir, _ctx) {\n        return true;\n    }\n}\nNzTableVirtualScrollDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableVirtualScrollDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzTableVirtualScrollDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableVirtualScrollDirective, selector: \"[nz-virtual-scroll]\", exportAs: [\"nzVirtualScroll\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableVirtualScrollDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-virtual-scroll]',\n                    exportAs: 'nzVirtualScroll'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableDataService {\n    constructor() {\n        this.destroy$ = new Subject();\n        this.pageIndex$ = new BehaviorSubject(1);\n        this.frontPagination$ = new BehaviorSubject(true);\n        this.pageSize$ = new BehaviorSubject(10);\n        this.listOfData$ = new BehaviorSubject([]);\n        this.pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n        this.pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n        this.listOfCalcOperator$ = new BehaviorSubject([]);\n        this.queryParams$ = combineLatest([\n            this.pageIndexDistinct$,\n            this.pageSizeDistinct$,\n            this.listOfCalcOperator$\n        ]).pipe(debounceTime(0), skip(1), map(([pageIndex, pageSize, listOfCalc]) => ({\n            pageIndex,\n            pageSize,\n            sort: listOfCalc\n                .filter(item => item.sortFn)\n                .map(item => ({\n                key: item.key,\n                value: item.sortOrder\n            })),\n            filter: listOfCalc\n                .filter(item => item.filterFn)\n                .map(item => ({\n                key: item.key,\n                value: item.filterValue\n            }))\n        })));\n        this.listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(map(([listOfData, listOfCalcOperator]) => {\n            let listOfDataAfterCalc = [...listOfData];\n            const listOfFilterOperator = listOfCalcOperator.filter(item => {\n                const { filterValue, filterFn } = item;\n                const isReset = filterValue === null ||\n                    filterValue === undefined ||\n                    (Array.isArray(filterValue) && filterValue.length === 0);\n                return !isReset && typeof filterFn === 'function';\n            });\n            for (const item of listOfFilterOperator) {\n                const { filterFn, filterValue } = item;\n                listOfDataAfterCalc = listOfDataAfterCalc.filter(data => filterFn(filterValue, data));\n            }\n            const listOfSortOperator = listOfCalcOperator\n                .filter(item => item.sortOrder !== null && typeof item.sortFn === 'function')\n                .sort((a, b) => +b.sortPriority - +a.sortPriority);\n            if (listOfCalcOperator.length) {\n                listOfDataAfterCalc.sort((record1, record2) => {\n                    for (const item of listOfSortOperator) {\n                        const { sortFn, sortOrder } = item;\n                        if (sortFn && sortOrder) {\n                            const compareResult = sortFn(record1, record2, sortOrder);\n                            if (compareResult !== 0) {\n                                return sortOrder === 'ascend' ? compareResult : -compareResult;\n                            }\n                        }\n                    }\n                    return 0;\n                });\n            }\n            return listOfDataAfterCalc;\n        }));\n        this.listOfFrontEndCurrentPageData$ = combineLatest([\n            this.pageIndexDistinct$,\n            this.pageSizeDistinct$,\n            this.listOfDataAfterCalc$\n        ]).pipe(takeUntil(this.destroy$), filter(value => {\n            const [pageIndex, pageSize, listOfData] = value;\n            const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n            return pageIndex <= maxPageIndex;\n        }), map(([pageIndex, pageSize, listOfData]) => listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize)));\n        this.listOfCurrentPageData$ = this.frontPagination$.pipe(switchMap(pagination => (pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfDataAfterCalc$)));\n        this.total$ = this.frontPagination$.pipe(switchMap(pagination => (pagination ? this.listOfDataAfterCalc$ : this.listOfData$)), map(list => list.length), distinctUntilChanged());\n    }\n    updatePageSize(size) {\n        this.pageSize$.next(size);\n    }\n    updateFrontPagination(pagination) {\n        this.frontPagination$.next(pagination);\n    }\n    updatePageIndex(index) {\n        this.pageIndex$.next(index);\n    }\n    updateListOfData(list) {\n        this.listOfData$.next(list);\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTableDataService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableDataService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNzTableDataService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableDataService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableDataService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableTitleFooterComponent {\n    constructor() {\n        this.title = null;\n        this.footer = null;\n    }\n}\nNzTableTitleFooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableTitleFooterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzTableTitleFooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableTitleFooterComponent, selector: \"nz-table-title-footer\", inputs: { title: \"title\", footer: \"footer\" }, host: { properties: { \"class.ant-table-title\": \"title !== null\", \"class.ant-table-footer\": \"footer !== null\" } }, ngImport: i0, template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `, isInline: true, directives: [{ type: i1$5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableTitleFooterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table-title-footer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `,\n                    host: {\n                        '[class.ant-table-title]': `title !== null`,\n                        '[class.ant-table-footer]': `footer !== null`\n                    }\n                }]\n        }], propDecorators: { title: [{\n                type: Input\n            }], footer: [{\n                type: Input\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'table';\nclass NzTableComponent {\n    constructor(elementRef, nzResizeObserver, nzConfigService, cdr, nzTableStyleService, nzTableDataService, directionality) {\n        this.elementRef = elementRef;\n        this.nzResizeObserver = nzResizeObserver;\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this.nzTableStyleService = nzTableStyleService;\n        this.nzTableDataService = nzTableDataService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzTableLayout = 'auto';\n        this.nzShowTotal = null;\n        this.nzItemRender = null;\n        this.nzTitle = null;\n        this.nzFooter = null;\n        this.nzNoResult = undefined;\n        this.nzPageSizeOptions = [10, 20, 30, 40, 50];\n        this.nzVirtualItemSize = 0;\n        this.nzVirtualMaxBufferPx = 200;\n        this.nzVirtualMinBufferPx = 100;\n        this.nzVirtualForTrackBy = index => index;\n        this.nzLoadingDelay = 0;\n        this.nzPageIndex = 1;\n        this.nzPageSize = 10;\n        this.nzTotal = 0;\n        this.nzWidthConfig = [];\n        this.nzData = [];\n        this.nzPaginationPosition = 'bottom';\n        this.nzScroll = { x: null, y: null };\n        this.nzPaginationType = 'default';\n        this.nzFrontPagination = true;\n        this.nzTemplateMode = false;\n        this.nzShowPagination = true;\n        this.nzLoading = false;\n        this.nzOuterBordered = false;\n        this.nzLoadingIndicator = null;\n        this.nzBordered = false;\n        this.nzSize = 'default';\n        this.nzShowSizeChanger = false;\n        this.nzHideOnSinglePage = false;\n        this.nzShowQuickJumper = false;\n        this.nzSimple = false;\n        this.nzPageSizeChange = new EventEmitter();\n        this.nzPageIndexChange = new EventEmitter();\n        this.nzQueryParams = new EventEmitter();\n        this.nzCurrentPageDataChange = new EventEmitter();\n        /** public data for ngFor tr */\n        this.data = [];\n        this.scrollX = null;\n        this.scrollY = null;\n        this.theadTemplate = null;\n        this.listOfAutoColWidth = [];\n        this.listOfManualColWidth = [];\n        this.hasFixLeft = false;\n        this.hasFixRight = false;\n        this.showPagination = true;\n        this.destroy$ = new Subject();\n        this.templateMode$ = new BehaviorSubject(false);\n        this.dir = 'ltr';\n        this.verticalScrollBarWidth = 0;\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.cdr.markForCheck();\n        });\n    }\n    onPageSizeChange(size) {\n        this.nzTableDataService.updatePageSize(size);\n    }\n    onPageIndexChange(index) {\n        this.nzTableDataService.updatePageIndex(index);\n    }\n    ngOnInit() {\n        var _a;\n        const { pageIndexDistinct$, pageSizeDistinct$, listOfCurrentPageData$, total$, queryParams$ } = this.nzTableDataService;\n        const { theadTemplate$, hasFixLeft$, hasFixRight$ } = this.nzTableStyleService;\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n        pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n            if (pageIndex !== this.nzPageIndex) {\n                this.nzPageIndex = pageIndex;\n                this.nzPageIndexChange.next(pageIndex);\n            }\n        });\n        pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n            if (pageSize !== this.nzPageSize) {\n                this.nzPageSize = pageSize;\n                this.nzPageSizeChange.next(pageSize);\n            }\n        });\n        total$\n            .pipe(takeUntil(this.destroy$), filter(() => this.nzFrontPagination))\n            .subscribe(total => {\n            if (total !== this.nzTotal) {\n                this.nzTotal = total;\n                this.cdr.markForCheck();\n            }\n        });\n        listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n            this.data = data;\n            this.nzCurrentPageDataChange.next(data);\n            this.cdr.markForCheck();\n        });\n        theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n            this.theadTemplate = theadTemplate;\n            this.cdr.markForCheck();\n        });\n        hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n            this.hasFixLeft = hasFixLeft;\n            this.cdr.markForCheck();\n        });\n        hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n            this.hasFixRight = hasFixRight;\n            this.cdr.markForCheck();\n        });\n        combineLatest([total$, this.templateMode$])\n            .pipe(map(([total, templateMode]) => total === 0 && !templateMode), takeUntil(this.destroy$))\n            .subscribe(empty => {\n            this.nzTableStyleService.setShowEmpty(empty);\n        });\n        this.verticalScrollBarWidth = measureScrollbar('vertical');\n        this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n            this.listOfAutoColWidth = listOfWidth;\n            this.cdr.markForCheck();\n        });\n        this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n            this.listOfManualColWidth = listOfWidth;\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { nzScroll, nzPageIndex, nzPageSize, nzFrontPagination, nzData, nzWidthConfig, nzNoResult, nzTemplateMode } = changes;\n        if (nzPageIndex) {\n            this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n        }\n        if (nzPageSize) {\n            this.nzTableDataService.updatePageSize(this.nzPageSize);\n        }\n        if (nzData) {\n            this.nzData = this.nzData || [];\n            this.nzTableDataService.updateListOfData(this.nzData);\n        }\n        if (nzFrontPagination) {\n            this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n        }\n        if (nzScroll) {\n            this.setScrollOnChanges();\n        }\n        if (nzWidthConfig) {\n            this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n        }\n        if (nzTemplateMode) {\n            this.templateMode$.next(this.nzTemplateMode);\n        }\n        if (nzNoResult) {\n            this.nzTableStyleService.setNoResult(this.nzNoResult);\n        }\n        this.updateShowPagination();\n    }\n    ngAfterViewInit() {\n        this.nzResizeObserver\n            .observe(this.elementRef)\n            .pipe(map(([entry]) => {\n            const { width } = entry.target.getBoundingClientRect();\n            const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n            return Math.floor(width - scrollBarWidth);\n        }), takeUntil(this.destroy$))\n            .subscribe(this.nzTableStyleService.hostWidth$);\n        if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n            this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setScrollOnChanges() {\n        this.scrollX = (this.nzScroll && this.nzScroll.x) || null;\n        this.scrollY = (this.nzScroll && this.nzScroll.y) || null;\n        this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n    }\n    updateShowPagination() {\n        this.showPagination =\n            (this.nzHideOnSinglePage && this.nzData.length > this.nzPageSize) ||\n                (this.nzData.length > 0 && !this.nzHideOnSinglePage) ||\n                (!this.nzFrontPagination && this.nzTotal > this.nzPageSize);\n    }\n}\nNzTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableComponent, deps: [{ token: i0.ElementRef }, { token: i1$3.NzResizeObserver }, { token: i1.NzConfigService }, { token: i0.ChangeDetectorRef }, { token: NzTableStyleService }, { token: NzTableDataService }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTableComponent, selector: \"nz-table\", inputs: { nzTableLayout: \"nzTableLayout\", nzShowTotal: \"nzShowTotal\", nzItemRender: \"nzItemRender\", nzTitle: \"nzTitle\", nzFooter: \"nzFooter\", nzNoResult: \"nzNoResult\", nzPageSizeOptions: \"nzPageSizeOptions\", nzVirtualItemSize: \"nzVirtualItemSize\", nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\", nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\", nzVirtualForTrackBy: \"nzVirtualForTrackBy\", nzLoadingDelay: \"nzLoadingDelay\", nzPageIndex: \"nzPageIndex\", nzPageSize: \"nzPageSize\", nzTotal: \"nzTotal\", nzWidthConfig: \"nzWidthConfig\", nzData: \"nzData\", nzPaginationPosition: \"nzPaginationPosition\", nzScroll: \"nzScroll\", nzPaginationType: \"nzPaginationType\", nzFrontPagination: \"nzFrontPagination\", nzTemplateMode: \"nzTemplateMode\", nzShowPagination: \"nzShowPagination\", nzLoading: \"nzLoading\", nzOuterBordered: \"nzOuterBordered\", nzLoadingIndicator: \"nzLoadingIndicator\", nzBordered: \"nzBordered\", nzSize: \"nzSize\", nzShowSizeChanger: \"nzShowSizeChanger\", nzHideOnSinglePage: \"nzHideOnSinglePage\", nzShowQuickJumper: \"nzShowQuickJumper\", nzSimple: \"nzSimple\" }, outputs: { nzPageSizeChange: \"nzPageSizeChange\", nzPageIndexChange: \"nzPageIndexChange\", nzQueryParams: \"nzQueryParams\", nzCurrentPageDataChange: \"nzCurrentPageDataChange\" }, host: { properties: { \"class.ant-table-wrapper-rtl\": \"dir === \\\"rtl\\\"\" }, classAttribute: \"ant-table-wrapper\" }, providers: [NzTableStyleService, NzTableDataService], queries: [{ propertyName: \"nzVirtualScrollDirective\", first: true, predicate: NzTableVirtualScrollDirective, descendants: true }], viewQueries: [{ propertyName: \"nzTableInnerScrollComponent\", first: true, predicate: NzTableInnerScrollComponent, descendants: true }], exportAs: [\"nzTable\"], usesOnChanges: true, ngImport: i0, template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-rtl]=\"dir === 'rtl'\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.nz-table-out-bordered]=\"nzOuterBordered && !nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && data.length\"\n        [hidden]=\"!showPagination\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzPaginationType === 'small' ? 'small' : nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      ></nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `, isInline: true, components: [{ type: i6$1.NzSpinComponent, selector: \"nz-spin\", inputs: [\"nzIndicator\", \"nzSize\", \"nzTip\", \"nzDelay\", \"nzSimple\", \"nzSpinning\"], exportAs: [\"nzSpin\"] }, { type: NzTableTitleFooterComponent, selector: \"nz-table-title-footer\", inputs: [\"title\", \"footer\"] }, { type: NzTableInnerScrollComponent, selector: \"nz-table-inner-scroll\", inputs: [\"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"widthConfig\", \"listOfColWidth\", \"theadTemplate\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\", \"verticalScrollBarWidth\"] }, { type: NzTableInnerDefaultComponent, selector: \"nz-table-inner-default\", inputs: [\"tableLayout\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"] }, { type: i10$1.NzPaginationComponent, selector: \"nz-pagination\", inputs: [\"nzShowTotal\", \"nzItemRender\", \"nzSize\", \"nzPageSizeOptions\", \"nzShowSizeChanger\", \"nzShowQuickJumper\", \"nzSimple\", \"nzDisabled\", \"nzResponsive\", \"nzHideOnSinglePage\", \"nzTotal\", \"nzPageIndex\", \"nzPageSize\"], outputs: [\"nzPageSizeChange\", \"nzPageIndexChange\"], exportAs: [\"nzPagination\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzTableComponent.prototype, \"nzFrontPagination\", void 0);\n__decorate([\n    InputBoolean()\n], NzTableComponent.prototype, \"nzTemplateMode\", void 0);\n__decorate([\n    InputBoolean()\n], NzTableComponent.prototype, \"nzShowPagination\", void 0);\n__decorate([\n    InputBoolean()\n], NzTableComponent.prototype, \"nzLoading\", void 0);\n__decorate([\n    InputBoolean()\n], NzTableComponent.prototype, \"nzOuterBordered\", void 0);\n__decorate([\n    WithConfig()\n], NzTableComponent.prototype, \"nzLoadingIndicator\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzTableComponent.prototype, \"nzBordered\", void 0);\n__decorate([\n    WithConfig()\n], NzTableComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzTableComponent.prototype, \"nzShowSizeChanger\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzTableComponent.prototype, \"nzHideOnSinglePage\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzTableComponent.prototype, \"nzShowQuickJumper\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean()\n], NzTableComponent.prototype, \"nzSimple\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-table',\n                    exportAs: 'nzTable',\n                    providers: [NzTableStyleService, NzTableDataService],\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-rtl]=\"dir === 'rtl'\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.nz-table-out-bordered]=\"nzOuterBordered && !nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && data.length\"\n        [hidden]=\"!showPagination\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzPaginationType === 'small' ? 'small' : nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      ></nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n                    host: {\n                        class: 'ant-table-wrapper',\n                        '[class.ant-table-wrapper-rtl]': 'dir === \"rtl\"'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$3.NzResizeObserver }, { type: i1.NzConfigService }, { type: i0.ChangeDetectorRef }, { type: NzTableStyleService }, { type: NzTableDataService }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzTableLayout: [{\n                type: Input\n            }], nzShowTotal: [{\n                type: Input\n            }], nzItemRender: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzFooter: [{\n                type: Input\n            }], nzNoResult: [{\n                type: Input\n            }], nzPageSizeOptions: [{\n                type: Input\n            }], nzVirtualItemSize: [{\n                type: Input\n            }], nzVirtualMaxBufferPx: [{\n                type: Input\n            }], nzVirtualMinBufferPx: [{\n                type: Input\n            }], nzVirtualForTrackBy: [{\n                type: Input\n            }], nzLoadingDelay: [{\n                type: Input\n            }], nzPageIndex: [{\n                type: Input\n            }], nzPageSize: [{\n                type: Input\n            }], nzTotal: [{\n                type: Input\n            }], nzWidthConfig: [{\n                type: Input\n            }], nzData: [{\n                type: Input\n            }], nzPaginationPosition: [{\n                type: Input\n            }], nzScroll: [{\n                type: Input\n            }], nzPaginationType: [{\n                type: Input\n            }], nzFrontPagination: [{\n                type: Input\n            }], nzTemplateMode: [{\n                type: Input\n            }], nzShowPagination: [{\n                type: Input\n            }], nzLoading: [{\n                type: Input\n            }], nzOuterBordered: [{\n                type: Input\n            }], nzLoadingIndicator: [{\n                type: Input\n            }], nzBordered: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzShowSizeChanger: [{\n                type: Input\n            }], nzHideOnSinglePage: [{\n                type: Input\n            }], nzShowQuickJumper: [{\n                type: Input\n            }], nzSimple: [{\n                type: Input\n            }], nzPageSizeChange: [{\n                type: Output\n            }], nzPageIndexChange: [{\n                type: Output\n            }], nzQueryParams: [{\n                type: Output\n            }], nzCurrentPageDataChange: [{\n                type: Output\n            }], nzVirtualScrollDirective: [{\n                type: ContentChild,\n                args: [NzTableVirtualScrollDirective, { static: false }]\n            }], nzTableInnerScrollComponent: [{\n                type: ViewChild,\n                args: [NzTableInnerScrollComponent]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTrDirective {\n    constructor(nzTableStyleService) {\n        this.nzTableStyleService = nzTableStyleService;\n        this.destroy$ = new Subject();\n        this.listOfFixedColumns$ = new ReplaySubject(1);\n        this.listOfColumns$ = new ReplaySubject(1);\n        this.listOfFixedColumnsChanges$ = this.listOfFixedColumns$.pipe(switchMap(list => merge(...[this.listOfFixedColumns$, ...list.map((c) => c.changes$)]).pipe(mergeMap(() => this.listOfFixedColumns$))), takeUntil(this.destroy$));\n        this.listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n        this.listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n        this.listOfColumnsChanges$ = this.listOfColumns$.pipe(switchMap(list => merge(...[this.listOfColumns$, ...list.map((c) => c.changes$)]).pipe(mergeMap(() => this.listOfColumns$))), takeUntil(this.destroy$));\n        this.isInsideTable = false;\n        this.isInsideTable = !!nzTableStyleService;\n    }\n    ngAfterContentInit() {\n        if (this.nzTableStyleService) {\n            this.listOfCellFixedDirective.changes\n                .pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$))\n                .subscribe(this.listOfFixedColumns$);\n            this.listOfNzThDirective.changes\n                .pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$))\n                .subscribe(this.listOfColumns$);\n            /** set last left and first right **/\n            this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n                listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n            });\n            this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n                listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n            });\n            /** calculate fixed nzLeft and nzRight **/\n            combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$])\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(([listOfAutoWidth, listOfLeftCell]) => {\n                listOfLeftCell.forEach((cell, index) => {\n                    if (cell.isAutoLeft) {\n                        const currentArray = listOfLeftCell.slice(0, index);\n                        const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n                        const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n                        cell.setAutoLeftWidth(`${width}px`);\n                    }\n                });\n            });\n            combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$])\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(([listOfAutoWidth, listOfRightCell]) => {\n                listOfRightCell.forEach((_, index) => {\n                    const cell = listOfRightCell[listOfRightCell.length - index - 1];\n                    if (cell.isAutoRight) {\n                        const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n                        const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n                        const width = listOfAutoWidth\n                            .slice(listOfAutoWidth.length - count, listOfAutoWidth.length)\n                            .reduce((pre, cur) => pre + cur, 0);\n                        cell.setAutoRightWidth(`${width}px`);\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTrDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTrDirective, deps: [{ token: NzTableStyleService, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzTrDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTrDirective, selector: \"tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])\", host: { properties: { \"class.ant-table-row\": \"isInsideTable\" } }, queries: [{ propertyName: \"listOfNzThDirective\", predicate: NzThMeasureDirective }, { propertyName: \"listOfCellFixedDirective\", predicate: NzCellFixedDirective }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTrDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n                    host: {\n                        '[class.ant-table-row]': 'isInsideTable'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NzTableStyleService, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { listOfNzThDirective: [{\n                type: ContentChildren,\n                args: [NzThMeasureDirective]\n            }], listOfCellFixedDirective: [{\n                type: ContentChildren,\n                args: [NzCellFixedDirective]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTheadComponent {\n    constructor(elementRef, renderer, nzTableStyleService, nzTableDataService) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.nzTableStyleService = nzTableStyleService;\n        this.nzTableDataService = nzTableDataService;\n        this.destroy$ = new Subject();\n        this.isInsideTable = false;\n        this.nzSortOrderChange = new EventEmitter();\n        this.isInsideTable = !!this.nzTableStyleService;\n    }\n    ngOnInit() {\n        if (this.nzTableStyleService) {\n            this.nzTableStyleService.setTheadTemplate(this.templateRef);\n        }\n    }\n    ngAfterContentInit() {\n        if (this.nzTableStyleService) {\n            const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(startWith(this.listOfNzTrDirective), map(item => item && item.first));\n            const listOfColumnsChanges$ = firstTableRow$.pipe(switchMap(firstTableRow => (firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY)), takeUntil(this.destroy$));\n            listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n            /** TODO: need reset the measure row when scrollX change **/\n            this.nzTableStyleService.enableAutoMeasure$\n                .pipe(switchMap(enable => (enable ? listOfColumnsChanges$ : of([]))))\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n            const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(switchMap(firstTr => (firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY)), takeUntil(this.destroy$));\n            const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(switchMap(firstTr => (firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY)), takeUntil(this.destroy$));\n            listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n                this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n            });\n            listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n                this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n            });\n        }\n        if (this.nzTableDataService) {\n            const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent));\n            const manualSort$ = listOfColumn$.pipe(switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))), takeUntil(this.destroy$));\n            manualSort$.subscribe((data) => {\n                const emitValue = { key: data.nzColumnKey, value: data.sortOrder };\n                this.nzSortOrderChange.emit(emitValue);\n                if (data.nzSortFn && data.nzSortPriority === false) {\n                    this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n                }\n            });\n            const listOfCalcOperator$ = listOfColumn$.pipe(switchMap(list => merge(...[listOfColumn$, ...list.map((c) => c.calcOperatorChange$)]).pipe(mergeMap(() => listOfColumn$))), map(list => list\n                .filter(item => !!item.nzSortFn || !!item.nzFilterFn)\n                .map(item => {\n                const { nzSortFn, sortOrder, nzFilterFn, nzFilterValue, nzSortPriority, nzColumnKey } = item;\n                return {\n                    key: nzColumnKey,\n                    sortFn: nzSortFn,\n                    sortPriority: nzSortPriority,\n                    sortOrder: sortOrder,\n                    filterFn: nzFilterFn,\n                    filterValue: nzFilterValue\n                };\n            })), \n            // TODO: after checked error here\n            delay(0), takeUntil(this.destroy$));\n            listOfCalcOperator$.subscribe(list => {\n                this.nzTableDataService.listOfCalcOperator$.next(list);\n            });\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzTableStyleService) {\n            this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTheadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTheadComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NzTableStyleService, optional: true }, { token: NzTableDataService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTheadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTheadComponent, selector: \"thead:not(.ant-table-thead)\", outputs: { nzSortOrderChange: \"nzSortOrderChange\" }, queries: [{ propertyName: \"listOfNzTrDirective\", predicate: NzTrDirective, descendants: true }, { propertyName: \"listOfNzThAddOnComponent\", predicate: NzThAddOnComponent, descendants: true }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: [\"contentTemplate\"], descendants: true, static: true }], ngImport: i0, template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `, isInline: true, directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTheadComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'thead:not(.ant-table-thead)',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NzTableStyleService, decorators: [{\n                        type: Optional\n                    }] }, { type: NzTableDataService, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { templateRef: [{\n                type: ViewChild,\n                args: ['contentTemplate', { static: true }]\n            }], listOfNzTrDirective: [{\n                type: ContentChildren,\n                args: [NzTrDirective, { descendants: true }]\n            }], listOfNzThAddOnComponent: [{\n                type: ContentChildren,\n                args: [NzThAddOnComponent, { descendants: true }]\n            }], nzSortOrderChange: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTrExpandDirective {\n    constructor() {\n        this.nzExpand = true;\n    }\n}\nNzTrExpandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTrExpandDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzTrExpandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTrExpandDirective, selector: \"tr[nzExpand]\", inputs: { nzExpand: \"nzExpand\" }, host: { properties: { \"hidden\": \"!nzExpand\" }, classAttribute: \"ant-table-expanded-row\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTrExpandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'tr[nzExpand]',\n                    host: {\n                        class: 'ant-table-expanded-row',\n                        '[hidden]': `!nzExpand`\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzExpand: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTableModule {\n}\nNzTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableModule, declarations: [NzTableComponent,\n        NzThAddOnComponent,\n        NzTableCellDirective,\n        NzThMeasureDirective,\n        NzTdAddOnComponent,\n        NzTheadComponent,\n        NzTbodyComponent,\n        NzTrDirective,\n        NzTrExpandDirective,\n        NzTableVirtualScrollDirective,\n        NzCellFixedDirective,\n        NzTableContentComponent,\n        NzTableTitleFooterComponent,\n        NzTableInnerDefaultComponent,\n        NzTableInnerScrollComponent,\n        NzTrMeasureComponent,\n        NzRowIndentDirective,\n        NzRowExpandButtonDirective,\n        NzCellBreakWordDirective,\n        NzCellAlignDirective,\n        NzTableSortersComponent,\n        NzTableFilterComponent,\n        NzTableSelectionComponent,\n        NzCellEllipsisDirective,\n        NzFilterTriggerComponent,\n        NzTableFixedRowComponent,\n        NzThSelectionComponent], imports: [BidiModule,\n        NzMenuModule,\n        FormsModule,\n        NzOutletModule,\n        NzRadioModule,\n        NzCheckboxModule,\n        NzDropDownModule,\n        NzButtonModule,\n        CommonModule,\n        PlatformModule,\n        NzPaginationModule,\n        NzResizeObserverModule,\n        NzSpinModule,\n        NzI18nModule,\n        NzIconModule,\n        NzEmptyModule,\n        ScrollingModule], exports: [NzTableComponent,\n        NzThAddOnComponent,\n        NzTableCellDirective,\n        NzThMeasureDirective,\n        NzTdAddOnComponent,\n        NzTheadComponent,\n        NzTbodyComponent,\n        NzTrDirective,\n        NzTableVirtualScrollDirective,\n        NzCellFixedDirective,\n        NzFilterTriggerComponent,\n        NzTrExpandDirective,\n        NzCellBreakWordDirective,\n        NzCellAlignDirective,\n        NzCellEllipsisDirective,\n        NzTableFixedRowComponent,\n        NzThSelectionComponent] });\nNzTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableModule, imports: [[\n            BidiModule,\n            NzMenuModule,\n            FormsModule,\n            NzOutletModule,\n            NzRadioModule,\n            NzCheckboxModule,\n            NzDropDownModule,\n            NzButtonModule,\n            CommonModule,\n            PlatformModule,\n            NzPaginationModule,\n            NzResizeObserverModule,\n            NzSpinModule,\n            NzI18nModule,\n            NzIconModule,\n            NzEmptyModule,\n            ScrollingModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzTableComponent,\n                        NzThAddOnComponent,\n                        NzTableCellDirective,\n                        NzThMeasureDirective,\n                        NzTdAddOnComponent,\n                        NzTheadComponent,\n                        NzTbodyComponent,\n                        NzTrDirective,\n                        NzTrExpandDirective,\n                        NzTableVirtualScrollDirective,\n                        NzCellFixedDirective,\n                        NzTableContentComponent,\n                        NzTableTitleFooterComponent,\n                        NzTableInnerDefaultComponent,\n                        NzTableInnerScrollComponent,\n                        NzTrMeasureComponent,\n                        NzRowIndentDirective,\n                        NzRowExpandButtonDirective,\n                        NzCellBreakWordDirective,\n                        NzCellAlignDirective,\n                        NzTableSortersComponent,\n                        NzTableFilterComponent,\n                        NzTableSelectionComponent,\n                        NzCellEllipsisDirective,\n                        NzFilterTriggerComponent,\n                        NzTableFixedRowComponent,\n                        NzThSelectionComponent\n                    ],\n                    exports: [\n                        NzTableComponent,\n                        NzThAddOnComponent,\n                        NzTableCellDirective,\n                        NzThMeasureDirective,\n                        NzTdAddOnComponent,\n                        NzTheadComponent,\n                        NzTbodyComponent,\n                        NzTrDirective,\n                        NzTableVirtualScrollDirective,\n                        NzCellFixedDirective,\n                        NzFilterTriggerComponent,\n                        NzTrExpandDirective,\n                        NzCellBreakWordDirective,\n                        NzCellAlignDirective,\n                        NzCellEllipsisDirective,\n                        NzTableFixedRowComponent,\n                        NzThSelectionComponent\n                    ],\n                    imports: [\n                        BidiModule,\n                        NzMenuModule,\n                        FormsModule,\n                        NzOutletModule,\n                        NzRadioModule,\n                        NzCheckboxModule,\n                        NzDropDownModule,\n                        NzButtonModule,\n                        CommonModule,\n                        PlatformModule,\n                        NzPaginationModule,\n                        NzResizeObserverModule,\n                        NzSpinModule,\n                        NzI18nModule,\n                        NzIconModule,\n                        NzEmptyModule,\n                        ScrollingModule\n                    ]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCellAlignDirective, NzCellBreakWordDirective, NzCellEllipsisDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzRowExpandButtonDirective, NzRowIndentDirective, NzTableCellDirective, NzTableComponent, NzTableContentComponent, NzTableDataService, NzTableFilterComponent, NzTableFixedRowComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTableModule, NzTableSelectionComponent, NzTableSortersComponent, NzTableStyleService, NzTableTitleFooterComponent, NzTableVirtualScrollDirective, NzTbodyComponent, NzTdAddOnComponent, NzThAddOnComponent, NzThMeasureDirective, NzThSelectionComponent, NzTheadComponent, NzTrDirective, NzTrExpandDirective, NzTrMeasureComponent };\n"]},"metadata":{},"sourceType":"module"}