{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { InputBoolean, toCssPixel } from 'ng-zorro-antd/core/util';\nimport { __decorate } from 'tslib';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BidiModule } from '@angular/cdk/bidi';\nconst _c0 = [\"nzType\", \"button\"];\nconst _c1 = [\"nzType\", \"avatar\"];\nconst _c2 = [\"nzType\", \"input\"];\nconst _c3 = [\"nzType\", \"image\"];\n\nfunction NzSkeletonComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"nz-skeleton-element\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzSize\", ctx_r2.avatar.size || \"default\")(\"nzShape\", ctx_r2.avatar.shape || \"circle\");\n  }\n}\n\nfunction NzSkeletonComponent_ng_container_0_h3_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"h3\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r3.toCSSUnit(ctx_r3.title.width));\n  }\n}\n\nfunction NzSkeletonComponent_ng_container_0_ul_4_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\");\n  }\n\n  if (rf & 2) {\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"width\", ctx_r5.toCSSUnit(ctx_r5.widthList[i_r7]));\n  }\n}\n\nfunction NzSkeletonComponent_ng_container_0_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 8);\n    i0.ɵɵtemplate(1, NzSkeletonComponent_ng_container_0_ul_4_li_1_Template, 1, 2, \"li\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.rowsList);\n  }\n}\n\nfunction NzSkeletonComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSkeletonComponent_ng_container_0_div_1_Template, 2, 2, \"div\", 1);\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵtemplate(3, NzSkeletonComponent_ng_container_0_h3_3_Template, 1, 2, \"h3\", 3);\n    i0.ɵɵtemplate(4, NzSkeletonComponent_ng_container_0_ul_4_Template, 2, 1, \"ul\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzAvatar);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzParagraph);\n  }\n}\n\nfunction NzSkeletonComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c4 = [\"*\"];\n\nclass NzSkeletonElementDirective {\n  constructor() {\n    this.nzActive = false;\n    this.nzBlock = false;\n  }\n\n}\n\nNzSkeletonElementDirective.ɵfac = function NzSkeletonElementDirective_Factory(t) {\n  return new (t || NzSkeletonElementDirective)();\n};\n\nNzSkeletonElementDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzSkeletonElementDirective,\n  selectors: [[\"nz-skeleton-element\"]],\n  hostAttrs: [1, \"ant-skeleton\", \"ant-skeleton-element\"],\n  hostVars: 4,\n  hostBindings: function NzSkeletonElementDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-skeleton-active\", ctx.nzActive)(\"ant-skeleton-block\", ctx.nzBlock);\n    }\n  },\n  inputs: {\n    nzActive: \"nzActive\",\n    nzType: \"nzType\",\n    nzBlock: \"nzBlock\"\n  }\n});\n\n__decorate([InputBoolean()], NzSkeletonElementDirective.prototype, \"nzBlock\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonElementDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-skeleton-element',\n      host: {\n        class: 'ant-skeleton ant-skeleton-element',\n        '[class.ant-skeleton-active]': 'nzActive',\n        '[class.ant-skeleton-block]': 'nzBlock'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzActive: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzBlock: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSkeletonElementButtonComponent {\n  constructor() {\n    this.nzShape = 'default';\n    this.nzSize = 'default';\n  }\n\n}\n\nNzSkeletonElementButtonComponent.ɵfac = function NzSkeletonElementButtonComponent_Factory(t) {\n  return new (t || NzSkeletonElementButtonComponent)();\n};\n\nNzSkeletonElementButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSkeletonElementButtonComponent,\n  selectors: [[\"nz-skeleton-element\", \"nzType\", \"button\"]],\n  inputs: {\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\"\n  },\n  attrs: _c0,\n  decls: 1,\n  vars: 8,\n  consts: [[1, \"ant-skeleton-button\"]],\n  template: function NzSkeletonElementButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"span\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-skeleton-button-round\", ctx.nzShape === \"round\")(\"ant-skeleton-button-circle\", ctx.nzShape === \"circle\")(\"ant-skeleton-button-lg\", ctx.nzSize === \"large\")(\"ant-skeleton-button-sm\", ctx.nzSize === \"small\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonElementButtonComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'nz-skeleton-element[nzType=\"button\"]',\n      template: `\n    <span\n      class=\"ant-skeleton-button\"\n      [class.ant-skeleton-button-round]=\"nzShape === 'round'\"\n      [class.ant-skeleton-button-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-button-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-button-sm]=\"nzSize === 'small'\"\n    ></span>\n  `\n    }]\n  }], null, {\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSkeletonElementAvatarComponent {\n  constructor() {\n    this.nzShape = 'circle';\n    this.nzSize = 'default';\n    this.styleMap = {};\n  }\n\n  ngOnChanges(changes) {\n    if (changes.nzSize && typeof this.nzSize === 'number') {\n      const sideLength = `${this.nzSize}px`;\n      this.styleMap = {\n        width: sideLength,\n        height: sideLength,\n        'line-height': sideLength\n      };\n    } else {\n      this.styleMap = {};\n    }\n  }\n\n}\n\nNzSkeletonElementAvatarComponent.ɵfac = function NzSkeletonElementAvatarComponent_Factory(t) {\n  return new (t || NzSkeletonElementAvatarComponent)();\n};\n\nNzSkeletonElementAvatarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSkeletonElementAvatarComponent,\n  selectors: [[\"nz-skeleton-element\", \"nzType\", \"avatar\"]],\n  inputs: {\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 1,\n  vars: 9,\n  consts: [[1, \"ant-skeleton-avatar\", 3, \"ngStyle\"]],\n  template: function NzSkeletonElementAvatarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"span\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-skeleton-avatar-square\", ctx.nzShape === \"square\")(\"ant-skeleton-avatar-circle\", ctx.nzShape === \"circle\")(\"ant-skeleton-avatar-lg\", ctx.nzSize === \"large\")(\"ant-skeleton-avatar-sm\", ctx.nzSize === \"small\");\n      i0.ɵɵproperty(\"ngStyle\", ctx.styleMap);\n    }\n  },\n  directives: [i2.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonElementAvatarComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'nz-skeleton-element[nzType=\"avatar\"]',\n      template: `\n    <span\n      class=\"ant-skeleton-avatar\"\n      [class.ant-skeleton-avatar-square]=\"nzShape === 'square'\"\n      [class.ant-skeleton-avatar-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-avatar-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-avatar-sm]=\"nzSize === 'small'\"\n      [ngStyle]=\"styleMap\"\n    ></span>\n  `\n    }]\n  }], null, {\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSkeletonElementInputComponent {\n  constructor() {\n    this.nzSize = 'default';\n  }\n\n}\n\nNzSkeletonElementInputComponent.ɵfac = function NzSkeletonElementInputComponent_Factory(t) {\n  return new (t || NzSkeletonElementInputComponent)();\n};\n\nNzSkeletonElementInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSkeletonElementInputComponent,\n  selectors: [[\"nz-skeleton-element\", \"nzType\", \"input\"]],\n  inputs: {\n    nzSize: \"nzSize\"\n  },\n  attrs: _c2,\n  decls: 1,\n  vars: 4,\n  consts: [[1, \"ant-skeleton-input\"]],\n  template: function NzSkeletonElementInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"span\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-skeleton-input-lg\", ctx.nzSize === \"large\")(\"ant-skeleton-input-sm\", ctx.nzSize === \"small\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonElementInputComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'nz-skeleton-element[nzType=\"input\"]',\n      template: `\n    <span\n      class=\"ant-skeleton-input\"\n      [class.ant-skeleton-input-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-input-sm]=\"nzSize === 'small'\"\n    ></span>\n  `\n    }]\n  }], null, {\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzSkeletonElementImageComponent {}\n\nNzSkeletonElementImageComponent.ɵfac = function NzSkeletonElementImageComponent_Factory(t) {\n  return new (t || NzSkeletonElementImageComponent)();\n};\n\nNzSkeletonElementImageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSkeletonElementImageComponent,\n  selectors: [[\"nz-skeleton-element\", \"nzType\", \"image\"]],\n  attrs: _c3,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"ant-skeleton-image\"], [\"viewBox\", \"0 0 1098 1024\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"ant-skeleton-image-svg\"], [\"d\", \"M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z\", 1, \"ant-skeleton-image-path\"]],\n  template: function NzSkeletonElementImageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵelement(2, \"path\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonElementImageComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'nz-skeleton-element[nzType=\"image\"]',\n      template: `\n    <span class=\"ant-skeleton-image\">\n      <svg class=\"ant-skeleton-image-svg\" viewBox=\"0 0 1098 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z\"\n          class=\"ant-skeleton-image-path\"\n        />\n      </svg>\n    </span>\n  `\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzSkeletonComponent {\n  constructor(cdr, renderer, elementRef) {\n    this.cdr = cdr;\n    this.nzActive = false;\n    this.nzLoading = true;\n    this.nzRound = false;\n    this.nzTitle = true;\n    this.nzAvatar = false;\n    this.nzParagraph = true;\n    this.rowsList = [];\n    this.widthList = [];\n    renderer.addClass(elementRef.nativeElement, 'ant-skeleton');\n  }\n\n  toCSSUnit(value = '') {\n    return toCssPixel(value);\n  }\n\n  getTitleProps() {\n    const hasAvatar = !!this.nzAvatar;\n    const hasParagraph = !!this.nzParagraph;\n    let width = '';\n\n    if (!hasAvatar && hasParagraph) {\n      width = '38%';\n    } else if (hasAvatar && hasParagraph) {\n      width = '50%';\n    }\n\n    return Object.assign({\n      width\n    }, this.getProps(this.nzTitle));\n  }\n\n  getAvatarProps() {\n    const shape = !!this.nzTitle && !this.nzParagraph ? 'square' : 'circle';\n    const size = 'large';\n    return Object.assign({\n      shape,\n      size\n    }, this.getProps(this.nzAvatar));\n  }\n\n  getParagraphProps() {\n    const hasAvatar = !!this.nzAvatar;\n    const hasTitle = !!this.nzTitle;\n    const basicProps = {}; // Width\n\n    if (!hasAvatar || !hasTitle) {\n      basicProps.width = '61%';\n    } // Rows\n\n\n    if (!hasAvatar && hasTitle) {\n      basicProps.rows = 3;\n    } else {\n      basicProps.rows = 2;\n    }\n\n    return Object.assign(Object.assign({}, basicProps), this.getProps(this.nzParagraph));\n  }\n\n  getProps(prop) {\n    return prop && typeof prop === 'object' ? prop : {};\n  }\n\n  getWidthList() {\n    const {\n      width,\n      rows\n    } = this.paragraph;\n    let widthList = [];\n\n    if (width && Array.isArray(width)) {\n      widthList = width;\n    } else if (width && !Array.isArray(width)) {\n      widthList = [];\n      widthList[rows - 1] = width;\n    }\n\n    return widthList;\n  }\n\n  updateProps() {\n    this.title = this.getTitleProps();\n    this.avatar = this.getAvatarProps();\n    this.paragraph = this.getParagraphProps();\n    this.rowsList = [...Array(this.paragraph.rows)];\n    this.widthList = this.getWidthList();\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit() {\n    this.updateProps();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.nzTitle || changes.nzAvatar || changes.nzParagraph) {\n      this.updateProps();\n    }\n  }\n\n}\n\nNzSkeletonComponent.ɵfac = function NzSkeletonComponent_Factory(t) {\n  return new (t || NzSkeletonComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzSkeletonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSkeletonComponent,\n  selectors: [[\"nz-skeleton\"]],\n  hostVars: 6,\n  hostBindings: function NzSkeletonComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-skeleton-with-avatar\", !!ctx.nzAvatar)(\"ant-skeleton-active\", ctx.nzActive)(\"ant-skeleton-round\", !!ctx.nzRound);\n    }\n  },\n  inputs: {\n    nzActive: \"nzActive\",\n    nzLoading: \"nzLoading\",\n    nzRound: \"nzRound\",\n    nzTitle: \"nzTitle\",\n    nzAvatar: \"nzAvatar\",\n    nzParagraph: \"nzParagraph\"\n  },\n  exportAs: [\"nzSkeleton\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"ant-skeleton-header\", 4, \"ngIf\"], [1, \"ant-skeleton-content\"], [\"class\", \"ant-skeleton-title\", 3, \"width\", 4, \"ngIf\"], [\"class\", \"ant-skeleton-paragraph\", 4, \"ngIf\"], [1, \"ant-skeleton-header\"], [\"nzType\", \"avatar\", 3, \"nzSize\", \"nzShape\"], [1, \"ant-skeleton-title\"], [1, \"ant-skeleton-paragraph\"], [3, \"width\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function NzSkeletonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzSkeletonComponent_ng_container_0_Template, 5, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzSkeletonComponent_ng_container_1_Template, 2, 0, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nzLoading);\n    }\n  },\n  directives: [NzSkeletonElementAvatarComponent, i2.NgIf, NzSkeletonElementDirective, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-skeleton',\n      exportAs: 'nzSkeleton',\n      host: {\n        '[class.ant-skeleton-with-avatar]': '!!nzAvatar',\n        '[class.ant-skeleton-active]': 'nzActive',\n        '[class.ant-skeleton-round]': '!!nzRound'\n      },\n      template: `\n    <ng-container *ngIf=\"nzLoading\">\n      <div class=\"ant-skeleton-header\" *ngIf=\"!!nzAvatar\">\n        <nz-skeleton-element\n          nzType=\"avatar\"\n          [nzSize]=\"avatar.size || 'default'\"\n          [nzShape]=\"avatar.shape || 'circle'\"\n        ></nz-skeleton-element>\n      </div>\n      <div class=\"ant-skeleton-content\">\n        <h3 *ngIf=\"!!nzTitle\" class=\"ant-skeleton-title\" [style.width]=\"toCSSUnit(title.width)\"></h3>\n        <ul *ngIf=\"!!nzParagraph\" class=\"ant-skeleton-paragraph\">\n          <li *ngFor=\"let row of rowsList; let i = index\" [style.width]=\"toCSSUnit(widthList[i])\"></li>\n        </ul>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!nzLoading\">\n      <ng-content></ng-content>\n    </ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzActive: [{\n      type: Input\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzRound: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzAvatar: [{\n      type: Input\n    }],\n    nzParagraph: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzSkeletonModule {}\n\nNzSkeletonModule.ɵfac = function NzSkeletonModule_Factory(t) {\n  return new (t || NzSkeletonModule)();\n};\n\nNzSkeletonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSkeletonModule\n});\nNzSkeletonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSkeletonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzSkeletonComponent, NzSkeletonElementDirective, NzSkeletonElementButtonComponent, NzSkeletonElementAvatarComponent, NzSkeletonElementImageComponent, NzSkeletonElementInputComponent],\n      imports: [BidiModule, CommonModule],\n      exports: [NzSkeletonComponent, NzSkeletonElementDirective, NzSkeletonElementButtonComponent, NzSkeletonElementAvatarComponent, NzSkeletonElementImageComponent, NzSkeletonElementInputComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSkeletonComponent, NzSkeletonElementAvatarComponent, NzSkeletonElementButtonComponent, NzSkeletonElementDirective, NzSkeletonElementImageComponent, NzSkeletonElementInputComponent, NzSkeletonModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-skeleton.mjs"],"names":["i0","Directive","Input","Component","ChangeDetectionStrategy","ViewEncapsulation","NgModule","InputBoolean","toCssPixel","__decorate","i2","CommonModule","BidiModule","NzSkeletonElementDirective","constructor","nzActive","nzBlock","ɵfac","ɵdir","prototype","type","args","selector","host","class","nzType","NzSkeletonElementButtonComponent","nzShape","nzSize","ɵcmp","changeDetection","OnPush","template","NzSkeletonElementAvatarComponent","styleMap","ngOnChanges","changes","sideLength","width","height","NgStyle","NzSkeletonElementInputComponent","NzSkeletonElementImageComponent","NzSkeletonComponent","cdr","renderer","elementRef","nzLoading","nzRound","nzTitle","nzAvatar","nzParagraph","rowsList","widthList","addClass","nativeElement","toCSSUnit","value","getTitleProps","hasAvatar","hasParagraph","Object","assign","getProps","getAvatarProps","shape","size","getParagraphProps","hasTitle","basicProps","rows","prop","getWidthList","paragraph","Array","isArray","updateProps","title","avatar","markForCheck","ngOnInit","ChangeDetectorRef","Renderer2","ElementRef","NgIf","NgForOf","encapsulation","None","exportAs","NzSkeletonModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { InputBoolean, toCssPixel } from 'ng-zorro-antd/core/util';\nimport { __decorate } from 'tslib';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nclass NzSkeletonElementDirective {\n    constructor() {\n        this.nzActive = false;\n        this.nzBlock = false;\n    }\n}\nNzSkeletonElementDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzSkeletonElementDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSkeletonElementDirective, selector: \"nz-skeleton-element\", inputs: { nzActive: \"nzActive\", nzType: \"nzType\", nzBlock: \"nzBlock\" }, host: { properties: { \"class.ant-skeleton-active\": \"nzActive\", \"class.ant-skeleton-block\": \"nzBlock\" }, classAttribute: \"ant-skeleton ant-skeleton-element\" }, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzSkeletonElementDirective.prototype, \"nzBlock\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'nz-skeleton-element',\n                    host: {\n                        class: 'ant-skeleton ant-skeleton-element',\n                        '[class.ant-skeleton-active]': 'nzActive',\n                        '[class.ant-skeleton-block]': 'nzBlock'\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzActive: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzBlock: [{\n                type: Input\n            }] } });\nclass NzSkeletonElementButtonComponent {\n    constructor() {\n        this.nzShape = 'default';\n        this.nzSize = 'default';\n    }\n}\nNzSkeletonElementButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSkeletonElementButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSkeletonElementButtonComponent, selector: \"nz-skeleton-element[nzType=\\\"button\\\"]\", inputs: { nzShape: \"nzShape\", nzSize: \"nzSize\" }, ngImport: i0, template: `\n    <span\n      class=\"ant-skeleton-button\"\n      [class.ant-skeleton-button-round]=\"nzShape === 'round'\"\n      [class.ant-skeleton-button-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-button-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-button-sm]=\"nzSize === 'small'\"\n    ></span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'nz-skeleton-element[nzType=\"button\"]',\n                    template: `\n    <span\n      class=\"ant-skeleton-button\"\n      [class.ant-skeleton-button-round]=\"nzShape === 'round'\"\n      [class.ant-skeleton-button-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-button-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-button-sm]=\"nzSize === 'small'\"\n    ></span>\n  `\n                }]\n        }], propDecorators: { nzShape: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\nclass NzSkeletonElementAvatarComponent {\n    constructor() {\n        this.nzShape = 'circle';\n        this.nzSize = 'default';\n        this.styleMap = {};\n    }\n    ngOnChanges(changes) {\n        if (changes.nzSize && typeof this.nzSize === 'number') {\n            const sideLength = `${this.nzSize}px`;\n            this.styleMap = { width: sideLength, height: sideLength, 'line-height': sideLength };\n        }\n        else {\n            this.styleMap = {};\n        }\n    }\n}\nNzSkeletonElementAvatarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementAvatarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSkeletonElementAvatarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSkeletonElementAvatarComponent, selector: \"nz-skeleton-element[nzType=\\\"avatar\\\"]\", inputs: { nzShape: \"nzShape\", nzSize: \"nzSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <span\n      class=\"ant-skeleton-avatar\"\n      [class.ant-skeleton-avatar-square]=\"nzShape === 'square'\"\n      [class.ant-skeleton-avatar-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-avatar-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-avatar-sm]=\"nzSize === 'small'\"\n      [ngStyle]=\"styleMap\"\n    ></span>\n  `, isInline: true, directives: [{ type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementAvatarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'nz-skeleton-element[nzType=\"avatar\"]',\n                    template: `\n    <span\n      class=\"ant-skeleton-avatar\"\n      [class.ant-skeleton-avatar-square]=\"nzShape === 'square'\"\n      [class.ant-skeleton-avatar-circle]=\"nzShape === 'circle'\"\n      [class.ant-skeleton-avatar-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-avatar-sm]=\"nzSize === 'small'\"\n      [ngStyle]=\"styleMap\"\n    ></span>\n  `\n                }]\n        }], propDecorators: { nzShape: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\nclass NzSkeletonElementInputComponent {\n    constructor() {\n        this.nzSize = 'default';\n    }\n}\nNzSkeletonElementInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementInputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSkeletonElementInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSkeletonElementInputComponent, selector: \"nz-skeleton-element[nzType=\\\"input\\\"]\", inputs: { nzSize: \"nzSize\" }, ngImport: i0, template: `\n    <span\n      class=\"ant-skeleton-input\"\n      [class.ant-skeleton-input-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-input-sm]=\"nzSize === 'small'\"\n    ></span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'nz-skeleton-element[nzType=\"input\"]',\n                    template: `\n    <span\n      class=\"ant-skeleton-input\"\n      [class.ant-skeleton-input-lg]=\"nzSize === 'large'\"\n      [class.ant-skeleton-input-sm]=\"nzSize === 'small'\"\n    ></span>\n  `\n                }]\n        }], propDecorators: { nzSize: [{\n                type: Input\n            }] } });\nclass NzSkeletonElementImageComponent {\n}\nNzSkeletonElementImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementImageComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzSkeletonElementImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSkeletonElementImageComponent, selector: \"nz-skeleton-element[nzType=\\\"image\\\"]\", ngImport: i0, template: `\n    <span class=\"ant-skeleton-image\">\n      <svg class=\"ant-skeleton-image-svg\" viewBox=\"0 0 1098 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z\"\n          class=\"ant-skeleton-image-path\"\n        />\n      </svg>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonElementImageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'nz-skeleton-element[nzType=\"image\"]',\n                    template: `\n    <span class=\"ant-skeleton-image\">\n      <svg class=\"ant-skeleton-image-svg\" viewBox=\"0 0 1098 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z\"\n          class=\"ant-skeleton-image-path\"\n        />\n      </svg>\n    </span>\n  `\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSkeletonComponent {\n    constructor(cdr, renderer, elementRef) {\n        this.cdr = cdr;\n        this.nzActive = false;\n        this.nzLoading = true;\n        this.nzRound = false;\n        this.nzTitle = true;\n        this.nzAvatar = false;\n        this.nzParagraph = true;\n        this.rowsList = [];\n        this.widthList = [];\n        renderer.addClass(elementRef.nativeElement, 'ant-skeleton');\n    }\n    toCSSUnit(value = '') {\n        return toCssPixel(value);\n    }\n    getTitleProps() {\n        const hasAvatar = !!this.nzAvatar;\n        const hasParagraph = !!this.nzParagraph;\n        let width = '';\n        if (!hasAvatar && hasParagraph) {\n            width = '38%';\n        }\n        else if (hasAvatar && hasParagraph) {\n            width = '50%';\n        }\n        return Object.assign({ width }, this.getProps(this.nzTitle));\n    }\n    getAvatarProps() {\n        const shape = !!this.nzTitle && !this.nzParagraph ? 'square' : 'circle';\n        const size = 'large';\n        return Object.assign({ shape, size }, this.getProps(this.nzAvatar));\n    }\n    getParagraphProps() {\n        const hasAvatar = !!this.nzAvatar;\n        const hasTitle = !!this.nzTitle;\n        const basicProps = {};\n        // Width\n        if (!hasAvatar || !hasTitle) {\n            basicProps.width = '61%';\n        }\n        // Rows\n        if (!hasAvatar && hasTitle) {\n            basicProps.rows = 3;\n        }\n        else {\n            basicProps.rows = 2;\n        }\n        return Object.assign(Object.assign({}, basicProps), this.getProps(this.nzParagraph));\n    }\n    getProps(prop) {\n        return prop && typeof prop === 'object' ? prop : {};\n    }\n    getWidthList() {\n        const { width, rows } = this.paragraph;\n        let widthList = [];\n        if (width && Array.isArray(width)) {\n            widthList = width;\n        }\n        else if (width && !Array.isArray(width)) {\n            widthList = [];\n            widthList[rows - 1] = width;\n        }\n        return widthList;\n    }\n    updateProps() {\n        this.title = this.getTitleProps();\n        this.avatar = this.getAvatarProps();\n        this.paragraph = this.getParagraphProps();\n        this.rowsList = [...Array(this.paragraph.rows)];\n        this.widthList = this.getWidthList();\n        this.cdr.markForCheck();\n    }\n    ngOnInit() {\n        this.updateProps();\n    }\n    ngOnChanges(changes) {\n        if (changes.nzTitle || changes.nzAvatar || changes.nzParagraph) {\n            this.updateProps();\n        }\n    }\n}\nNzSkeletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNzSkeletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSkeletonComponent, selector: \"nz-skeleton\", inputs: { nzActive: \"nzActive\", nzLoading: \"nzLoading\", nzRound: \"nzRound\", nzTitle: \"nzTitle\", nzAvatar: \"nzAvatar\", nzParagraph: \"nzParagraph\" }, host: { properties: { \"class.ant-skeleton-with-avatar\": \"!!nzAvatar\", \"class.ant-skeleton-active\": \"nzActive\", \"class.ant-skeleton-round\": \"!!nzRound\" } }, exportAs: [\"nzSkeleton\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"nzLoading\">\n      <div class=\"ant-skeleton-header\" *ngIf=\"!!nzAvatar\">\n        <nz-skeleton-element\n          nzType=\"avatar\"\n          [nzSize]=\"avatar.size || 'default'\"\n          [nzShape]=\"avatar.shape || 'circle'\"\n        ></nz-skeleton-element>\n      </div>\n      <div class=\"ant-skeleton-content\">\n        <h3 *ngIf=\"!!nzTitle\" class=\"ant-skeleton-title\" [style.width]=\"toCSSUnit(title.width)\"></h3>\n        <ul *ngIf=\"!!nzParagraph\" class=\"ant-skeleton-paragraph\">\n          <li *ngFor=\"let row of rowsList; let i = index\" [style.width]=\"toCSSUnit(widthList[i])\"></li>\n        </ul>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!nzLoading\">\n      <ng-content></ng-content>\n    </ng-container>\n  `, isInline: true, components: [{ type: NzSkeletonElementAvatarComponent, selector: \"nz-skeleton-element[nzType=\\\"avatar\\\"]\", inputs: [\"nzShape\", \"nzSize\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: NzSkeletonElementDirective, selector: \"nz-skeleton-element\", inputs: [\"nzActive\", \"nzType\", \"nzBlock\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-skeleton',\n                    exportAs: 'nzSkeleton',\n                    host: {\n                        '[class.ant-skeleton-with-avatar]': '!!nzAvatar',\n                        '[class.ant-skeleton-active]': 'nzActive',\n                        '[class.ant-skeleton-round]': '!!nzRound'\n                    },\n                    template: `\n    <ng-container *ngIf=\"nzLoading\">\n      <div class=\"ant-skeleton-header\" *ngIf=\"!!nzAvatar\">\n        <nz-skeleton-element\n          nzType=\"avatar\"\n          [nzSize]=\"avatar.size || 'default'\"\n          [nzShape]=\"avatar.shape || 'circle'\"\n        ></nz-skeleton-element>\n      </div>\n      <div class=\"ant-skeleton-content\">\n        <h3 *ngIf=\"!!nzTitle\" class=\"ant-skeleton-title\" [style.width]=\"toCSSUnit(title.width)\"></h3>\n        <ul *ngIf=\"!!nzParagraph\" class=\"ant-skeleton-paragraph\">\n          <li *ngFor=\"let row of rowsList; let i = index\" [style.width]=\"toCSSUnit(widthList[i])\"></li>\n        </ul>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!nzLoading\">\n      <ng-content></ng-content>\n    </ng-container>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzActive: [{\n                type: Input\n            }], nzLoading: [{\n                type: Input\n            }], nzRound: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzAvatar: [{\n                type: Input\n            }], nzParagraph: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSkeletonModule {\n}\nNzSkeletonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzSkeletonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonModule, declarations: [NzSkeletonComponent,\n        NzSkeletonElementDirective,\n        NzSkeletonElementButtonComponent,\n        NzSkeletonElementAvatarComponent,\n        NzSkeletonElementImageComponent,\n        NzSkeletonElementInputComponent], imports: [BidiModule, CommonModule], exports: [NzSkeletonComponent,\n        NzSkeletonElementDirective,\n        NzSkeletonElementButtonComponent,\n        NzSkeletonElementAvatarComponent,\n        NzSkeletonElementImageComponent,\n        NzSkeletonElementInputComponent] });\nNzSkeletonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonModule, imports: [[BidiModule, CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSkeletonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzSkeletonComponent,\n                        NzSkeletonElementDirective,\n                        NzSkeletonElementButtonComponent,\n                        NzSkeletonElementAvatarComponent,\n                        NzSkeletonElementImageComponent,\n                        NzSkeletonElementInputComponent\n                    ],\n                    imports: [BidiModule, CommonModule],\n                    exports: [\n                        NzSkeletonComponent,\n                        NzSkeletonElementDirective,\n                        NzSkeletonElementButtonComponent,\n                        NzSkeletonElementAvatarComponent,\n                        NzSkeletonElementImageComponent,\n                        NzSkeletonElementInputComponent\n                    ]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSkeletonComponent, NzSkeletonElementAvatarComponent, NzSkeletonElementButtonComponent, NzSkeletonElementDirective, NzSkeletonElementImageComponent, NzSkeletonElementInputComponent, NzSkeletonModule };\n"]},"metadata":{},"sourceType":"module"}