{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { TAB, ESCAPE, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i9 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Self, Injector, forwardRef, Component, Optional, Host, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, merge, of } from 'rxjs';\nimport { takeUntil, tap, filter } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzTreeBaseService, NzTreeBase, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/select';\nimport { NzSelectSearchComponent, NzSelectModule } from 'ng-zorro-antd/select';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i6 from 'ng-zorro-antd/tree';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport * as i7 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i10 from 'ng-zorro-antd/core/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = [\"nzTreeTemplate\"];\nconst _c1 = [\"treeRef\"];\n\nfunction NzTreeSelectComponent_ng_template_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵelement(1, \"nz-embed-empty\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzComponentName\", \"tree-select\")(\"specificContent\", ctx_r7.nzNotFoundContent);\n  }\n}\n\nconst _c2 = function () {\n  return [];\n};\n\nfunction NzTreeSelectComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"nz-tree\", 8, 9);\n    i0.ɵɵlistener(\"nzExpandChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzExpandChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onExpandedKeysChange($event);\n    })(\"nzClick\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.nzTreeClick.emit($event);\n    })(\"nzCheckedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckedKeysChange_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.updateSelectedNodes();\n    })(\"nzSelectedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSelectedKeysChange_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.updateSelectedNodes();\n    })(\"nzCheckBoxChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckBoxChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.nzTreeCheckBoxChange.emit($event);\n    })(\"nzSearchValueChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSearchValueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.setSearchValues($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NzTreeSelectComponent_ng_template_0_span_3_Template, 2, 2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-dropdown-placement-bottomLeft\", ctx_r0.dropDownPosition === \"bottom\")(\"ant-select-dropdown-placement-topLeft\", ctx_r0.dropDownPosition === \"top\")(\"ant-tree-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    i0.ɵɵproperty(\"@slideMotion\", \"enter\")(\"ngClass\", ctx_r0.dropdownClassName)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"dir\", ctx_r0.dir)(\"ngStyle\", ctx_r0.nzDropdownStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.isNotFound)(\"nzData\", ctx_r0.nzNodes)(\"nzMultiple\", ctx_r0.nzMultiple)(\"nzSearchValue\", ctx_r0.inputValue)(\"nzHideUnMatched\", ctx_r0.nzHideUnMatched)(\"nzShowIcon\", ctx_r0.nzShowIcon)(\"nzCheckable\", ctx_r0.nzCheckable)(\"nzAsyncData\", ctx_r0.nzAsyncData)(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzExpandAll\", ctx_r0.nzDefaultExpandAll)(\"nzExpandedKeys\", ctx_r0.expandedKeys)(\"nzCheckedKeys\", ctx_r0.nzCheckable ? ctx_r0.value : i0.ɵɵpureFunction0(34, _c2))(\"nzSelectedKeys\", !ctx_r0.nzCheckable ? ctx_r0.value : i0.ɵɵpureFunction0(35, _c2))(\"nzTreeTemplate\", ctx_r0.treeTemplate)(\"nzCheckStrictly\", ctx_r0.nzCheckStrictly)(\"nzVirtualItemSize\", ctx_r0.nzVirtualItemSize)(\"nzVirtualMaxBufferPx\", ctx_r0.nzVirtualMaxBufferPx)(\"nzVirtualMinBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"nzVirtualHeight\", ctx_r0.nzVirtualHeight);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzNodes.length === 0 || ctx_r0.isNotFound);\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-select-item\", 15);\n    i0.ɵɵlistener(\"delete\", function NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template_nz_select_item_delete_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const node_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.removeSelected(node_r17, true);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r17 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"deletable\", true)(\"disabled\", node_r17.isDisabled || ctx_r15.nzDisabled)(\"label\", ctx_r15.nzDisplayWith(node_r17));\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 16);\n    i0.ɵɵpipe(1, \"slice\");\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"contentTemplateOutlet\", ctx_r16.nzMaxTagPlaceholder)(\"contentTemplateOutletContext\", i0.ɵɵpipeBind2(1, 5, ctx_r16.selectedNodes, ctx_r16.nzMaxTagCount))(\"deletable\", false)(\"disabled\", false)(\"label\", \"+ \" + (ctx_r16.selectedNodes.length - ctx_r16.nzMaxTagCount) + \" ...\");\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template, 1, 3, \"nz-select-item\", 13);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵtemplate(3, NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template, 2, 8, \"nz-select-item\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 3, ctx_r1.selectedNodes, 0, ctx_r1.nzMaxTagCount))(\"ngForTrackBy\", ctx_r1.trackValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedNodes.length > ctx_r1.nzMaxTagCount);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_placeholder_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-placeholder\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", ctx_r2.placeHolderDisplay);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.nzPlaceHolder);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"deletable\", false)(\"disabled\", false)(\"label\", ctx_r3.nzDisplayWith(ctx_r3.selectedNodes[0]));\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_arrow_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-arrow\");\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_clear_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-select-clear\", 19);\n    i0.ɵɵlistener(\"clear\", function NzTreeSelectComponent_nz_select_clear_7_Template_nz_select_clear_clear_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onClearSelection();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nclass NzTreeSelectService extends NzTreeBaseService {}\n\nNzTreeSelectService.ɵfac = /* @__PURE__ */function () {\n  let ɵNzTreeSelectService_BaseFactory;\n  return function NzTreeSelectService_Factory(t) {\n    return (ɵNzTreeSelectService_BaseFactory || (ɵNzTreeSelectService_BaseFactory = i0.ɵɵgetInheritedFactory(NzTreeSelectService)))(t || NzTreeSelectService);\n  };\n}();\n\nNzTreeSelectService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzTreeSelectService,\n  factory: NzTreeSelectService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeSelectService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction higherOrderServiceFactory(injector) {\n  return injector.get(NzTreeSelectService);\n}\n\nconst NZ_CONFIG_MODULE_NAME = 'treeSelect';\nconst TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\n\nclass NzTreeSelectComponent extends NzTreeBase {\n  constructor(nzTreeService, nzConfigService, renderer, cdr, elementRef, directionality, focusMonitor, noAnimation) {\n    super(nzTreeService);\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.focusMonitor = focusMonitor;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzId = null;\n    this.nzAllowClear = true;\n    this.nzShowExpand = true;\n    this.nzShowLine = false;\n    this.nzDropdownMatchSelectWidth = true;\n    this.nzCheckable = false;\n    this.nzHideUnMatched = false;\n    this.nzShowIcon = false;\n    this.nzShowSearch = false;\n    this.nzDisabled = false;\n    this.nzAsyncData = false;\n    this.nzMultiple = false;\n    this.nzDefaultExpandAll = false;\n    this.nzCheckStrictly = false;\n    this.nzVirtualItemSize = 28;\n    this.nzVirtualMaxBufferPx = 500;\n    this.nzVirtualMinBufferPx = 28;\n    this.nzVirtualHeight = null;\n    this.nzNodes = [];\n    this.nzOpen = false;\n    this.nzSize = 'default';\n    this.nzPlaceHolder = '';\n    this.nzDropdownStyle = null;\n    this.nzBackdrop = false;\n\n    this.nzDisplayWith = node => node.title;\n\n    this.nzMaxTagPlaceholder = null;\n    this.nzOpenChange = new EventEmitter();\n    this.nzCleared = new EventEmitter();\n    this.nzRemoved = new EventEmitter();\n    this.nzExpandChange = new EventEmitter();\n    this.nzTreeClick = new EventEmitter();\n    this.nzTreeCheckBoxChange = new EventEmitter();\n    this.dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n    this.isComposing = false;\n    this.isDestroy = true;\n    this.isNotFound = false;\n    this.focused = false;\n    this.inputValue = '';\n    this.dropDownPosition = 'bottom';\n    this.selectedNodes = [];\n    this.expandedKeys = [];\n    this.value = [];\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n\n    this.onChange = _value => {};\n\n    this.onTouched = () => {};\n\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-select');\n  }\n\n  set nzExpandedKeys(value) {\n    this.expandedKeys = value;\n  }\n\n  get nzExpandedKeys() {\n    return this.expandedKeys;\n  }\n\n  get treeTemplate() {\n    return this.nzTreeTemplate || this.nzTreeTemplateChild;\n  }\n\n  get placeHolderDisplay() {\n    return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n  }\n\n  get isMultiple() {\n    return this.nzMultiple || this.nzCheckable;\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.isDestroy = false;\n    this.subscribeSelectionChange();\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        this.focused = false;\n        this.cdr.markForCheck();\n        Promise.resolve().then(() => {\n          this.onTouched();\n        });\n      } else {\n        this.focused = true;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.isDestroy = true;\n    this.closeDropDown();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  isComposingChange(isComposing) {\n    this.isComposing = isComposing;\n  }\n\n  setDisabledState(isDisabled) {\n    this.nzDisabled = isDisabled;\n    this.closeDropDown();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzNodes,\n      nzDropdownClassName\n    } = changes;\n\n    if (nzNodes) {\n      this.updateSelectedNodes(true);\n    }\n\n    if (nzDropdownClassName) {\n      const className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n      this.dropdownClassName = className ? `${TREE_SELECT_DEFAULT_CLASS} ${className}` : TREE_SELECT_DEFAULT_CLASS;\n    }\n  }\n\n  writeValue(value) {\n    if (isNotNil(value)) {\n      if (this.isMultiple && Array.isArray(value)) {\n        this.value = value;\n      } else {\n        this.value = [value];\n      }\n\n      this.updateSelectedNodes(true);\n    } else {\n      this.value = [];\n      this.selectedNodes.forEach(node => {\n        this.removeSelected(node, false);\n      });\n      this.selectedNodes = [];\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  onKeydown(event) {\n    if (this.nzDisabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case ESCAPE:\n        /**\n         * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n         */\n        break;\n\n      case TAB:\n        this.closeDropDown();\n        break;\n\n      default:\n        if (!this.nzOpen) {\n          this.openDropdown();\n        }\n\n    }\n  }\n\n  trigger() {\n    if (this.nzDisabled || !this.nzDisabled && this.nzOpen) {\n      this.closeDropDown();\n    } else {\n      this.openDropdown();\n    }\n  }\n\n  openDropdown() {\n    if (!this.nzDisabled) {\n      this.nzOpen = true;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.updateCdkConnectedOverlayStatus();\n\n      if (this.nzShowSearch || this.isMultiple) {\n        this.focusOnInput();\n      }\n    }\n  }\n\n  closeDropDown() {\n    this.onTouched();\n    this.nzOpen = false;\n    this.inputValue = '';\n    this.isNotFound = false;\n    this.nzOpenChange.emit(this.nzOpen);\n    this.cdr.markForCheck();\n  }\n\n  onKeyDownInput(e) {\n    const keyCode = e.keyCode;\n    const eventTarget = e.target;\n\n    if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n      e.preventDefault();\n\n      if (this.selectedNodes.length) {\n        const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n        this.removeSelected(removeNode);\n      }\n    }\n  }\n\n  onExpandedKeysChange(value) {\n    this.nzExpandChange.emit(value);\n    this.expandedKeys = [...value.keys];\n  }\n\n  setInputValue(value) {\n    this.inputValue = value;\n    this.updatePosition();\n  }\n\n  removeSelected(node, emit = true) {\n    node.isSelected = false;\n    node.isChecked = false;\n\n    if (this.nzCheckable) {\n      this.nzTreeService.conduct(node, this.nzCheckStrictly);\n    } else {\n      this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n    }\n\n    if (emit) {\n      this.nzRemoved.emit(node);\n    }\n  }\n\n  focusOnInput() {\n    if (this.nzSelectSearchComponent) {\n      this.nzSelectSearchComponent.focus();\n    }\n  }\n\n  subscribeSelectionChange() {\n    merge(this.nzTreeClick.pipe(tap(event => {\n      const node = event.node;\n\n      if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n        node.isChecked = !node.isChecked;\n        node.isHalfChecked = false;\n\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n      }\n\n      if (this.nzCheckable) {\n        node.isSelected = false;\n      }\n    }), filter(event => {\n      const node = event.node;\n      return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n    })), this.nzCheckable ? this.nzTreeCheckBoxChange : of(), this.nzCleared, this.nzRemoved).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateSelectedNodes();\n      const value = this.selectedNodes.map(node => node.key);\n      this.value = [...value];\n\n      if (this.nzShowSearch || this.isMultiple) {\n        this.inputValue = '';\n        this.isNotFound = false;\n      }\n\n      if (this.isMultiple) {\n        this.onChange(value);\n        this.focusOnInput();\n        this.updatePosition();\n      } else {\n        this.closeDropDown();\n        this.onChange(value.length ? value[0] : null);\n      }\n    });\n  }\n\n  updateSelectedNodes(init = false) {\n    if (init) {\n      const nodes = this.coerceTreeNodes(this.nzNodes);\n      this.nzTreeService.isMultiple = this.isMultiple;\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n      this.nzTreeService.initTree(nodes);\n\n      if (this.nzCheckable) {\n        this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n      } else {\n        this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n      }\n    }\n\n    this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n  }\n\n  updatePosition() {\n    reqAnimFrame(() => {\n      var _a, _b;\n\n      (_b = (_a = this.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();\n    });\n  }\n\n  onPositionChange(position) {\n    this.dropDownPosition = position.connectionPair.originY;\n  }\n\n  onClearSelection() {\n    this.selectedNodes.forEach(node => {\n      this.removeSelected(node, false);\n    });\n    this.nzCleared.emit();\n  }\n\n  onClickOutside(event) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.closeDropDown();\n    }\n  }\n\n  setSearchValues($event) {\n    Promise.resolve().then(() => {\n      this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys.length === 0;\n    });\n  }\n\n  updateCdkConnectedOverlayStatus() {\n    this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n  }\n\n  trackValue(_index, option) {\n    return option.key;\n  }\n\n}\n\nNzTreeSelectComponent.ɵfac = function NzTreeSelectComponent_Factory(t) {\n  return new (t || NzTreeSelectComponent)(i0.ɵɵdirectiveInject(NzTreeSelectService), i0.ɵɵdirectiveInject(i2.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(i5.NzNoAnimationDirective, 9));\n};\n\nNzTreeSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTreeSelectComponent,\n  selectors: [[\"nz-tree-select\"]],\n  contentQueries: function NzTreeSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n    }\n  },\n  viewQuery: function NzTreeSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NzSelectSearchComponent, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(CdkOverlayOrigin, 7);\n      i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzSelectSearchComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-select\"],\n  hostVars: 22,\n  hostBindings: function NzTreeSelectComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzTreeSelectComponent_click_HostBindingHandler() {\n        return ctx.trigger();\n      })(\"keydown\", function NzTreeSelectComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-rtl\", ctx.dir === \"rtl\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-single\", !ctx.isMultiple)(\"ant-select-show-arrow\", !ctx.isMultiple)(\"ant-select-show-search\", !ctx.isMultiple)(\"ant-select-multiple\", ctx.isMultiple)(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-open\", ctx.nzOpen)(\"ant-select-focused\", ctx.nzOpen || ctx.focused);\n    }\n  },\n  inputs: {\n    nzId: \"nzId\",\n    nzAllowClear: \"nzAllowClear\",\n    nzShowExpand: \"nzShowExpand\",\n    nzShowLine: \"nzShowLine\",\n    nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\",\n    nzCheckable: \"nzCheckable\",\n    nzHideUnMatched: \"nzHideUnMatched\",\n    nzShowIcon: \"nzShowIcon\",\n    nzShowSearch: \"nzShowSearch\",\n    nzDisabled: \"nzDisabled\",\n    nzAsyncData: \"nzAsyncData\",\n    nzMultiple: \"nzMultiple\",\n    nzDefaultExpandAll: \"nzDefaultExpandAll\",\n    nzCheckStrictly: \"nzCheckStrictly\",\n    nzVirtualItemSize: \"nzVirtualItemSize\",\n    nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n    nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n    nzVirtualHeight: \"nzVirtualHeight\",\n    nzExpandedIcon: \"nzExpandedIcon\",\n    nzNotFoundContent: \"nzNotFoundContent\",\n    nzNodes: \"nzNodes\",\n    nzOpen: \"nzOpen\",\n    nzSize: \"nzSize\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzDropdownStyle: \"nzDropdownStyle\",\n    nzDropdownClassName: \"nzDropdownClassName\",\n    nzBackdrop: \"nzBackdrop\",\n    nzExpandedKeys: \"nzExpandedKeys\",\n    nzDisplayWith: \"nzDisplayWith\",\n    nzMaxTagCount: \"nzMaxTagCount\",\n    nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\",\n    nzTreeTemplate: \"nzTreeTemplate\"\n  },\n  outputs: {\n    nzOpenChange: \"nzOpenChange\",\n    nzCleared: \"nzCleared\",\n    nzRemoved: \"nzRemoved\",\n    nzExpandChange: \"nzExpandChange\",\n    nzTreeClick: \"nzTreeClick\",\n    nzTreeCheckBoxChange: \"nzTreeCheckBoxChange\"\n  },\n  exportAs: [\"nzTreeSelect\"],\n  features: [i0.ɵɵProvidersFeature([NzTreeSelectService, {\n    provide: NzTreeHigherOrderServiceToken,\n    useFactory: higherOrderServiceFactory,\n    deps: [[new Self(), Injector]]\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzTreeSelectComponent),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 17,\n  consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayWidth\", \"overlayOutsideClick\", \"detach\", \"positionChange\"], [\"cdkOverlayOrigin\", \"\", 1, \"ant-select-selector\"], [4, \"ngIf\"], [3, \"nzId\", \"showInput\", \"value\", \"mirrorSync\", \"disabled\", \"focusTrigger\", \"keydown\", \"isComposingChange\", \"valueChange\"], [3, \"placeholder\", \"display\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"clear\", 4, \"ngIf\"], [3, \"ngClass\", \"nzNoAnimation\", \"dir\", \"ngStyle\"], [\"nzNoAnimation\", \"\", \"nzSelectMode\", \"\", \"nzBlockNode\", \"\", 3, \"hidden\", \"nzData\", \"nzMultiple\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzShowIcon\", \"nzCheckable\", \"nzAsyncData\", \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzExpandAll\", \"nzExpandedKeys\", \"nzCheckedKeys\", \"nzSelectedKeys\", \"nzTreeTemplate\", \"nzCheckStrictly\", \"nzVirtualItemSize\", \"nzVirtualMaxBufferPx\", \"nzVirtualMinBufferPx\", \"nzVirtualHeight\", \"nzExpandChange\", \"nzClick\", \"nzCheckedKeysChange\", \"nzSelectedKeysChange\", \"nzCheckBoxChange\", \"nzSearchValueChange\"], [\"treeRef\", \"\"], [\"class\", \"ant-select-not-found\", 4, \"ngIf\"], [1, \"ant-select-not-found\"], [3, \"nzComponentName\", \"specificContent\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\"], [3, \"placeholder\"], [3, \"deletable\", \"disabled\", \"label\"], [3, \"clear\"]],\n  template: function NzTreeSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTreeSelectComponent_ng_template_0_Template, 4, 36, \"ng-template\", 0);\n      i0.ɵɵlistener(\"overlayOutsideClick\", function NzTreeSelectComponent_Template_ng_template_overlayOutsideClick_0_listener($event) {\n        return ctx.onClickOutside($event);\n      })(\"detach\", function NzTreeSelectComponent_Template_ng_template_detach_0_listener() {\n        return ctx.closeDropDown();\n      })(\"positionChange\", function NzTreeSelectComponent_Template_ng_template_positionChange_0_listener($event) {\n        return ctx.onPositionChange($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, NzTreeSelectComponent_ng_container_2_Template, 4, 7, \"ng-container\", 2);\n      i0.ɵɵelementStart(3, \"nz-select-search\", 3);\n      i0.ɵɵlistener(\"keydown\", function NzTreeSelectComponent_Template_nz_select_search_keydown_3_listener($event) {\n        return ctx.onKeyDownInput($event);\n      })(\"isComposingChange\", function NzTreeSelectComponent_Template_nz_select_search_isComposingChange_3_listener($event) {\n        return ctx.isComposing = $event;\n      })(\"valueChange\", function NzTreeSelectComponent_Template_nz_select_search_valueChange_3_listener($event) {\n        return ctx.setInputValue($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NzTreeSelectComponent_nz_select_placeholder_4_Template, 1, 3, \"nz-select-placeholder\", 4);\n      i0.ɵɵtemplate(5, NzTreeSelectComponent_nz_select_item_5_Template, 1, 3, \"nz-select-item\", 5);\n      i0.ɵɵtemplate(6, NzTreeSelectComponent_nz_select_arrow_6_Template, 1, 0, \"nz-select-arrow\", 2);\n      i0.ɵɵtemplate(7, NzTreeSelectComponent_nz_select_clear_7_Template, 1, 0, \"nz-select-clear\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayOrigin\", ctx.cdkOverlayOrigin)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-select-tree-dropdown\")(\"cdkConnectedOverlayMinWidth\", ctx.nzDropdownMatchSelectWidth ? null : ctx.triggerWidth)(\"cdkConnectedOverlayWidth\", ctx.nzDropdownMatchSelectWidth ? ctx.triggerWidth : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzId\", ctx.nzId)(\"showInput\", ctx.nzShowSearch)(\"value\", ctx.inputValue)(\"mirrorSync\", ctx.isMultiple)(\"disabled\", ctx.nzDisabled)(\"focusTrigger\", ctx.nzOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzPlaceHolder && ctx.selectedNodes.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isMultiple && ctx.selectedNodes.length === 1 && !ctx.isComposing && ctx.inputValue === \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isMultiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzAllowClear && !ctx.nzDisabled && ctx.selectedNodes.length);\n    }\n  },\n  directives: [i6.NzTreeComponent, i7.NzEmbedEmptyComponent, i8.NzSelectItemComponent, i8.NzSelectSearchComponent, i8.NzSelectPlaceholderComponent, i8.NzSelectArrowComponent, i8.NzSelectClearComponent, i9.CdkConnectedOverlay, i10.NzConnectedOverlayDirective, i11.NgClass, i5.NzNoAnimationDirective, i3.Dir, i11.NgStyle, i11.NgIf, i9.CdkOverlayOrigin, i11.NgForOf],\n  pipes: [i11.SlicePipe],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  }\n});\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzAllowClear\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowExpand\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowLine\", void 0);\n\n__decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzDropdownMatchSelectWidth\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzCheckable\", void 0);\n\n__decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzHideUnMatched\", void 0);\n\n__decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzShowIcon\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowSearch\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzAsyncData\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzMultiple\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzDefaultExpandAll\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzCheckStrictly\", void 0);\n\n__decorate([WithConfig()], NzTreeSelectComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig()], NzTreeSelectComponent.prototype, \"nzBackdrop\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-select',\n      exportAs: 'nzTreeSelect',\n      animations: [slideMotion],\n      template: `\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\n      [cdkConnectedOverlayOpen]=\"nzOpen\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-select-tree-dropdown'\"\n      [cdkConnectedOverlayMinWidth]=\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\"\n      [cdkConnectedOverlayWidth]=\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeDropDown()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        [@slideMotion]=\"'enter'\"\n        [ngClass]=\"dropdownClassName\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\n        [class.ant-tree-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [dir]=\"dir\"\n        [ngStyle]=\"nzDropdownStyle\"\n      >\n        <nz-tree\n          #treeRef\n          [hidden]=\"isNotFound\"\n          nzNoAnimation\n          nzSelectMode\n          nzBlockNode\n          [nzData]=\"nzNodes\"\n          [nzMultiple]=\"nzMultiple\"\n          [nzSearchValue]=\"inputValue\"\n          [nzHideUnMatched]=\"nzHideUnMatched\"\n          [nzShowIcon]=\"nzShowIcon\"\n          [nzCheckable]=\"nzCheckable\"\n          [nzAsyncData]=\"nzAsyncData\"\n          [nzShowExpand]=\"nzShowExpand\"\n          [nzShowLine]=\"nzShowLine\"\n          [nzExpandedIcon]=\"nzExpandedIcon\"\n          [nzExpandAll]=\"nzDefaultExpandAll\"\n          [nzExpandedKeys]=\"expandedKeys\"\n          [nzCheckedKeys]=\"nzCheckable ? value : []\"\n          [nzSelectedKeys]=\"!nzCheckable ? value : []\"\n          [nzTreeTemplate]=\"treeTemplate\"\n          [nzCheckStrictly]=\"nzCheckStrictly\"\n          [nzVirtualItemSize]=\"nzVirtualItemSize\"\n          [nzVirtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [nzVirtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [nzVirtualHeight]=\"nzVirtualHeight\"\n          (nzExpandChange)=\"onExpandedKeysChange($event)\"\n          (nzClick)=\"nzTreeClick.emit($event)\"\n          (nzCheckedKeysChange)=\"updateSelectedNodes()\"\n          (nzSelectedKeysChange)=\"updateSelectedNodes()\"\n          (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\n          (nzSearchValueChange)=\"setSearchValues($event)\"\n        ></nz-tree>\n        <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\n          <nz-embed-empty [nzComponentName]=\"'tree-select'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n        </span>\n      </div>\n    </ng-template>\n\n    <div cdkOverlayOrigin class=\"ant-select-selector\">\n      <ng-container *ngIf=\"isMultiple\">\n        <nz-select-item\n          *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\n          [deletable]=\"true\"\n          [disabled]=\"node.isDisabled || nzDisabled\"\n          [label]=\"nzDisplayWith(node)\"\n          (delete)=\"removeSelected(node, true)\"\n        ></nz-select-item>\n\n        <nz-select-item\n          *ngIf=\"selectedNodes.length > nzMaxTagCount\"\n          [contentTemplateOutlet]=\"nzMaxTagPlaceholder\"\n          [contentTemplateOutletContext]=\"selectedNodes | slice: nzMaxTagCount\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [label]=\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\"\n        ></nz-select-item>\n      </ng-container>\n\n      <nz-select-search\n        [nzId]=\"nzId\"\n        [showInput]=\"nzShowSearch\"\n        (keydown)=\"onKeyDownInput($event)\"\n        (isComposingChange)=\"isComposing = $event\"\n        (valueChange)=\"setInputValue($event)\"\n        [value]=\"inputValue\"\n        [mirrorSync]=\"isMultiple\"\n        [disabled]=\"nzDisabled\"\n        [focusTrigger]=\"nzOpen\"\n      ></nz-select-search>\n\n      <nz-select-placeholder\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\n        [placeholder]=\"nzPlaceHolder\"\n        [style.display]=\"placeHolderDisplay\"\n      ></nz-select-placeholder>\n\n      <nz-select-item\n        *ngIf=\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\"\n        [deletable]=\"false\"\n        [disabled]=\"false\"\n        [label]=\"nzDisplayWith(selectedNodes[0])\"\n      ></nz-select-item>\n\n      <nz-select-arrow *ngIf=\"!isMultiple\"></nz-select-arrow>\n\n      <nz-select-clear\n        *ngIf=\"nzAllowClear && !nzDisabled && selectedNodes.length\"\n        (clear)=\"onClearSelection()\"\n      ></nz-select-clear>\n    </div>\n  `,\n      providers: [NzTreeSelectService, {\n        provide: NzTreeHigherOrderServiceToken,\n        useFactory: higherOrderServiceFactory,\n        deps: [[new Self(), Injector]]\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzTreeSelectComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-select',\n        '[class.ant-select-lg]': 'nzSize===\"large\"',\n        '[class.ant-select-rtl]': 'dir===\"rtl\"',\n        '[class.ant-select-sm]': 'nzSize===\"small\"',\n        '[class.ant-select-disabled]': 'nzDisabled',\n        '[class.ant-select-single]': '!isMultiple',\n        '[class.ant-select-show-arrow]': '!isMultiple',\n        '[class.ant-select-show-search]': '!isMultiple',\n        '[class.ant-select-multiple]': 'isMultiple',\n        '[class.ant-select-allow-clear]': 'nzAllowClear',\n        '[class.ant-select-open]': 'nzOpen',\n        '[class.ant-select-focused]': 'nzOpen || focused',\n        '(click)': 'trigger()',\n        '(keydown)': 'onKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTreeSelectService\n    }, {\n      type: i2.NzConfigService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.FocusMonitor\n    }, {\n      type: i5.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzId: [{\n      type: Input\n    }],\n    nzAllowClear: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input\n    }],\n    nzDropdownMatchSelectWidth: [{\n      type: Input\n    }],\n    nzCheckable: [{\n      type: Input\n    }],\n    nzHideUnMatched: [{\n      type: Input\n    }],\n    nzShowIcon: [{\n      type: Input\n    }],\n    nzShowSearch: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzAsyncData: [{\n      type: Input\n    }],\n    nzMultiple: [{\n      type: Input\n    }],\n    nzDefaultExpandAll: [{\n      type: Input\n    }],\n    nzCheckStrictly: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualHeight: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzNotFoundContent: [{\n      type: Input\n    }],\n    nzNodes: [{\n      type: Input\n    }],\n    nzOpen: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzDropdownStyle: [{\n      type: Input\n    }],\n    nzDropdownClassName: [{\n      type: Input\n    }],\n    nzBackdrop: [{\n      type: Input\n    }],\n    nzExpandedKeys: [{\n      type: Input\n    }],\n    nzDisplayWith: [{\n      type: Input\n    }],\n    nzMaxTagCount: [{\n      type: Input\n    }],\n    nzMaxTagPlaceholder: [{\n      type: Input\n    }],\n    nzOpenChange: [{\n      type: Output\n    }],\n    nzCleared: [{\n      type: Output\n    }],\n    nzRemoved: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzTreeClick: [{\n      type: Output\n    }],\n    nzTreeCheckBoxChange: [{\n      type: Output\n    }],\n    nzSelectSearchComponent: [{\n      type: ViewChild,\n      args: [NzSelectSearchComponent, {\n        static: false\n      }]\n    }],\n    treeRef: [{\n      type: ViewChild,\n      args: ['treeRef', {\n        static: false\n      }]\n    }],\n    cdkOverlayOrigin: [{\n      type: ViewChild,\n      args: [CdkOverlayOrigin, {\n        static: true\n      }]\n    }],\n    cdkConnectedOverlay: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay, {\n        static: false\n      }]\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzTreeTemplateChild: [{\n      type: ContentChild,\n      args: ['nzTreeTemplate', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTreeSelectModule {}\n\nNzTreeSelectModule.ɵfac = function NzTreeSelectModule_Factory(t) {\n  return new (t || NzTreeSelectModule)();\n};\n\nNzTreeSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTreeSelectModule\n});\nNzTreeSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule],\n      declarations: [NzTreeSelectComponent],\n      exports: [NzTreeSelectComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTreeSelectComponent, NzTreeSelectModule, NzTreeSelectService, higherOrderServiceFactory };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-tree-select.mjs"],"names":["__decorate","TAB","ESCAPE","BACKSPACE","i9","CdkOverlayOrigin","CdkConnectedOverlay","OverlayModule","i0","Injectable","EventEmitter","Self","Injector","forwardRef","Component","Optional","Host","Input","Output","ViewChild","ContentChild","NgModule","NG_VALUE_ACCESSOR","FormsModule","Subject","merge","of","takeUntil","tap","filter","slideMotion","i2","WithConfig","reqAnimFrame","NzTreeBaseService","NzTreeBase","NzTreeHigherOrderServiceToken","isNotNil","InputBoolean","i8","NzSelectSearchComponent","NzSelectModule","i3","BidiModule","i4","i5","NzNoAnimationModule","i6","NzTreeModule","i7","NzEmptyModule","i10","NzOverlayModule","i11","CommonModule","NzIconModule","NzTreeSelectService","ɵfac","ɵprov","type","higherOrderServiceFactory","injector","get","NZ_CONFIG_MODULE_NAME","TREE_SELECT_DEFAULT_CLASS","NzTreeSelectComponent","constructor","nzTreeService","nzConfigService","renderer","cdr","elementRef","directionality","focusMonitor","noAnimation","_nzModuleName","nzId","nzAllowClear","nzShowExpand","nzShowLine","nzDropdownMatchSelectWidth","nzCheckable","nzHideUnMatched","nzShowIcon","nzShowSearch","nzDisabled","nzAsyncData","nzMultiple","nzDefaultExpandAll","nzCheckStrictly","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualHeight","nzNodes","nzOpen","nzSize","nzPlaceHolder","nzDropdownStyle","nzBackdrop","nzDisplayWith","node","title","nzMaxTagPlaceholder","nzOpenChange","nzCleared","nzRemoved","nzExpandChange","nzTreeClick","nzTreeCheckBoxChange","dropdownClassName","isComposing","isDestroy","isNotFound","focused","inputValue","dropDownPosition","selectedNodes","expandedKeys","value","dir","destroy$","onChange","_value","onTouched","addClass","nativeElement","nzExpandedKeys","treeTemplate","nzTreeTemplate","nzTreeTemplateChild","placeHolderDisplay","length","isMultiple","ngOnInit","_a","subscribeSelectionChange","change","pipe","subscribe","direction","detectChanges","monitor","focusOrigin","markForCheck","Promise","resolve","then","ngOnDestroy","closeDropDown","next","complete","isComposingChange","setDisabledState","isDisabled","ngOnChanges","changes","nzDropdownClassName","updateSelectedNodes","className","trim","writeValue","Array","isArray","forEach","removeSelected","registerOnChange","fn","registerOnTouched","onKeydown","event","keyCode","openDropdown","trigger","emit","updateCdkConnectedOverlayStatus","focusOnInput","onKeyDownInput","e","eventTarget","target","preventDefault","removeNode","onExpandedKeysChange","keys","setInputValue","updatePosition","isSelected","isChecked","conduct","setSelectedNodeList","nzSelectSearchComponent","focus","isDisableCheckbox","isHalfChecked","isSelectable","map","key","init","nodes","coerceTreeNodes","isCheckStrictly","initTree","conductCheck","conductSelectedKeys","getCheckedNodeList","getSelectedNodeList","_b","cdkConnectedOverlay","overlayRef","onPositionChange","position","connectionPair","originY","onClearSelection","onClickOutside","contains","setSearchValues","$event","matchedKeys","triggerWidth","cdkOverlayOrigin","getBoundingClientRect","width","trackValue","_index","option","NzConfigService","Renderer2","ChangeDetectorRef","ElementRef","Directionality","FocusMonitor","NzNoAnimationDirective","ɵcmp","provide","useFactory","deps","useExisting","multi","NzTreeComponent","NzEmbedEmptyComponent","NzSelectItemComponent","NzSelectPlaceholderComponent","NzSelectArrowComponent","NzSelectClearComponent","NzConnectedOverlayDirective","NgClass","Dir","NgStyle","NgIf","NgForOf","SlicePipe","prototype","args","selector","exportAs","animations","template","providers","host","class","decorators","nzExpandedIcon","nzNotFoundContent","nzMaxTagCount","static","treeRef","NzTreeSelectModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,uBAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,aAAhD,QAAqE,sBAArE;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,IAAnC,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+DC,SAA/D,EAA0EC,QAA1E,EAAoFC,IAApF,EAA0FC,KAA1F,EAAiGC,MAAjG,EAAyGC,SAAzG,EAAoHC,YAApH,EAAkIC,QAAlI,QAAkJ,eAAlJ;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,gBAA/C;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,EAAzB,QAAmC,MAAnC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAuC,gBAAvC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,iBAAT,EAA4BC,UAA5B,EAAwCC,6BAAxC,QAA6E,yBAA7E;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,yBAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,SAASC,uBAAT,EAAkCC,cAAlC,QAAwD,sBAAxD;AACA,OAAO,KAAKC,EAAZ,MAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,mBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iCAApB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,4BAArB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA;AACA;AACA;AACA;;;;;;;AAGsG/C,IAAAA,EA6Y9F,8B;AA7Y8FA,IAAAA,EA8Y5F,mC;AA9Y4FA,IAAAA,EA+Y9F,e;;;;mBA/Y8FA,E;AAAAA,IAAAA,EA8Y5E,a;AA9Y4EA,IAAAA,EA8Y5E,0F;;;;;;;;;;gBA9Y4EA,E;;AAAAA,IAAAA,EAiWhG,4B;AAjWgGA,IAAAA,EA4W9F,mC;AA5W8FA,IAAAA,EAsY5F;AAtY4FA,MAAAA,EAsY5F;AAAA,qBAtY4FA,EAsY5F;AAAA,aAAkB,mCAAlB;AAAA;AAtY4FA,MAAAA,EAsY5F;AAAA,sBAtY4FA,EAsY5F;AAAA,aACW,gCADX;AAAA;AAtY4FA,MAAAA,EAsY5F;AAAA,sBAtY4FA,EAsY5F;AAAA,aAEuB,6BAFvB;AAAA;AAtY4FA,MAAAA,EAsY5F;AAAA,sBAtY4FA,EAsY5F;AAAA,aAGwB,6BAHxB;AAAA;AAtY4FA,MAAAA,EAsY5F;AAAA,sBAtY4FA,EAsY5F;AAAA,aAIoB,yCAJpB;AAAA;AAtY4FA,MAAAA,EAsY5F;AAAA,sBAtY4FA,EAsY5F;AAAA,aAKuB,+BALvB;AAAA,M;AAtY4FA,IAAAA,EA4Y7F,e;AA5Y6FA,IAAAA,EA6Y9F,qF;AA7Y8FA,IAAAA,EAgZhG,e;;;;mBAhZgGA,E;AAAAA,IAAAA,EAsW9F,gO;AAtW8FA,IAAAA,EAkW9F,0S;AAlW8FA,IAAAA,EA8W5F,a;AA9W4FA,IAAAA,EA8W5F,+gBA9W4FA,EA8W5F,kFA9W4FA,EA8W5F,gT;AA9W4FA,IAAAA,EA6YvF,a;AA7YuFA,IAAAA,EA6YvF,qE;;;;;;iBA7YuFA,E;;AAAAA,IAAAA,EAqZ9F,wC;AArZ8FA,IAAAA,EA0Z5F;AAAA,0BA1Z4FA,EA0Z5F;AAAA;AAAA,sBA1Z4FA,EA0Z5F;AAAA,aAAU,iCAAqB,IAArB,CAAV;AAAA,M;AA1Z4FA,IAAAA,EA2Z7F,e;;;;;oBA3Z6FA,E;AAAAA,IAAAA,EAuZ5F,+H;;;;;;AAvZ4FA,IAAAA,EA6Z9F,mC;AA7Z8FA,IAAAA,E;;;;oBAAAA,E;AAAAA,IAAAA,EA+Z5F,kGA/Z4FA,EA+Z5F,yL;;;;;;AA/Z4FA,IAAAA,EAoZhG,2B;AApZgGA,IAAAA,EAqZ9F,0G;AArZ8FA,IAAAA,E;AAAAA,IAAAA,EA6Z9F,0G;AA7Z8FA,IAAAA,EAqahG,wB;;;;mBAragGA,E;AAAAA,IAAAA,EAsZ3E,a;AAtZ2EA,IAAAA,EAsZ3E,uBAtZ2EA,EAsZ3E,qG;AAtZ2EA,IAAAA,EA8Z3F,a;AA9Z2FA,IAAAA,EA8Z3F,uE;;;;;;AA9Z2FA,IAAAA,EAmbhG,0C;;;;mBAnbgGA,E;AAAAA,IAAAA,EAsb9F,kD;AAtb8FA,IAAAA,EAqb9F,gD;;;;;;AArb8FA,IAAAA,EAybhG,mC;;;;mBAzbgGA,E;AAAAA,IAAAA,EA2b9F,0G;;;;;;AA3b8FA,IAAAA,EAgchG,gC;;;;;;iBAhcgGA,E;;AAAAA,IAAAA,EAkchG,yC;AAlcgGA,IAAAA,EAoc9F;AApc8FA,MAAAA,EAoc9F;AAAA,sBApc8FA,EAoc9F;AAAA,aAAS,0BAAT;AAAA,M;AApc8FA,IAAAA,EAqc/F,e;;;;AAvcP,MAAMgD,mBAAN,SAAkCtB,iBAAlC,CAAoD;;AAEpDsB,mBAAmB,CAACC,IAApB;AAAA;AAAA;AAAA,oFAAsGjD,EAAtG,uBAAgHgD,mBAAhH,SAAgHA,mBAAhH;AAAA;AAAA;;AACAA,mBAAmB,CAACE,KAApB,kBADsGlD,EACtG;AAAA,SAAoHgD,mBAApH;AAAA,WAAoHA,mBAApH;AAAA;;AACA;AAAA,qDAFsGhD,EAEtG,mBAA2FgD,mBAA3F,EAA4H,CAAC;AACjHG,IAAAA,IAAI,EAAElD;AAD2G,GAAD,CAA5H;AAAA;;AAIA,SAASmD,yBAAT,CAAmCC,QAAnC,EAA6C;AACzC,SAAOA,QAAQ,CAACC,GAAT,CAAaN,mBAAb,CAAP;AACH;;AACD,MAAMO,qBAAqB,GAAG,YAA9B;AACA,MAAMC,yBAAyB,GAAG,8CAAlC;;AACA,MAAMC,qBAAN,SAAoC9B,UAApC,CAA+C;AAC3C+B,EAAAA,WAAW,CAACC,aAAD,EAAgBC,eAAhB,EAAiCC,QAAjC,EAA2CC,GAA3C,EAAgDC,UAAhD,EAA4DC,cAA5D,EAA4EC,YAA5E,EAA0FC,WAA1F,EAAuG;AAC9G,UAAMP,aAAN;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,aAAL,GAAqBZ,qBAArB;AACA,SAAKa,IAAL,GAAY,IAAZ;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,0BAAL,GAAkC,IAAlC;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,iBAAL,GAAyB,EAAzB;AACA,SAAKC,oBAAL,GAA4B,GAA5B;AACA,SAAKC,oBAAL,GAA4B,EAA5B;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,MAAL,GAAc,SAAd;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,UAAL,GAAkB,KAAlB;;AACA,SAAKC,aAAL,GAAsBC,IAAD,IAAUA,IAAI,CAACC,KAApC;;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAKC,YAAL,GAAoB,IAAI9F,YAAJ,EAApB;AACA,SAAK+F,SAAL,GAAiB,IAAI/F,YAAJ,EAAjB;AACA,SAAKgG,SAAL,GAAiB,IAAIhG,YAAJ,EAAjB;AACA,SAAKiG,cAAL,GAAsB,IAAIjG,YAAJ,EAAtB;AACA,SAAKkG,WAAL,GAAmB,IAAIlG,YAAJ,EAAnB;AACA,SAAKmG,oBAAL,GAA4B,IAAInG,YAAJ,EAA5B;AACA,SAAKoG,iBAAL,GAAyB9C,yBAAzB;AACA,SAAK+C,WAAL,GAAmB,KAAnB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,gBAAL,GAAwB,QAAxB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,QAAL,GAAgB,IAAIjG,OAAJ,EAAhB;;AACA,SAAKkG,QAAL,GAAgBC,MAAM,IAAI,CAAG,CAA7B;;AACA,SAAKC,SAAL,GAAiB,MAAM,CAAG,CAA1B;;AACA,SAAKvD,QAAL,CAAcwD,QAAd,CAAuB,KAAKtD,UAAL,CAAgBuD,aAAvC,EAAsD,YAAtD;AACA,SAAKzD,QAAL,CAAcwD,QAAd,CAAuB,KAAKtD,UAAL,CAAgBuD,aAAvC,EAAsD,iBAAtD;AACH;;AACiB,MAAdC,cAAc,CAACR,KAAD,EAAQ;AACtB,SAAKD,YAAL,GAAoBC,KAApB;AACH;;AACiB,MAAdQ,cAAc,GAAG;AACjB,WAAO,KAAKT,YAAZ;AACH;;AACe,MAAZU,YAAY,GAAG;AACf,WAAO,KAAKC,cAAL,IAAuB,KAAKC,mBAAnC;AACH;;AACqB,MAAlBC,kBAAkB,GAAG;AACrB,WAAO,KAAKhB,UAAL,IAAmB,KAAKJ,WAAxB,IAAuC,KAAKM,aAAL,CAAmBe,MAA1D,GAAmE,MAAnE,GAA4E,OAAnF;AACH;;AACa,MAAVC,UAAU,GAAG;AACb,WAAO,KAAK9C,UAAL,IAAmB,KAAKN,WAA/B;AACH;;AACDqD,EAAAA,QAAQ,GAAG;AACP,QAAIC,EAAJ;;AACA,SAAKvB,SAAL,GAAiB,KAAjB;AACA,SAAKwB,wBAAL;AACA,KAACD,EAAE,GAAG,KAAK/D,cAAL,CAAoBiE,MAA1B,MAAsC,IAAtC,IAA8CF,EAAE,KAAK,KAAK,CAA1D,GAA8D,KAAK,CAAnE,GAAuEA,EAAE,CAACG,IAAH,CAAQ/G,SAAS,CAAC,KAAK8F,QAAN,CAAjB,EAAkCkB,SAAlC,CAA6CC,SAAD,IAAe;AAC9H,WAAKpB,GAAL,GAAWoB,SAAX;AACA,WAAKtE,GAAL,CAASuE,aAAT;AACH,KAHsE,CAAvE;AAIA,SAAKrB,GAAL,GAAW,KAAKhD,cAAL,CAAoB+C,KAA/B;AACA,SAAK9C,YAAL,CACKqE,OADL,CACa,KAAKvE,UADlB,EAC8B,IAD9B,EAEKmE,IAFL,CAEU/G,SAAS,CAAC,KAAK8F,QAAN,CAFnB,EAGKkB,SAHL,CAGeI,WAAW,IAAI;AAC1B,UAAI,CAACA,WAAL,EAAkB;AACd,aAAK7B,OAAL,GAAe,KAAf;AACA,aAAK5C,GAAL,CAAS0E,YAAT;AACAC,QAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,MAAM;AACzB,eAAKvB,SAAL;AACH,SAFD;AAGH,OAND,MAOK;AACD,aAAKV,OAAL,GAAe,IAAf;AACA,aAAK5C,GAAL,CAAS0E,YAAT;AACH;AACJ,KAfD;AAgBH;;AACDI,EAAAA,WAAW,GAAG;AACV,SAAKpC,SAAL,GAAiB,IAAjB;AACA,SAAKqC,aAAL;AACA,SAAK5B,QAAL,CAAc6B,IAAd;AACA,SAAK7B,QAAL,CAAc8B,QAAd;AACH;;AACDC,EAAAA,iBAAiB,CAACzC,WAAD,EAAc;AAC3B,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AACD0C,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AACzB,SAAKrE,UAAL,GAAkBqE,UAAlB;AACA,SAAKL,aAAL;AACH;;AACDM,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAM;AAAE9D,MAAAA,OAAF;AAAW+D,MAAAA;AAAX,QAAmCD,OAAzC;;AACA,QAAI9D,OAAJ,EAAa;AACT,WAAKgE,mBAAL,CAAyB,IAAzB;AACH;;AACD,QAAID,mBAAJ,EAAyB;AACrB,YAAME,SAAS,GAAG,KAAKF,mBAAL,IAA4B,KAAKA,mBAAL,CAAyBG,IAAzB,EAA9C;AACA,WAAKlD,iBAAL,GAAyBiD,SAAS,GAAI,GAAE/F,yBAA0B,IAAG+F,SAAU,EAA7C,GAAiD/F,yBAAnF;AACH;AACJ;;AACDiG,EAAAA,UAAU,CAAC1C,KAAD,EAAQ;AACd,QAAIlF,QAAQ,CAACkF,KAAD,CAAZ,EAAqB;AACjB,UAAI,KAAKc,UAAL,IAAmB6B,KAAK,CAACC,OAAN,CAAc5C,KAAd,CAAvB,EAA6C;AACzC,aAAKA,KAAL,GAAaA,KAAb;AACH,OAFD,MAGK;AACD,aAAKA,KAAL,GAAa,CAACA,KAAD,CAAb;AACH;;AACD,WAAKuC,mBAAL,CAAyB,IAAzB;AACH,KARD,MASK;AACD,WAAKvC,KAAL,GAAa,EAAb;AACA,WAAKF,aAAL,CAAmB+C,OAAnB,CAA2B/D,IAAI,IAAI;AAC/B,aAAKgE,cAAL,CAAoBhE,IAApB,EAA0B,KAA1B;AACH,OAFD;AAGA,WAAKgB,aAAL,GAAqB,EAArB;AACH;;AACD,SAAK/C,GAAL,CAAS0E,YAAT;AACH;;AACDsB,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,SAAK7C,QAAL,GAAgB6C,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,CAACD,EAAD,EAAK;AAClB,SAAK3C,SAAL,GAAiB2C,EAAjB;AACH;;AACDE,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,QAAI,KAAKrF,UAAT,EAAqB;AACjB;AACH;;AACD,YAAQqF,KAAK,CAACC,OAAd;AACI,WAAKzK,MAAL;AACI;AAChB;AACA;AACgB;;AACJ,WAAKD,GAAL;AACI,aAAKoJ,aAAL;AACA;;AACJ;AACI,YAAI,CAAC,KAAKtD,MAAV,EAAkB;AACd,eAAK6E,YAAL;AACH;;AAZT;AAcH;;AACDC,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKxF,UAAL,IAAoB,CAAC,KAAKA,UAAN,IAAoB,KAAKU,MAAjD,EAA0D;AACtD,WAAKsD,aAAL;AACH,KAFD,MAGK;AACD,WAAKuB,YAAL;AACH;AACJ;;AACDA,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAKvF,UAAV,EAAsB;AAClB,WAAKU,MAAL,GAAc,IAAd;AACA,WAAKS,YAAL,CAAkBsE,IAAlB,CAAuB,KAAK/E,MAA5B;AACA,WAAKgF,+BAAL;;AACA,UAAI,KAAK3F,YAAL,IAAqB,KAAKiD,UAA9B,EAA0C;AACtC,aAAK2C,YAAL;AACH;AACJ;AACJ;;AACD3B,EAAAA,aAAa,GAAG;AACZ,SAAKzB,SAAL;AACA,SAAK7B,MAAL,GAAc,KAAd;AACA,SAAKoB,UAAL,GAAkB,EAAlB;AACA,SAAKF,UAAL,GAAkB,KAAlB;AACA,SAAKT,YAAL,CAAkBsE,IAAlB,CAAuB,KAAK/E,MAA5B;AACA,SAAKzB,GAAL,CAAS0E,YAAT;AACH;;AACDiC,EAAAA,cAAc,CAACC,CAAD,EAAI;AACd,UAAMP,OAAO,GAAGO,CAAC,CAACP,OAAlB;AACA,UAAMQ,WAAW,GAAGD,CAAC,CAACE,MAAtB;;AACA,QAAI,KAAK/C,UAAL,IAAmB,CAAC8C,WAAW,CAAC5D,KAAhC,IAAyCoD,OAAO,KAAKxK,SAAzD,EAAoE;AAChE+K,MAAAA,CAAC,CAACG,cAAF;;AACA,UAAI,KAAKhE,aAAL,CAAmBe,MAAvB,EAA+B;AAC3B,cAAMkD,UAAU,GAAG,KAAKjE,aAAL,CAAmB,KAAKA,aAAL,CAAmBe,MAAnB,GAA4B,CAA/C,CAAnB;AACA,aAAKiC,cAAL,CAAoBiB,UAApB;AACH;AACJ;AACJ;;AACDC,EAAAA,oBAAoB,CAAChE,KAAD,EAAQ;AACxB,SAAKZ,cAAL,CAAoBmE,IAApB,CAAyBvD,KAAzB;AACA,SAAKD,YAAL,GAAoB,CAAC,GAAGC,KAAK,CAACiE,IAAV,CAApB;AACH;;AACDC,EAAAA,aAAa,CAAClE,KAAD,EAAQ;AACjB,SAAKJ,UAAL,GAAkBI,KAAlB;AACA,SAAKmE,cAAL;AACH;;AACDrB,EAAAA,cAAc,CAAChE,IAAD,EAAOyE,IAAI,GAAG,IAAd,EAAoB;AAC9BzE,IAAAA,IAAI,CAACsF,UAAL,GAAkB,KAAlB;AACAtF,IAAAA,IAAI,CAACuF,SAAL,GAAiB,KAAjB;;AACA,QAAI,KAAK3G,WAAT,EAAsB;AAClB,WAAKd,aAAL,CAAmB0H,OAAnB,CAA2BxF,IAA3B,EAAiC,KAAKZ,eAAtC;AACH,KAFD,MAGK;AACD,WAAKtB,aAAL,CAAmB2H,mBAAnB,CAAuCzF,IAAvC,EAA6C,KAAKd,UAAlD;AACH;;AACD,QAAIuF,IAAJ,EAAU;AACN,WAAKpE,SAAL,CAAeoE,IAAf,CAAoBzE,IAApB;AACH;AACJ;;AACD2E,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKe,uBAAT,EAAkC;AAC9B,WAAKA,uBAAL,CAA6BC,KAA7B;AACH;AACJ;;AACDxD,EAAAA,wBAAwB,GAAG;AACvB/G,IAAAA,KAAK,CAAC,KAAKmF,WAAL,CAAiB8B,IAAjB,CAAsB9G,GAAG,CAAE8I,KAAD,IAAW;AACvC,YAAMrE,IAAI,GAAGqE,KAAK,CAACrE,IAAnB;;AACA,UAAI,KAAKpB,WAAL,IAAoB,CAACoB,IAAI,CAACqD,UAA1B,IAAwC,CAACrD,IAAI,CAAC4F,iBAAlD,EAAqE;AACjE5F,QAAAA,IAAI,CAACuF,SAAL,GAAiB,CAACvF,IAAI,CAACuF,SAAvB;AACAvF,QAAAA,IAAI,CAAC6F,aAAL,GAAqB,KAArB;;AACA,YAAI,CAAC,KAAKzG,eAAV,EAA2B;AACvB,eAAKtB,aAAL,CAAmB0H,OAAnB,CAA2BxF,IAA3B;AACH;AACJ;;AACD,UAAI,KAAKpB,WAAT,EAAsB;AAClBoB,QAAAA,IAAI,CAACsF,UAAL,GAAkB,KAAlB;AACH;AACJ,KAZ8B,CAAzB,EAYF9J,MAAM,CAAE6I,KAAD,IAAW;AAClB,YAAMrE,IAAI,GAAGqE,KAAK,CAACrE,IAAnB;AACA,aAAO,KAAKpB,WAAL,GAAmB,CAACoB,IAAI,CAACqD,UAAN,IAAoB,CAACrD,IAAI,CAAC4F,iBAA7C,GAAiE,CAAC5F,IAAI,CAACqD,UAAN,IAAoBrD,IAAI,CAAC8F,YAAjG;AACH,KAHS,CAZJ,CAAD,EAeA,KAAKlH,WAAL,GAAmB,KAAK4B,oBAAxB,GAA+CnF,EAAE,EAfjD,EAeqD,KAAK+E,SAf1D,EAeqE,KAAKC,SAf1E,CAAL,CAgBKgC,IAhBL,CAgBU/G,SAAS,CAAC,KAAK8F,QAAN,CAhBnB,EAiBKkB,SAjBL,CAiBe,MAAM;AACjB,WAAKmB,mBAAL;AACA,YAAMvC,KAAK,GAAG,KAAKF,aAAL,CAAmB+E,GAAnB,CAAuB/F,IAAI,IAAIA,IAAI,CAACgG,GAApC,CAAd;AACA,WAAK9E,KAAL,GAAa,CAAC,GAAGA,KAAJ,CAAb;;AACA,UAAI,KAAKnC,YAAL,IAAqB,KAAKiD,UAA9B,EAA0C;AACtC,aAAKlB,UAAL,GAAkB,EAAlB;AACA,aAAKF,UAAL,GAAkB,KAAlB;AACH;;AACD,UAAI,KAAKoB,UAAT,EAAqB;AACjB,aAAKX,QAAL,CAAcH,KAAd;AACA,aAAKyD,YAAL;AACA,aAAKU,cAAL;AACH,OAJD,MAKK;AACD,aAAKrC,aAAL;AACA,aAAK3B,QAAL,CAAcH,KAAK,CAACa,MAAN,GAAeb,KAAK,CAAC,CAAD,CAApB,GAA0B,IAAxC;AACH;AACJ,KAlCD;AAmCH;;AACDuC,EAAAA,mBAAmB,CAACwC,IAAI,GAAG,KAAR,EAAe;AAC9B,QAAIA,IAAJ,EAAU;AACN,YAAMC,KAAK,GAAG,KAAKC,eAAL,CAAqB,KAAK1G,OAA1B,CAAd;AACA,WAAK3B,aAAL,CAAmBkE,UAAnB,GAAgC,KAAKA,UAArC;AACA,WAAKlE,aAAL,CAAmBsI,eAAnB,GAAqC,KAAKhH,eAA1C;AACA,WAAKtB,aAAL,CAAmBuI,QAAnB,CAA4BH,KAA5B;;AACA,UAAI,KAAKtH,WAAT,EAAsB;AAClB,aAAKd,aAAL,CAAmBwI,YAAnB,CAAgC,KAAKpF,KAArC,EAA4C,KAAK9B,eAAjD;AACH,OAFD,MAGK;AACD,aAAKtB,aAAL,CAAmByI,mBAAnB,CAAuC,KAAKrF,KAA5C,EAAmD,KAAKc,UAAxD;AACH;AACJ;;AACD,SAAKhB,aAAL,GAAqB,CAAC,IAAI,KAAKpC,WAAL,GAAmB,KAAK4H,kBAAL,EAAnB,GAA+C,KAAKC,mBAAL,EAAnD,CAAD,CAArB;AACH;;AACDpB,EAAAA,cAAc,GAAG;AACbzJ,IAAAA,YAAY,CAAC,MAAM;AACf,UAAIsG,EAAJ,EAAQwE,EAAR;;AACA,OAACA,EAAE,GAAG,CAACxE,EAAE,GAAG,KAAKyE,mBAAX,MAAoC,IAApC,IAA4CzE,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAAC0E,UAA9E,MAA8F,IAA9F,IAAsGF,EAAE,KAAK,KAAK,CAAlH,GAAsH,KAAK,CAA3H,GAA+HA,EAAE,CAACrB,cAAH,EAA/H;AACH,KAHW,CAAZ;AAIH;;AACDwB,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACvB,SAAK/F,gBAAL,GAAwB+F,QAAQ,CAACC,cAAT,CAAwBC,OAAhD;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,SAAKjG,aAAL,CAAmB+C,OAAnB,CAA2B/D,IAAI,IAAI;AAC/B,WAAKgE,cAAL,CAAoBhE,IAApB,EAA0B,KAA1B;AACH,KAFD;AAGA,SAAKI,SAAL,CAAeqE,IAAf;AACH;;AACDyC,EAAAA,cAAc,CAAC7C,KAAD,EAAQ;AAClB,QAAI,CAAC,KAAKnG,UAAL,CAAgBuD,aAAhB,CAA8B0F,QAA9B,CAAuC9C,KAAK,CAACU,MAA7C,CAAL,EAA2D;AACvD,WAAK/B,aAAL;AACH;AACJ;;AACDoE,EAAAA,eAAe,CAACC,MAAD,EAAS;AACpBzE,IAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,MAAM;AACzB,WAAKlC,UAAL,GAAkB,CAAC,KAAK7B,YAAL,IAAqB,KAAKiD,UAA3B,KAA0C,CAAC,CAAC,KAAKlB,UAAjD,IAA+DuG,MAAM,CAACC,WAAP,CAAmBvF,MAAnB,KAA8B,CAA/G;AACH,KAFD;AAGH;;AACD2C,EAAAA,+BAA+B,GAAG;AAC9B,SAAK6C,YAAL,GAAoB,KAAKC,gBAAL,CAAsBtJ,UAAtB,CAAiCuD,aAAjC,CAA+CgG,qBAA/C,GAAuEC,KAA3F;AACH;;AACDC,EAAAA,UAAU,CAACC,MAAD,EAASC,MAAT,EAAiB;AACvB,WAAOA,MAAM,CAAC7B,GAAd;AACH;;AAzT0C;;AA2T/CpI,qBAAqB,CAACR,IAAtB;AAAA,mBAAkHQ,qBAAlH,EAtUsGzD,EAsUtG,mBAAyJgD,mBAAzJ,GAtUsGhD,EAsUtG,mBAAyLuB,EAAE,CAACoM,eAA5L,GAtUsG3N,EAsUtG,mBAAwNA,EAAE,CAAC4N,SAA3N,GAtUsG5N,EAsUtG,mBAAiPA,EAAE,CAAC6N,iBAApP,GAtUsG7N,EAsUtG,mBAAkRA,EAAE,CAAC8N,UAArR,GAtUsG9N,EAsUtG,mBAA4SkC,EAAE,CAAC6L,cAA/S,MAtUsG/N,EAsUtG,mBAA0VoC,EAAE,CAAC4L,YAA7V,GAtUsGhO,EAsUtG,mBAAsXqC,EAAE,CAAC4L,sBAAzX;AAAA;;AACAxK,qBAAqB,CAACyK,IAAtB,kBAvUsGlO,EAuUtG;AAAA,QAAsGyD,qBAAtG;AAAA;AAAA;AAAA;AAvUsGzD,MAAAA,EAuUtG;AAAA;;AAAA;AAAA;;AAvUsGA,MAAAA,EAuUtG,qBAvUsGA,EAuUtG;AAAA;AAAA;AAAA;AAAA;AAvUsGA,MAAAA,EAuUtG,aAYyNgC,uBAZzN;AAvUsGhC,MAAAA,EAuUtG;AAvUsGA,MAAAA,EAuUtG,aAYwZH,gBAZxZ;AAvUsGG,MAAAA,EAuUtG,aAY4gBF,mBAZ5gB;AAAA;;AAAA;AAAA;;AAvUsGE,MAAAA,EAuUtG,qBAvUsGA,EAuUtG;AAvUsGA,MAAAA,EAuUtG,qBAvUsGA,EAuUtG;AAvUsGA,MAAAA,EAuUtG,qBAvUsGA,EAuUtG;AAvUsGA,MAAAA,EAuUtG,qBAvUsGA,EAuUtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvUsGA,MAAAA,EAuUtG;AAAA,eAAsG,aAAtG;AAAA;AAAA,eAAsG,qBAAtG;AAAA;AAAA;;AAAA;AAvUsGA,MAAAA,EAuUtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvUsGA,EAuUtG,oBAAg/D,CACx+DgD,mBADw+D,EAEx+D;AACImL,IAAAA,OAAO,EAAEvM,6BADb;AAEIwM,IAAAA,UAAU,EAAEhL,yBAFhB;AAGIiL,IAAAA,IAAI,EAAE,CAAC,CAAC,IAAIlO,IAAJ,EAAD,EAAaC,QAAb,CAAD;AAHV,GAFw+D,EAOx+D;AACI+N,IAAAA,OAAO,EAAErN,iBADb;AAEIwN,IAAAA,WAAW,EAAEjO,UAAU,CAAC,MAAMoD,qBAAP,CAF3B;AAGI8K,IAAAA,KAAK,EAAE;AAHX,GAPw+D,CAAh/D,GAvUsGvO,EAuUtG,6BAvUsGA,EAuUtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAvUsGA,MAAAA,EAoVlG,qFAbJ;AAvUsGA,MAAAA,EA6VhG;AAAA,eAAuB,0BAAvB;AAAA;AAAA,eACU,mBADV;AAAA;AAAA,eAEkB,4BAFlB;AAAA,QAtBN;AAvUsGA,MAAAA,EAmZlG,4BA5EJ;AAvUsGA,MAAAA,EAoZhG,sFA7EN;AAvUsGA,MAAAA,EAuahG,yCAhGN;AAvUsGA,MAAAA,EA0a9F;AAAA,eAAW,0BAAX;AAAA;AAAA;AAAA;AAAA,eAEe,yBAFf;AAAA,QAnGR;AAvUsGA,MAAAA,EAib/F,eA1GP;AAvUsGA,MAAAA,EAmbhG,wGA5GN;AAvUsGA,MAAAA,EAybhG,0FAlHN;AAvUsGA,MAAAA,EAgchG,4FAzHN;AAvUsGA,MAAAA,EAkchG,4FA3HN;AAvUsGA,MAAAA,EAsclG,eA/HJ;AAAA;;AAAA;AAvUsGA,MAAAA,EAuVhG,2YAhBN;AAvUsGA,MAAAA,EAoZjF,aA7ErB;AAvUsGA,MAAAA,EAoZjF,mCA7ErB;AAvUsGA,MAAAA,EAwa9F,aAjGR;AAvUsGA,MAAAA,EAwa9F,2KAjGR;AAvUsGA,MAAAA,EAob7F,aA7GT;AAvUsGA,MAAAA,EAob7F,wEA7GT;AAvUsGA,MAAAA,EA0b7F,aAnHT;AAvUsGA,MAAAA,EA0b7F,mHAnHT;AAvUsGA,MAAAA,EAgc9E,aAzHxB;AAvUsGA,MAAAA,EAgc9E,oCAzHxB;AAvUsGA,MAAAA,EAmc7F,aA5HT;AAvUsGA,MAAAA,EAmc7F,oFA5HT;AAAA;AAAA;AAAA,eAgI0CuC,EAAE,CAACiM,eAhI7C,EAgI2zB/L,EAAE,CAACgM,qBAhI9zB,EAgIu8B1M,EAAE,CAAC2M,qBAhI18B,EAgI+oC3M,EAAE,CAACC,uBAhIlpC,EAgIi2CD,EAAE,CAAC4M,4BAhIp2C,EAgIw8C5M,EAAE,CAAC6M,sBAhI38C,EAgIujD7M,EAAE,CAAC8M,sBAhI1jD,EAgIkrDjP,EAAE,CAACE,mBAhIrrD,EAgIunF6C,GAAG,CAACmM,2BAhI3nF,EAgI6xFjM,GAAG,CAACkM,OAhIjyF,EAgIy2F1M,EAAE,CAAC4L,sBAhI52F,EAgIm+F/L,EAAE,CAAC8M,GAhIt+F,EAgIokGnM,GAAG,CAACoM,OAhIxkG,EAgIuoGpM,GAAG,CAACqM,IAhI3oG,EAgIytGtP,EAAE,CAACC,gBAhI5tG,EAgIg2GgD,GAAG,CAACsM,OAhIp2G;AAAA,UAgIs9GtM,GAAG,CAACuM,SAhI19G;AAAA;AAAA;AAAA,eAgIm/G,CAAC9N,WAAD;AAhIn/G;AAAA;;AAiIA9B,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,cAF1B,EAE0C,KAAK,CAF/C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,cAF1B,EAE0C,KAAK,CAF/C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,YAF1B,EAEwC,KAAK,CAF7C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,EAEPN,UAAU,EAFH,CAAD,EAGPiC,qBAAqB,CAAC4L,SAHf,EAG0B,4BAH1B,EAGwD,KAAK,CAH7D,CAAV;;AAIA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,aAF1B,EAEyC,KAAK,CAF9C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,EAEPN,UAAU,EAFH,CAAD,EAGPiC,qBAAqB,CAAC4L,SAHf,EAG0B,iBAH1B,EAG6C,KAAK,CAHlD,CAAV;;AAIA7P,UAAU,CAAC,CACPsC,YAAY,EADL,EAEPN,UAAU,EAFH,CAAD,EAGPiC,qBAAqB,CAAC4L,SAHf,EAG0B,YAH1B,EAGwC,KAAK,CAH7C,CAAV;;AAIA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,cAF1B,EAE0C,KAAK,CAF/C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,YAF1B,EAEwC,KAAK,CAF7C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,aAF1B,EAEyC,KAAK,CAF9C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,YAF1B,EAEwC,KAAK,CAF7C,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,oBAF1B,EAEgD,KAAK,CAFrD,CAAV;;AAGA7P,UAAU,CAAC,CACPsC,YAAY,EADL,CAAD,EAEP2B,qBAAqB,CAAC4L,SAFf,EAE0B,iBAF1B,EAE6C,KAAK,CAFlD,CAAV;;AAGA7P,UAAU,CAAC,CACPgC,UAAU,EADH,CAAD,EAEPiC,qBAAqB,CAAC4L,SAFf,EAE0B,QAF1B,EAEoC,KAAK,CAFzC,CAAV;;AAGA7P,UAAU,CAAC,CACPgC,UAAU,EADH,CAAD,EAEPiC,qBAAqB,CAAC4L,SAFf,EAE0B,YAF1B,EAEwC,KAAK,CAF7C,CAAV;;AAGA;AAAA,qDAxfsGrP,EAwftG,mBAA2FyD,qBAA3F,EAA8H,CAAC;AACnHN,IAAAA,IAAI,EAAE7C,SAD6G;AAEnHgP,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,gBADX;AAECC,MAAAA,QAAQ,EAAE,cAFX;AAGCC,MAAAA,UAAU,EAAE,CAACnO,WAAD,CAHb;AAICoO,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAxHmB;AAyHCC,MAAAA,SAAS,EAAE,CACP3M,mBADO,EAEP;AACImL,QAAAA,OAAO,EAAEvM,6BADb;AAEIwM,QAAAA,UAAU,EAAEhL,yBAFhB;AAGIiL,QAAAA,IAAI,EAAE,CAAC,CAAC,IAAIlO,IAAJ,EAAD,EAAaC,QAAb,CAAD;AAHV,OAFO,EAOP;AACI+N,QAAAA,OAAO,EAAErN,iBADb;AAEIwN,QAAAA,WAAW,EAAEjO,UAAU,CAAC,MAAMoD,qBAAP,CAF3B;AAGI8K,QAAAA,KAAK,EAAE;AAHX,OAPO,CAzHZ;AAsICqB,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,YADL;AAEF,iCAAyB,kBAFvB;AAGF,kCAA0B,aAHxB;AAIF,iCAAyB,kBAJvB;AAKF,uCAA+B,YAL7B;AAMF,qCAA6B,aAN3B;AAOF,yCAAiC,aAP/B;AAQF,0CAAkC,aARhC;AASF,uCAA+B,YAT7B;AAUF,0CAAkC,cAVhC;AAWF,mCAA2B,QAXzB;AAYF,sCAA8B,mBAZ5B;AAaF,mBAAW,WAbT;AAcF,qBAAa;AAdX;AAtIP,KAAD;AAF6G,GAAD,CAA9H,EAyJ4B,YAAY;AAChC,WAAO,CAAC;AAAE1M,MAAAA,IAAI,EAAEH;AAAR,KAAD,EAAgC;AAAEG,MAAAA,IAAI,EAAE5B,EAAE,CAACoM;AAAX,KAAhC,EAA8D;AAAExK,MAAAA,IAAI,EAAEnD,EAAE,CAAC4N;AAAX,KAA9D,EAAsF;AAAEzK,MAAAA,IAAI,EAAEnD,EAAE,CAAC6N;AAAX,KAAtF,EAAsH;AAAE1K,MAAAA,IAAI,EAAEnD,EAAE,CAAC8N;AAAX,KAAtH,EAA+I;AAAE3K,MAAAA,IAAI,EAAEjB,EAAE,CAAC6L,cAAX;AAA2B+B,MAAAA,UAAU,EAAE,CAAC;AAC9K3M,QAAAA,IAAI,EAAE5C;AADwK,OAAD;AAAvC,KAA/I,EAEW;AAAE4C,MAAAA,IAAI,EAAEf,EAAE,CAAC4L;AAAX,KAFX,EAEsC;AAAE7K,MAAAA,IAAI,EAAEd,EAAE,CAAC4L,sBAAX;AAAmC6B,MAAAA,UAAU,EAAE,CAAC;AAC7E3M,QAAAA,IAAI,EAAE3C;AADuE,OAAD,EAE7E;AACC2C,QAAAA,IAAI,EAAE5C;AADP,OAF6E;AAA/C,KAFtC,CAAP;AAOH,GAjKL,EAiKuB;AAAE6D,IAAAA,IAAI,EAAE,CAAC;AAChBjB,MAAAA,IAAI,EAAE1C;AADU,KAAD,CAAR;AAEP4D,IAAAA,YAAY,EAAE,CAAC;AACflB,MAAAA,IAAI,EAAE1C;AADS,KAAD,CAFP;AAIP6D,IAAAA,YAAY,EAAE,CAAC;AACfnB,MAAAA,IAAI,EAAE1C;AADS,KAAD,CAJP;AAMP8D,IAAAA,UAAU,EAAE,CAAC;AACbpB,MAAAA,IAAI,EAAE1C;AADO,KAAD,CANL;AAQP+D,IAAAA,0BAA0B,EAAE,CAAC;AAC7BrB,MAAAA,IAAI,EAAE1C;AADuB,KAAD,CARrB;AAUPgE,IAAAA,WAAW,EAAE,CAAC;AACdtB,MAAAA,IAAI,EAAE1C;AADQ,KAAD,CAVN;AAYPiE,IAAAA,eAAe,EAAE,CAAC;AAClBvB,MAAAA,IAAI,EAAE1C;AADY,KAAD,CAZV;AAcPkE,IAAAA,UAAU,EAAE,CAAC;AACbxB,MAAAA,IAAI,EAAE1C;AADO,KAAD,CAdL;AAgBPmE,IAAAA,YAAY,EAAE,CAAC;AACfzB,MAAAA,IAAI,EAAE1C;AADS,KAAD,CAhBP;AAkBPoE,IAAAA,UAAU,EAAE,CAAC;AACb1B,MAAAA,IAAI,EAAE1C;AADO,KAAD,CAlBL;AAoBPqE,IAAAA,WAAW,EAAE,CAAC;AACd3B,MAAAA,IAAI,EAAE1C;AADQ,KAAD,CApBN;AAsBPsE,IAAAA,UAAU,EAAE,CAAC;AACb5B,MAAAA,IAAI,EAAE1C;AADO,KAAD,CAtBL;AAwBPuE,IAAAA,kBAAkB,EAAE,CAAC;AACrB7B,MAAAA,IAAI,EAAE1C;AADe,KAAD,CAxBb;AA0BPwE,IAAAA,eAAe,EAAE,CAAC;AAClB9B,MAAAA,IAAI,EAAE1C;AADY,KAAD,CA1BV;AA4BPyE,IAAAA,iBAAiB,EAAE,CAAC;AACpB/B,MAAAA,IAAI,EAAE1C;AADc,KAAD,CA5BZ;AA8BP0E,IAAAA,oBAAoB,EAAE,CAAC;AACvBhC,MAAAA,IAAI,EAAE1C;AADiB,KAAD,CA9Bf;AAgCP2E,IAAAA,oBAAoB,EAAE,CAAC;AACvBjC,MAAAA,IAAI,EAAE1C;AADiB,KAAD,CAhCf;AAkCP4E,IAAAA,eAAe,EAAE,CAAC;AAClBlC,MAAAA,IAAI,EAAE1C;AADY,KAAD,CAlCV;AAoCPsP,IAAAA,cAAc,EAAE,CAAC;AACjB5M,MAAAA,IAAI,EAAE1C;AADW,KAAD,CApCT;AAsCPuP,IAAAA,iBAAiB,EAAE,CAAC;AACpB7M,MAAAA,IAAI,EAAE1C;AADc,KAAD,CAtCZ;AAwCP6E,IAAAA,OAAO,EAAE,CAAC;AACVnC,MAAAA,IAAI,EAAE1C;AADI,KAAD,CAxCF;AA0CP8E,IAAAA,MAAM,EAAE,CAAC;AACTpC,MAAAA,IAAI,EAAE1C;AADG,KAAD,CA1CD;AA4CP+E,IAAAA,MAAM,EAAE,CAAC;AACTrC,MAAAA,IAAI,EAAE1C;AADG,KAAD,CA5CD;AA8CPgF,IAAAA,aAAa,EAAE,CAAC;AAChBtC,MAAAA,IAAI,EAAE1C;AADU,KAAD,CA9CR;AAgDPiF,IAAAA,eAAe,EAAE,CAAC;AAClBvC,MAAAA,IAAI,EAAE1C;AADY,KAAD,CAhDV;AAkDP4I,IAAAA,mBAAmB,EAAE,CAAC;AACtBlG,MAAAA,IAAI,EAAE1C;AADgB,KAAD,CAlDd;AAoDPkF,IAAAA,UAAU,EAAE,CAAC;AACbxC,MAAAA,IAAI,EAAE1C;AADO,KAAD,CApDL;AAsDP8G,IAAAA,cAAc,EAAE,CAAC;AACjBpE,MAAAA,IAAI,EAAE1C;AADW,KAAD,CAtDT;AAwDPmF,IAAAA,aAAa,EAAE,CAAC;AAChBzC,MAAAA,IAAI,EAAE1C;AADU,KAAD,CAxDR;AA0DPwP,IAAAA,aAAa,EAAE,CAAC;AAChB9M,MAAAA,IAAI,EAAE1C;AADU,KAAD,CA1DR;AA4DPsF,IAAAA,mBAAmB,EAAE,CAAC;AACtB5C,MAAAA,IAAI,EAAE1C;AADgB,KAAD,CA5Dd;AA8DPuF,IAAAA,YAAY,EAAE,CAAC;AACf7C,MAAAA,IAAI,EAAEzC;AADS,KAAD,CA9DP;AAgEPuF,IAAAA,SAAS,EAAE,CAAC;AACZ9C,MAAAA,IAAI,EAAEzC;AADM,KAAD,CAhEJ;AAkEPwF,IAAAA,SAAS,EAAE,CAAC;AACZ/C,MAAAA,IAAI,EAAEzC;AADM,KAAD,CAlEJ;AAoEPyF,IAAAA,cAAc,EAAE,CAAC;AACjBhD,MAAAA,IAAI,EAAEzC;AADW,KAAD,CApET;AAsEP0F,IAAAA,WAAW,EAAE,CAAC;AACdjD,MAAAA,IAAI,EAAEzC;AADQ,KAAD,CAtEN;AAwEP2F,IAAAA,oBAAoB,EAAE,CAAC;AACvBlD,MAAAA,IAAI,EAAEzC;AADiB,KAAD,CAxEf;AA0EP6K,IAAAA,uBAAuB,EAAE,CAAC;AAC1BpI,MAAAA,IAAI,EAAExC,SADoB;AAE1B2O,MAAAA,IAAI,EAAE,CAACtN,uBAAD,EAA0B;AAAEkO,QAAAA,MAAM,EAAE;AAAV,OAA1B;AAFoB,KAAD,CA1ElB;AA6EPC,IAAAA,OAAO,EAAE,CAAC;AACVhN,MAAAA,IAAI,EAAExC,SADI;AAEV2O,MAAAA,IAAI,EAAE,CAAC,SAAD,EAAY;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAFI,KAAD,CA7EF;AAgFP7C,IAAAA,gBAAgB,EAAE,CAAC;AACnBlK,MAAAA,IAAI,EAAExC,SADa;AAEnB2O,MAAAA,IAAI,EAAE,CAACzP,gBAAD,EAAmB;AAAEqQ,QAAAA,MAAM,EAAE;AAAV,OAAnB;AAFa,KAAD,CAhFX;AAmFP1D,IAAAA,mBAAmB,EAAE,CAAC;AACtBrJ,MAAAA,IAAI,EAAExC,SADgB;AAEtB2O,MAAAA,IAAI,EAAE,CAACxP,mBAAD,EAAsB;AAAEoQ,QAAAA,MAAM,EAAE;AAAV,OAAtB;AAFgB,KAAD,CAnFd;AAsFPzI,IAAAA,cAAc,EAAE,CAAC;AACjBtE,MAAAA,IAAI,EAAE1C;AADW,KAAD,CAtFT;AAwFPiH,IAAAA,mBAAmB,EAAE,CAAC;AACtBvE,MAAAA,IAAI,EAAEvC,YADgB;AAEtB0O,MAAAA,IAAI,EAAE,CAAC,gBAAD,EAAmB;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAnB;AAFgB,KAAD;AAxFd,GAjKvB;AAAA;AA8PA;AACA;AACA;AACA;;;AACA,MAAME,kBAAN,CAAyB;;AAEzBA,kBAAkB,CAACnN,IAAnB;AAAA,mBAA+GmN,kBAA/G;AAAA;;AACAA,kBAAkB,CAACC,IAAnB,kBA7vBsGrQ,EA6vBtG;AAAA,QAAgHoQ;AAAhH;AAUAA,kBAAkB,CAACE,IAAnB,kBAvwBsGtQ,EAuwBtG;AAAA,YAA8I,CAClImC,UADkI,EAElIW,YAFkI,EAGlI/C,aAHkI,EAIlIgB,WAJkI,EAKlIkB,cALkI,EAMlIO,YANkI,EAOlIO,YAPkI,EAQlIL,aARkI,EASlIE,eATkI,EAUlIN,mBAVkI,CAA9I;AAAA;;AAYA;AAAA,qDAnxBsGtC,EAmxBtG,mBAA2FoQ,kBAA3F,EAA2H,CAAC;AAChHjN,IAAAA,IAAI,EAAEtC,QAD0G;AAEhHyO,IAAAA,IAAI,EAAE,CAAC;AACCiB,MAAAA,OAAO,EAAE,CACLpO,UADK,EAELW,YAFK,EAGL/C,aAHK,EAILgB,WAJK,EAKLkB,cALK,EAMLO,YANK,EAOLO,YAPK,EAQLL,aARK,EASLE,eATK,EAULN,mBAVK,CADV;AAaCkO,MAAAA,YAAY,EAAE,CAAC/M,qBAAD,CAbf;AAcCgN,MAAAA,OAAO,EAAE,CAAChN,qBAAD;AAdV,KAAD;AAF0G,GAAD,CAA3H;AAAA;AAoBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASA,qBAAT,EAAgC2M,kBAAhC,EAAoDpN,mBAApD,EAAyEI,yBAAzE","sourcesContent":["import { __decorate } from 'tslib';\nimport { TAB, ESCAPE, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i9 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Self, Injector, forwardRef, Component, Optional, Host, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, merge, of } from 'rxjs';\nimport { takeUntil, tap, filter } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzTreeBaseService, NzTreeBase, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/select';\nimport { NzSelectSearchComponent, NzSelectModule } from 'ng-zorro-antd/select';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i6 from 'ng-zorro-antd/tree';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport * as i7 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i10 from 'ng-zorro-antd/core/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeSelectService extends NzTreeBaseService {\n}\nNzTreeSelectService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNzTreeSelectService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectService, decorators: [{\n            type: Injectable\n        }] });\n\nfunction higherOrderServiceFactory(injector) {\n    return injector.get(NzTreeSelectService);\n}\nconst NZ_CONFIG_MODULE_NAME = 'treeSelect';\nconst TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\nclass NzTreeSelectComponent extends NzTreeBase {\n    constructor(nzTreeService, nzConfigService, renderer, cdr, elementRef, directionality, focusMonitor, noAnimation) {\n        super(nzTreeService);\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.focusMonitor = focusMonitor;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzId = null;\n        this.nzAllowClear = true;\n        this.nzShowExpand = true;\n        this.nzShowLine = false;\n        this.nzDropdownMatchSelectWidth = true;\n        this.nzCheckable = false;\n        this.nzHideUnMatched = false;\n        this.nzShowIcon = false;\n        this.nzShowSearch = false;\n        this.nzDisabled = false;\n        this.nzAsyncData = false;\n        this.nzMultiple = false;\n        this.nzDefaultExpandAll = false;\n        this.nzCheckStrictly = false;\n        this.nzVirtualItemSize = 28;\n        this.nzVirtualMaxBufferPx = 500;\n        this.nzVirtualMinBufferPx = 28;\n        this.nzVirtualHeight = null;\n        this.nzNodes = [];\n        this.nzOpen = false;\n        this.nzSize = 'default';\n        this.nzPlaceHolder = '';\n        this.nzDropdownStyle = null;\n        this.nzBackdrop = false;\n        this.nzDisplayWith = (node) => node.title;\n        this.nzMaxTagPlaceholder = null;\n        this.nzOpenChange = new EventEmitter();\n        this.nzCleared = new EventEmitter();\n        this.nzRemoved = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        this.nzTreeClick = new EventEmitter();\n        this.nzTreeCheckBoxChange = new EventEmitter();\n        this.dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n        this.isComposing = false;\n        this.isDestroy = true;\n        this.isNotFound = false;\n        this.focused = false;\n        this.inputValue = '';\n        this.dropDownPosition = 'bottom';\n        this.selectedNodes = [];\n        this.expandedKeys = [];\n        this.value = [];\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.onChange = _value => { };\n        this.onTouched = () => { };\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-select');\n    }\n    set nzExpandedKeys(value) {\n        this.expandedKeys = value;\n    }\n    get nzExpandedKeys() {\n        return this.expandedKeys;\n    }\n    get treeTemplate() {\n        return this.nzTreeTemplate || this.nzTreeTemplateChild;\n    }\n    get placeHolderDisplay() {\n        return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n    }\n    get isMultiple() {\n        return this.nzMultiple || this.nzCheckable;\n    }\n    ngOnInit() {\n        var _a;\n        this.isDestroy = false;\n        this.subscribeSelectionChange();\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                this.focused = false;\n                this.cdr.markForCheck();\n                Promise.resolve().then(() => {\n                    this.onTouched();\n                });\n            }\n            else {\n                this.focused = true;\n                this.cdr.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.isDestroy = true;\n        this.closeDropDown();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    isComposingChange(isComposing) {\n        this.isComposing = isComposing;\n    }\n    setDisabledState(isDisabled) {\n        this.nzDisabled = isDisabled;\n        this.closeDropDown();\n    }\n    ngOnChanges(changes) {\n        const { nzNodes, nzDropdownClassName } = changes;\n        if (nzNodes) {\n            this.updateSelectedNodes(true);\n        }\n        if (nzDropdownClassName) {\n            const className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n            this.dropdownClassName = className ? `${TREE_SELECT_DEFAULT_CLASS} ${className}` : TREE_SELECT_DEFAULT_CLASS;\n        }\n    }\n    writeValue(value) {\n        if (isNotNil(value)) {\n            if (this.isMultiple && Array.isArray(value)) {\n                this.value = value;\n            }\n            else {\n                this.value = [value];\n            }\n            this.updateSelectedNodes(true);\n        }\n        else {\n            this.value = [];\n            this.selectedNodes.forEach(node => {\n                this.removeSelected(node, false);\n            });\n            this.selectedNodes = [];\n        }\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onKeydown(event) {\n        if (this.nzDisabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ESCAPE:\n                /**\n                 * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n                 */\n                break;\n            case TAB:\n                this.closeDropDown();\n                break;\n            default:\n                if (!this.nzOpen) {\n                    this.openDropdown();\n                }\n        }\n    }\n    trigger() {\n        if (this.nzDisabled || (!this.nzDisabled && this.nzOpen)) {\n            this.closeDropDown();\n        }\n        else {\n            this.openDropdown();\n        }\n    }\n    openDropdown() {\n        if (!this.nzDisabled) {\n            this.nzOpen = true;\n            this.nzOpenChange.emit(this.nzOpen);\n            this.updateCdkConnectedOverlayStatus();\n            if (this.nzShowSearch || this.isMultiple) {\n                this.focusOnInput();\n            }\n        }\n    }\n    closeDropDown() {\n        this.onTouched();\n        this.nzOpen = false;\n        this.inputValue = '';\n        this.isNotFound = false;\n        this.nzOpenChange.emit(this.nzOpen);\n        this.cdr.markForCheck();\n    }\n    onKeyDownInput(e) {\n        const keyCode = e.keyCode;\n        const eventTarget = e.target;\n        if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n            e.preventDefault();\n            if (this.selectedNodes.length) {\n                const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n                this.removeSelected(removeNode);\n            }\n        }\n    }\n    onExpandedKeysChange(value) {\n        this.nzExpandChange.emit(value);\n        this.expandedKeys = [...value.keys];\n    }\n    setInputValue(value) {\n        this.inputValue = value;\n        this.updatePosition();\n    }\n    removeSelected(node, emit = true) {\n        node.isSelected = false;\n        node.isChecked = false;\n        if (this.nzCheckable) {\n            this.nzTreeService.conduct(node, this.nzCheckStrictly);\n        }\n        else {\n            this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n        }\n        if (emit) {\n            this.nzRemoved.emit(node);\n        }\n    }\n    focusOnInput() {\n        if (this.nzSelectSearchComponent) {\n            this.nzSelectSearchComponent.focus();\n        }\n    }\n    subscribeSelectionChange() {\n        merge(this.nzTreeClick.pipe(tap((event) => {\n            const node = event.node;\n            if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n                node.isChecked = !node.isChecked;\n                node.isHalfChecked = false;\n                if (!this.nzCheckStrictly) {\n                    this.nzTreeService.conduct(node);\n                }\n            }\n            if (this.nzCheckable) {\n                node.isSelected = false;\n            }\n        }), filter((event) => {\n            const node = event.node;\n            return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n        })), this.nzCheckable ? this.nzTreeCheckBoxChange : of(), this.nzCleared, this.nzRemoved)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateSelectedNodes();\n            const value = this.selectedNodes.map(node => node.key);\n            this.value = [...value];\n            if (this.nzShowSearch || this.isMultiple) {\n                this.inputValue = '';\n                this.isNotFound = false;\n            }\n            if (this.isMultiple) {\n                this.onChange(value);\n                this.focusOnInput();\n                this.updatePosition();\n            }\n            else {\n                this.closeDropDown();\n                this.onChange(value.length ? value[0] : null);\n            }\n        });\n    }\n    updateSelectedNodes(init = false) {\n        if (init) {\n            const nodes = this.coerceTreeNodes(this.nzNodes);\n            this.nzTreeService.isMultiple = this.isMultiple;\n            this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n            this.nzTreeService.initTree(nodes);\n            if (this.nzCheckable) {\n                this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n            }\n            else {\n                this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n            }\n        }\n        this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n    }\n    updatePosition() {\n        reqAnimFrame(() => {\n            var _a, _b;\n            (_b = (_a = this.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();\n        });\n    }\n    onPositionChange(position) {\n        this.dropDownPosition = position.connectionPair.originY;\n    }\n    onClearSelection() {\n        this.selectedNodes.forEach(node => {\n            this.removeSelected(node, false);\n        });\n        this.nzCleared.emit();\n    }\n    onClickOutside(event) {\n        if (!this.elementRef.nativeElement.contains(event.target)) {\n            this.closeDropDown();\n        }\n    }\n    setSearchValues($event) {\n        Promise.resolve().then(() => {\n            this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys.length === 0;\n        });\n    }\n    updateCdkConnectedOverlayStatus() {\n        this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n    trackValue(_index, option) {\n        return option.key;\n    }\n}\nNzTreeSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectComponent, deps: [{ token: NzTreeSelectService }, { token: i2.NzConfigService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.FocusMonitor }, { token: i5.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzTreeSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzTreeSelectComponent, selector: \"nz-tree-select\", inputs: { nzId: \"nzId\", nzAllowClear: \"nzAllowClear\", nzShowExpand: \"nzShowExpand\", nzShowLine: \"nzShowLine\", nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\", nzCheckable: \"nzCheckable\", nzHideUnMatched: \"nzHideUnMatched\", nzShowIcon: \"nzShowIcon\", nzShowSearch: \"nzShowSearch\", nzDisabled: \"nzDisabled\", nzAsyncData: \"nzAsyncData\", nzMultiple: \"nzMultiple\", nzDefaultExpandAll: \"nzDefaultExpandAll\", nzCheckStrictly: \"nzCheckStrictly\", nzVirtualItemSize: \"nzVirtualItemSize\", nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\", nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\", nzVirtualHeight: \"nzVirtualHeight\", nzExpandedIcon: \"nzExpandedIcon\", nzNotFoundContent: \"nzNotFoundContent\", nzNodes: \"nzNodes\", nzOpen: \"nzOpen\", nzSize: \"nzSize\", nzPlaceHolder: \"nzPlaceHolder\", nzDropdownStyle: \"nzDropdownStyle\", nzDropdownClassName: \"nzDropdownClassName\", nzBackdrop: \"nzBackdrop\", nzExpandedKeys: \"nzExpandedKeys\", nzDisplayWith: \"nzDisplayWith\", nzMaxTagCount: \"nzMaxTagCount\", nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\", nzTreeTemplate: \"nzTreeTemplate\" }, outputs: { nzOpenChange: \"nzOpenChange\", nzCleared: \"nzCleared\", nzRemoved: \"nzRemoved\", nzExpandChange: \"nzExpandChange\", nzTreeClick: \"nzTreeClick\", nzTreeCheckBoxChange: \"nzTreeCheckBoxChange\" }, host: { listeners: { \"click\": \"trigger()\", \"keydown\": \"onKeydown($event)\" }, properties: { \"class.ant-select-lg\": \"nzSize===\\\"large\\\"\", \"class.ant-select-rtl\": \"dir===\\\"rtl\\\"\", \"class.ant-select-sm\": \"nzSize===\\\"small\\\"\", \"class.ant-select-disabled\": \"nzDisabled\", \"class.ant-select-single\": \"!isMultiple\", \"class.ant-select-show-arrow\": \"!isMultiple\", \"class.ant-select-show-search\": \"!isMultiple\", \"class.ant-select-multiple\": \"isMultiple\", \"class.ant-select-allow-clear\": \"nzAllowClear\", \"class.ant-select-open\": \"nzOpen\", \"class.ant-select-focused\": \"nzOpen || focused\" }, classAttribute: \"ant-select\" }, providers: [\n        NzTreeSelectService,\n        {\n            provide: NzTreeHigherOrderServiceToken,\n            useFactory: higherOrderServiceFactory,\n            deps: [[new Self(), Injector]]\n        },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzTreeSelectComponent),\n            multi: true\n        }\n    ], queries: [{ propertyName: \"nzTreeTemplateChild\", first: true, predicate: [\"nzTreeTemplate\"], descendants: true, static: true }], viewQueries: [{ propertyName: \"nzSelectSearchComponent\", first: true, predicate: NzSelectSearchComponent, descendants: true }, { propertyName: \"treeRef\", first: true, predicate: [\"treeRef\"], descendants: true }, { propertyName: \"cdkOverlayOrigin\", first: true, predicate: CdkOverlayOrigin, descendants: true, static: true }, { propertyName: \"cdkConnectedOverlay\", first: true, predicate: CdkConnectedOverlay, descendants: true }], exportAs: [\"nzTreeSelect\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\n      [cdkConnectedOverlayOpen]=\"nzOpen\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-select-tree-dropdown'\"\n      [cdkConnectedOverlayMinWidth]=\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\"\n      [cdkConnectedOverlayWidth]=\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeDropDown()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        [@slideMotion]=\"'enter'\"\n        [ngClass]=\"dropdownClassName\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\n        [class.ant-tree-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [dir]=\"dir\"\n        [ngStyle]=\"nzDropdownStyle\"\n      >\n        <nz-tree\n          #treeRef\n          [hidden]=\"isNotFound\"\n          nzNoAnimation\n          nzSelectMode\n          nzBlockNode\n          [nzData]=\"nzNodes\"\n          [nzMultiple]=\"nzMultiple\"\n          [nzSearchValue]=\"inputValue\"\n          [nzHideUnMatched]=\"nzHideUnMatched\"\n          [nzShowIcon]=\"nzShowIcon\"\n          [nzCheckable]=\"nzCheckable\"\n          [nzAsyncData]=\"nzAsyncData\"\n          [nzShowExpand]=\"nzShowExpand\"\n          [nzShowLine]=\"nzShowLine\"\n          [nzExpandedIcon]=\"nzExpandedIcon\"\n          [nzExpandAll]=\"nzDefaultExpandAll\"\n          [nzExpandedKeys]=\"expandedKeys\"\n          [nzCheckedKeys]=\"nzCheckable ? value : []\"\n          [nzSelectedKeys]=\"!nzCheckable ? value : []\"\n          [nzTreeTemplate]=\"treeTemplate\"\n          [nzCheckStrictly]=\"nzCheckStrictly\"\n          [nzVirtualItemSize]=\"nzVirtualItemSize\"\n          [nzVirtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [nzVirtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [nzVirtualHeight]=\"nzVirtualHeight\"\n          (nzExpandChange)=\"onExpandedKeysChange($event)\"\n          (nzClick)=\"nzTreeClick.emit($event)\"\n          (nzCheckedKeysChange)=\"updateSelectedNodes()\"\n          (nzSelectedKeysChange)=\"updateSelectedNodes()\"\n          (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\n          (nzSearchValueChange)=\"setSearchValues($event)\"\n        ></nz-tree>\n        <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\n          <nz-embed-empty [nzComponentName]=\"'tree-select'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n        </span>\n      </div>\n    </ng-template>\n\n    <div cdkOverlayOrigin class=\"ant-select-selector\">\n      <ng-container *ngIf=\"isMultiple\">\n        <nz-select-item\n          *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\n          [deletable]=\"true\"\n          [disabled]=\"node.isDisabled || nzDisabled\"\n          [label]=\"nzDisplayWith(node)\"\n          (delete)=\"removeSelected(node, true)\"\n        ></nz-select-item>\n\n        <nz-select-item\n          *ngIf=\"selectedNodes.length > nzMaxTagCount\"\n          [contentTemplateOutlet]=\"nzMaxTagPlaceholder\"\n          [contentTemplateOutletContext]=\"selectedNodes | slice: nzMaxTagCount\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [label]=\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\"\n        ></nz-select-item>\n      </ng-container>\n\n      <nz-select-search\n        [nzId]=\"nzId\"\n        [showInput]=\"nzShowSearch\"\n        (keydown)=\"onKeyDownInput($event)\"\n        (isComposingChange)=\"isComposing = $event\"\n        (valueChange)=\"setInputValue($event)\"\n        [value]=\"inputValue\"\n        [mirrorSync]=\"isMultiple\"\n        [disabled]=\"nzDisabled\"\n        [focusTrigger]=\"nzOpen\"\n      ></nz-select-search>\n\n      <nz-select-placeholder\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\n        [placeholder]=\"nzPlaceHolder\"\n        [style.display]=\"placeHolderDisplay\"\n      ></nz-select-placeholder>\n\n      <nz-select-item\n        *ngIf=\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\"\n        [deletable]=\"false\"\n        [disabled]=\"false\"\n        [label]=\"nzDisplayWith(selectedNodes[0])\"\n      ></nz-select-item>\n\n      <nz-select-arrow *ngIf=\"!isMultiple\"></nz-select-arrow>\n\n      <nz-select-clear\n        *ngIf=\"nzAllowClear && !nzDisabled && selectedNodes.length\"\n        (clear)=\"onClearSelection()\"\n      ></nz-select-clear>\n    </div>\n  `, isInline: true, components: [{ type: i6.NzTreeComponent, selector: \"nz-tree\", inputs: [\"nzShowIcon\", \"nzHideUnMatched\", \"nzBlockNode\", \"nzExpandAll\", \"nzSelectMode\", \"nzCheckStrictly\", \"nzShowExpand\", \"nzShowLine\", \"nzCheckable\", \"nzAsyncData\", \"nzDraggable\", \"nzMultiple\", \"nzExpandedIcon\", \"nzVirtualItemSize\", \"nzVirtualMaxBufferPx\", \"nzVirtualMinBufferPx\", \"nzVirtualHeight\", \"nzTreeTemplate\", \"nzBeforeDrop\", \"nzData\", \"nzExpandedKeys\", \"nzSelectedKeys\", \"nzCheckedKeys\", \"nzSearchValue\", \"nzSearchFunc\"], outputs: [\"nzExpandedKeysChange\", \"nzSelectedKeysChange\", \"nzCheckedKeysChange\", \"nzSearchValueChange\", \"nzClick\", \"nzDblClick\", \"nzContextMenu\", \"nzCheckBoxChange\", \"nzExpandChange\", \"nzOnDragStart\", \"nzOnDragEnter\", \"nzOnDragOver\", \"nzOnDragLeave\", \"nzOnDrop\", \"nzOnDragEnd\"], exportAs: [\"nzTree\"] }, { type: i7.NzEmbedEmptyComponent, selector: \"nz-embed-empty\", inputs: [\"nzComponentName\", \"specificContent\"], exportAs: [\"nzEmbedEmpty\"] }, { type: i8.NzSelectItemComponent, selector: \"nz-select-item\", inputs: [\"disabled\", \"label\", \"deletable\", \"removeIcon\", \"contentTemplateOutletContext\", \"contentTemplateOutlet\"], outputs: [\"delete\"] }, { type: i8.NzSelectSearchComponent, selector: \"nz-select-search\", inputs: [\"nzId\", \"disabled\", \"mirrorSync\", \"showInput\", \"focusTrigger\", \"value\", \"autofocus\"], outputs: [\"valueChange\", \"isComposingChange\"] }, { type: i8.NzSelectPlaceholderComponent, selector: \"nz-select-placeholder\", inputs: [\"placeholder\"] }, { type: i8.NzSelectArrowComponent, selector: \"nz-select-arrow\", inputs: [\"loading\", \"search\", \"suffixIcon\"] }, { type: i8.NzSelectClearComponent, selector: \"nz-select-clear\", inputs: [\"clearIcon\"], outputs: [\"clear\"] }], directives: [{ type: i9.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i10.NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: [\"nzArrowPointAtCenter\"], exportAs: [\"nzConnectedOverlay\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i5.NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }, { type: i3.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { type: i11.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i9.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i11.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"slice\": i11.SlicePipe }, animations: [slideMotion] });\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzAllowClear\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzShowLine\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig()\n], NzTreeSelectComponent.prototype, \"nzDropdownMatchSelectWidth\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzCheckable\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig()\n], NzTreeSelectComponent.prototype, \"nzHideUnMatched\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig()\n], NzTreeSelectComponent.prototype, \"nzShowIcon\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzShowSearch\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzAsyncData\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzMultiple\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzDefaultExpandAll\", void 0);\n__decorate([\n    InputBoolean()\n], NzTreeSelectComponent.prototype, \"nzCheckStrictly\", void 0);\n__decorate([\n    WithConfig()\n], NzTreeSelectComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig()\n], NzTreeSelectComponent.prototype, \"nzBackdrop\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tree-select',\n                    exportAs: 'nzTreeSelect',\n                    animations: [slideMotion],\n                    template: `\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\n      [cdkConnectedOverlayOpen]=\"nzOpen\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-select-tree-dropdown'\"\n      [cdkConnectedOverlayMinWidth]=\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\"\n      [cdkConnectedOverlayWidth]=\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeDropDown()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        [@slideMotion]=\"'enter'\"\n        [ngClass]=\"dropdownClassName\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\n        [class.ant-tree-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [dir]=\"dir\"\n        [ngStyle]=\"nzDropdownStyle\"\n      >\n        <nz-tree\n          #treeRef\n          [hidden]=\"isNotFound\"\n          nzNoAnimation\n          nzSelectMode\n          nzBlockNode\n          [nzData]=\"nzNodes\"\n          [nzMultiple]=\"nzMultiple\"\n          [nzSearchValue]=\"inputValue\"\n          [nzHideUnMatched]=\"nzHideUnMatched\"\n          [nzShowIcon]=\"nzShowIcon\"\n          [nzCheckable]=\"nzCheckable\"\n          [nzAsyncData]=\"nzAsyncData\"\n          [nzShowExpand]=\"nzShowExpand\"\n          [nzShowLine]=\"nzShowLine\"\n          [nzExpandedIcon]=\"nzExpandedIcon\"\n          [nzExpandAll]=\"nzDefaultExpandAll\"\n          [nzExpandedKeys]=\"expandedKeys\"\n          [nzCheckedKeys]=\"nzCheckable ? value : []\"\n          [nzSelectedKeys]=\"!nzCheckable ? value : []\"\n          [nzTreeTemplate]=\"treeTemplate\"\n          [nzCheckStrictly]=\"nzCheckStrictly\"\n          [nzVirtualItemSize]=\"nzVirtualItemSize\"\n          [nzVirtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [nzVirtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [nzVirtualHeight]=\"nzVirtualHeight\"\n          (nzExpandChange)=\"onExpandedKeysChange($event)\"\n          (nzClick)=\"nzTreeClick.emit($event)\"\n          (nzCheckedKeysChange)=\"updateSelectedNodes()\"\n          (nzSelectedKeysChange)=\"updateSelectedNodes()\"\n          (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\n          (nzSearchValueChange)=\"setSearchValues($event)\"\n        ></nz-tree>\n        <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\n          <nz-embed-empty [nzComponentName]=\"'tree-select'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n        </span>\n      </div>\n    </ng-template>\n\n    <div cdkOverlayOrigin class=\"ant-select-selector\">\n      <ng-container *ngIf=\"isMultiple\">\n        <nz-select-item\n          *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\n          [deletable]=\"true\"\n          [disabled]=\"node.isDisabled || nzDisabled\"\n          [label]=\"nzDisplayWith(node)\"\n          (delete)=\"removeSelected(node, true)\"\n        ></nz-select-item>\n\n        <nz-select-item\n          *ngIf=\"selectedNodes.length > nzMaxTagCount\"\n          [contentTemplateOutlet]=\"nzMaxTagPlaceholder\"\n          [contentTemplateOutletContext]=\"selectedNodes | slice: nzMaxTagCount\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [label]=\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\"\n        ></nz-select-item>\n      </ng-container>\n\n      <nz-select-search\n        [nzId]=\"nzId\"\n        [showInput]=\"nzShowSearch\"\n        (keydown)=\"onKeyDownInput($event)\"\n        (isComposingChange)=\"isComposing = $event\"\n        (valueChange)=\"setInputValue($event)\"\n        [value]=\"inputValue\"\n        [mirrorSync]=\"isMultiple\"\n        [disabled]=\"nzDisabled\"\n        [focusTrigger]=\"nzOpen\"\n      ></nz-select-search>\n\n      <nz-select-placeholder\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\n        [placeholder]=\"nzPlaceHolder\"\n        [style.display]=\"placeHolderDisplay\"\n      ></nz-select-placeholder>\n\n      <nz-select-item\n        *ngIf=\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\"\n        [deletable]=\"false\"\n        [disabled]=\"false\"\n        [label]=\"nzDisplayWith(selectedNodes[0])\"\n      ></nz-select-item>\n\n      <nz-select-arrow *ngIf=\"!isMultiple\"></nz-select-arrow>\n\n      <nz-select-clear\n        *ngIf=\"nzAllowClear && !nzDisabled && selectedNodes.length\"\n        (clear)=\"onClearSelection()\"\n      ></nz-select-clear>\n    </div>\n  `,\n                    providers: [\n                        NzTreeSelectService,\n                        {\n                            provide: NzTreeHigherOrderServiceToken,\n                            useFactory: higherOrderServiceFactory,\n                            deps: [[new Self(), Injector]]\n                        },\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzTreeSelectComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-select',\n                        '[class.ant-select-lg]': 'nzSize===\"large\"',\n                        '[class.ant-select-rtl]': 'dir===\"rtl\"',\n                        '[class.ant-select-sm]': 'nzSize===\"small\"',\n                        '[class.ant-select-disabled]': 'nzDisabled',\n                        '[class.ant-select-single]': '!isMultiple',\n                        '[class.ant-select-show-arrow]': '!isMultiple',\n                        '[class.ant-select-show-search]': '!isMultiple',\n                        '[class.ant-select-multiple]': 'isMultiple',\n                        '[class.ant-select-allow-clear]': 'nzAllowClear',\n                        '[class.ant-select-open]': 'nzOpen',\n                        '[class.ant-select-focused]': 'nzOpen || focused',\n                        '(click)': 'trigger()',\n                        '(keydown)': 'onKeydown($event)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NzTreeSelectService }, { type: i2.NzConfigService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.FocusMonitor }, { type: i5.NzNoAnimationDirective, decorators: [{\n                        type: Host\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzId: [{\n                type: Input\n            }], nzAllowClear: [{\n                type: Input\n            }], nzShowExpand: [{\n                type: Input\n            }], nzShowLine: [{\n                type: Input\n            }], nzDropdownMatchSelectWidth: [{\n                type: Input\n            }], nzCheckable: [{\n                type: Input\n            }], nzHideUnMatched: [{\n                type: Input\n            }], nzShowIcon: [{\n                type: Input\n            }], nzShowSearch: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzAsyncData: [{\n                type: Input\n            }], nzMultiple: [{\n                type: Input\n            }], nzDefaultExpandAll: [{\n                type: Input\n            }], nzCheckStrictly: [{\n                type: Input\n            }], nzVirtualItemSize: [{\n                type: Input\n            }], nzVirtualMaxBufferPx: [{\n                type: Input\n            }], nzVirtualMinBufferPx: [{\n                type: Input\n            }], nzVirtualHeight: [{\n                type: Input\n            }], nzExpandedIcon: [{\n                type: Input\n            }], nzNotFoundContent: [{\n                type: Input\n            }], nzNodes: [{\n                type: Input\n            }], nzOpen: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzPlaceHolder: [{\n                type: Input\n            }], nzDropdownStyle: [{\n                type: Input\n            }], nzDropdownClassName: [{\n                type: Input\n            }], nzBackdrop: [{\n                type: Input\n            }], nzExpandedKeys: [{\n                type: Input\n            }], nzDisplayWith: [{\n                type: Input\n            }], nzMaxTagCount: [{\n                type: Input\n            }], nzMaxTagPlaceholder: [{\n                type: Input\n            }], nzOpenChange: [{\n                type: Output\n            }], nzCleared: [{\n                type: Output\n            }], nzRemoved: [{\n                type: Output\n            }], nzExpandChange: [{\n                type: Output\n            }], nzTreeClick: [{\n                type: Output\n            }], nzTreeCheckBoxChange: [{\n                type: Output\n            }], nzSelectSearchComponent: [{\n                type: ViewChild,\n                args: [NzSelectSearchComponent, { static: false }]\n            }], treeRef: [{\n                type: ViewChild,\n                args: ['treeRef', { static: false }]\n            }], cdkOverlayOrigin: [{\n                type: ViewChild,\n                args: [CdkOverlayOrigin, { static: true }]\n            }], cdkConnectedOverlay: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay, { static: false }]\n            }], nzTreeTemplate: [{\n                type: Input\n            }], nzTreeTemplateChild: [{\n                type: ContentChild,\n                args: ['nzTreeTemplate', { static: true }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeSelectModule {\n}\nNzTreeSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzTreeSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectModule, declarations: [NzTreeSelectComponent], imports: [BidiModule,\n        CommonModule,\n        OverlayModule,\n        FormsModule,\n        NzSelectModule,\n        NzTreeModule,\n        NzIconModule,\n        NzEmptyModule,\n        NzOverlayModule,\n        NzNoAnimationModule], exports: [NzTreeSelectComponent] });\nNzTreeSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectModule, imports: [[\n            BidiModule,\n            CommonModule,\n            OverlayModule,\n            FormsModule,\n            NzSelectModule,\n            NzTreeModule,\n            NzIconModule,\n            NzEmptyModule,\n            NzOverlayModule,\n            NzNoAnimationModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzTreeSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        OverlayModule,\n                        FormsModule,\n                        NzSelectModule,\n                        NzTreeModule,\n                        NzIconModule,\n                        NzEmptyModule,\n                        NzOverlayModule,\n                        NzNoAnimationModule\n                    ],\n                    declarations: [NzTreeSelectComponent],\n                    exports: [NzTreeSelectComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeSelectComponent, NzTreeSelectModule, NzTreeSelectService, higherOrderServiceFactory };\n"]},"metadata":{},"sourceType":"module"}