{"ast":null,"code":"import * as i2$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isTouchEvent, ensureInBounds, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst _c0 = [\"*\"];\n\nfunction NzResizeHandlesComponent_nz_resize_handle_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-resize-handle\", 1);\n  }\n\n  if (rf & 2) {\n    const dir_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzDirection\", dir_r1);\n  }\n}\n\nfunction getEventWithPoint(event) {\n  return isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzResizableService {\n  constructor(ngZone, document) {\n    this.ngZone = ngZone;\n    this.listeners = new Map();\n    this.handleMouseDown$ = new Subject();\n    this.documentMouseUp$ = new Subject();\n    this.documentMouseMove$ = new Subject();\n    this.mouseEntered$ = new Subject();\n    this.document = document;\n  }\n\n  startResizing(event) {\n    const _isTouchEvent = isTouchEvent(event);\n\n    this.clearListeners();\n    const moveEvent = _isTouchEvent ? 'touchmove' : 'mousemove';\n    const upEvent = _isTouchEvent ? 'touchend' : 'mouseup';\n\n    const moveEventHandler = e => {\n      this.documentMouseMove$.next(e);\n    };\n\n    const upEventHandler = e => {\n      this.documentMouseUp$.next(e);\n      this.clearListeners();\n    };\n\n    this.listeners.set(moveEvent, moveEventHandler);\n    this.listeners.set(upEvent, upEventHandler);\n    this.ngZone.runOutsideAngular(() => {\n      this.listeners.forEach((handler, name) => {\n        this.document.addEventListener(name, handler);\n      });\n    });\n  }\n\n  clearListeners() {\n    this.listeners.forEach((handler, name) => {\n      this.document.removeEventListener(name, handler);\n    });\n    this.listeners.clear();\n  }\n\n  ngOnDestroy() {\n    this.handleMouseDown$.complete();\n    this.documentMouseUp$.complete();\n    this.documentMouseMove$.complete();\n    this.mouseEntered$.complete();\n    this.clearListeners();\n  }\n\n}\n\nNzResizableService.ɵfac = function NzResizableService_Factory(t) {\n  return new (t || NzResizableService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n};\n\nNzResizableService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzResizableService,\n  factory: NzResizableService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizableService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass NzResizableDirective {\n  constructor(elementRef, renderer, nzResizableService, platform, ngZone) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.nzResizableService = nzResizableService;\n    this.platform = platform;\n    this.ngZone = ngZone;\n    this.nzBounds = 'parent';\n    this.nzMinHeight = 40;\n    this.nzMinWidth = 40;\n    this.nzGridColumnCount = -1;\n    this.nzMaxColumn = -1;\n    this.nzMinColumn = -1;\n    this.nzLockAspectRatio = false;\n    this.nzPreview = false;\n    this.nzDisabled = false;\n    this.nzResize = new EventEmitter();\n    this.nzResizeEnd = new EventEmitter();\n    this.nzResizeStart = new EventEmitter();\n    this.resizing = false;\n    this.currentHandleEvent = null;\n    this.ghostElement = null;\n    this.sizeCache = null;\n    this.destroy$ = new Subject();\n    this.nzResizableService.handleMouseDown$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.nzDisabled) {\n        return;\n      }\n\n      this.resizing = true;\n      this.nzResizableService.startResizing(event.mouseEvent);\n      this.currentHandleEvent = event;\n      this.setCursor();\n      this.nzResizeStart.emit({\n        mouseEvent: event.mouseEvent\n      });\n      this.elRect = this.el.getBoundingClientRect();\n    });\n    this.nzResizableService.documentMouseUp$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.resizing) {\n        this.resizing = false;\n        this.nzResizableService.documentMouseUp$.next();\n        this.endResize(event);\n      }\n    });\n    this.nzResizableService.documentMouseMove$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (this.resizing) {\n        this.resize(event);\n      }\n    });\n  }\n\n  setPosition() {\n    const position = getComputedStyle(this.el).position;\n\n    if (position === 'static' || !position) {\n      this.renderer.setStyle(this.el, 'position', 'relative');\n    }\n  }\n\n  calcSize(width, height, ratio) {\n    let newWidth;\n    let newHeight;\n    let maxWidth;\n    let maxHeight;\n    let col = 0;\n    let spanWidth = 0;\n    let minWidth = this.nzMinWidth;\n    let boundWidth = Infinity;\n    let boundHeight = Infinity;\n\n    if (this.nzBounds === 'parent') {\n      const parent = this.renderer.parentNode(this.el);\n\n      if (parent instanceof HTMLElement) {\n        const parentRect = parent.getBoundingClientRect();\n        boundWidth = parentRect.width;\n        boundHeight = parentRect.height;\n      }\n    } else if (this.nzBounds === 'window') {\n      if (typeof window !== 'undefined') {\n        boundWidth = window.innerWidth;\n        boundHeight = window.innerHeight;\n      }\n    } else if (this.nzBounds && this.nzBounds.nativeElement && this.nzBounds.nativeElement instanceof HTMLElement) {\n      const boundsRect = this.nzBounds.nativeElement.getBoundingClientRect();\n      boundWidth = boundsRect.width;\n      boundHeight = boundsRect.height;\n    }\n\n    maxWidth = ensureInBounds(this.nzMaxWidth, boundWidth);\n    maxHeight = ensureInBounds(this.nzMaxHeight, boundHeight);\n\n    if (this.nzGridColumnCount !== -1) {\n      spanWidth = maxWidth / this.nzGridColumnCount;\n      minWidth = this.nzMinColumn !== -1 ? spanWidth * this.nzMinColumn : minWidth;\n      maxWidth = this.nzMaxColumn !== -1 ? spanWidth * this.nzMaxColumn : maxWidth;\n    }\n\n    if (ratio !== -1) {\n      if (/(left|right)/i.test(this.currentHandleEvent.direction)) {\n        newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n        newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n\n        if (newHeight >= maxHeight || newHeight <= this.nzMinHeight) {\n          newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n        }\n      } else {\n        newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n        newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n\n        if (newWidth >= maxWidth || newWidth <= minWidth) {\n          newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n        }\n      }\n    } else {\n      newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n      newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n    }\n\n    if (this.nzGridColumnCount !== -1) {\n      col = Math.round(newWidth / spanWidth);\n      newWidth = col * spanWidth;\n    }\n\n    return {\n      col,\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  setCursor() {\n    switch (this.currentHandleEvent.direction) {\n      case 'left':\n      case 'right':\n        this.renderer.setStyle(document.body, 'cursor', 'ew-resize');\n        break;\n\n      case 'top':\n      case 'bottom':\n        this.renderer.setStyle(document.body, 'cursor', 'ns-resize');\n        break;\n\n      case 'topLeft':\n      case 'bottomRight':\n        this.renderer.setStyle(document.body, 'cursor', 'nwse-resize');\n        break;\n\n      case 'topRight':\n      case 'bottomLeft':\n        this.renderer.setStyle(document.body, 'cursor', 'nesw-resize');\n        break;\n    }\n\n    this.renderer.setStyle(document.body, 'user-select', 'none');\n  }\n\n  resize(event) {\n    const elRect = this.elRect;\n    const resizeEvent = getEventWithPoint(event);\n    const handleEvent = getEventWithPoint(this.currentHandleEvent.mouseEvent);\n    let width = elRect.width;\n    let height = elRect.height;\n    const ratio = this.nzLockAspectRatio ? width / height : -1;\n\n    switch (this.currentHandleEvent.direction) {\n      case 'bottomRight':\n        width = resizeEvent.clientX - elRect.left;\n        height = resizeEvent.clientY - elRect.top;\n        break;\n\n      case 'bottomLeft':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        height = resizeEvent.clientY - elRect.top;\n        break;\n\n      case 'topRight':\n        width = resizeEvent.clientX - elRect.left;\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n\n      case 'topLeft':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n\n      case 'top':\n        height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n        break;\n\n      case 'right':\n        width = resizeEvent.clientX - elRect.left;\n        break;\n\n      case 'bottom':\n        height = resizeEvent.clientY - elRect.top;\n        break;\n\n      case 'left':\n        width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n    }\n\n    const size = this.calcSize(width, height, ratio);\n    this.sizeCache = Object.assign({}, size); // Re-enter the Angular zone and run the change detection only if there're any `nzResize` listeners,\n    // e.g.: `<div nz-resizable (nzResize)=\"...\"></div>`.\n\n    if (this.nzResize.observers.length) {\n      this.ngZone.run(() => {\n        this.nzResize.emit(Object.assign(Object.assign({}, size), {\n          mouseEvent: event\n        }));\n      });\n    }\n\n    if (this.nzPreview) {\n      this.previewResize(size);\n    }\n  }\n\n  endResize(event) {\n    this.renderer.setStyle(document.body, 'cursor', '');\n    this.renderer.setStyle(document.body, 'user-select', '');\n    this.removeGhostElement();\n    const size = this.sizeCache ? Object.assign({}, this.sizeCache) : {\n      width: this.elRect.width,\n      height: this.elRect.height\n    }; // Re-enter the Angular zone and run the change detection only if there're any `nzResizeEnd` listeners,\n    // e.g.: `<div nz-resizable (nzResizeEnd)=\"...\"></div>`.\n\n    if (this.nzResizeEnd.observers.length) {\n      this.ngZone.run(() => {\n        this.nzResizeEnd.emit(Object.assign(Object.assign({}, size), {\n          mouseEvent: event\n        }));\n      });\n    }\n\n    this.sizeCache = null;\n    this.currentHandleEvent = null;\n  }\n\n  previewResize({\n    width,\n    height\n  }) {\n    this.createGhostElement();\n    this.renderer.setStyle(this.ghostElement, 'width', `${width}px`);\n    this.renderer.setStyle(this.ghostElement, 'height', `${height}px`);\n  }\n\n  createGhostElement() {\n    if (!this.ghostElement) {\n      this.ghostElement = this.renderer.createElement('div');\n      this.renderer.setAttribute(this.ghostElement, 'class', 'nz-resizable-preview');\n    }\n\n    this.renderer.appendChild(this.el, this.ghostElement);\n  }\n\n  removeGhostElement() {\n    if (this.ghostElement) {\n      this.renderer.removeChild(this.el, this.ghostElement);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n\n    this.el = this.elementRef.nativeElement;\n    this.setPosition();\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.el, 'mouseenter').pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.nzResizableService.mouseEntered$.next(true);\n      });\n      fromEvent(this.el, 'mouseleave').pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.nzResizableService.mouseEntered$.next(false);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.ghostElement = null;\n    this.sizeCache = null;\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzResizableDirective.ɵfac = function NzResizableDirective_Factory(t) {\n  return new (t || NzResizableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzResizableService), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNzResizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzResizableDirective,\n  selectors: [[\"\", \"nz-resizable\", \"\"]],\n  hostAttrs: [1, \"nz-resizable\"],\n  hostVars: 4,\n  hostBindings: function NzResizableDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"nz-resizable-resizing\", ctx.resizing)(\"nz-resizable-disabled\", ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzBounds: \"nzBounds\",\n    nzMaxHeight: \"nzMaxHeight\",\n    nzMaxWidth: \"nzMaxWidth\",\n    nzMinHeight: \"nzMinHeight\",\n    nzMinWidth: \"nzMinWidth\",\n    nzGridColumnCount: \"nzGridColumnCount\",\n    nzMaxColumn: \"nzMaxColumn\",\n    nzMinColumn: \"nzMinColumn\",\n    nzLockAspectRatio: \"nzLockAspectRatio\",\n    nzPreview: \"nzPreview\",\n    nzDisabled: \"nzDisabled\"\n  },\n  outputs: {\n    nzResize: \"nzResize\",\n    nzResizeEnd: \"nzResizeEnd\",\n    nzResizeStart: \"nzResizeStart\"\n  },\n  exportAs: [\"nzResizable\"],\n  features: [i0.ɵɵProvidersFeature([NzResizableService])]\n});\n\n__decorate([InputBoolean()], NzResizableDirective.prototype, \"nzLockAspectRatio\", void 0);\n\n__decorate([InputBoolean()], NzResizableDirective.prototype, \"nzPreview\", void 0);\n\n__decorate([InputBoolean()], NzResizableDirective.prototype, \"nzDisabled\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-resizable]',\n      exportAs: 'nzResizable',\n      providers: [NzResizableService],\n      host: {\n        class: 'nz-resizable',\n        '[class.nz-resizable-resizing]': 'resizing',\n        '[class.nz-resizable-disabled]': 'nzDisabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NzResizableService\n    }, {\n      type: i2.Platform\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    nzBounds: [{\n      type: Input\n    }],\n    nzMaxHeight: [{\n      type: Input\n    }],\n    nzMaxWidth: [{\n      type: Input\n    }],\n    nzMinHeight: [{\n      type: Input\n    }],\n    nzMinWidth: [{\n      type: Input\n    }],\n    nzGridColumnCount: [{\n      type: Input\n    }],\n    nzMaxColumn: [{\n      type: Input\n    }],\n    nzMinColumn: [{\n      type: Input\n    }],\n    nzLockAspectRatio: [{\n      type: Input\n    }],\n    nzPreview: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzResize: [{\n      type: Output\n    }],\n    nzResizeEnd: [{\n      type: Output\n    }],\n    nzResizeStart: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzResizeHandleMouseDownEvent {\n  constructor(direction, mouseEvent) {\n    this.direction = direction;\n    this.mouseEvent = mouseEvent;\n  }\n\n}\n\nclass NzResizeHandleComponent {\n  constructor(nzResizableService, renderer, elementRef) {\n    this.nzResizableService = nzResizableService;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nzDirection = 'bottomRight';\n    this.nzMouseDown = new EventEmitter();\n    this.destroy$ = new Subject();\n  }\n\n  ngOnInit() {\n    // Caretaker note: `mouseEntered$` subject will emit events within the `<root>` zone,\n    // see `NzResizableDirective#ngAfterViewInit`. There're event listeners are added within the `<root>` zone.\n    this.nzResizableService.mouseEntered$.pipe(takeUntil(this.destroy$)).subscribe(entered => {\n      if (entered) {\n        this.renderer.addClass(this.elementRef.nativeElement, 'nz-resizable-handle-box-hover');\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'nz-resizable-handle-box-hover');\n      }\n    });\n  }\n\n  onMousedown(event) {\n    this.nzResizableService.handleMouseDown$.next(new NzResizeHandleMouseDownEvent(this.nzDirection, event));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzResizeHandleComponent.ɵfac = function NzResizeHandleComponent_Factory(t) {\n  return new (t || NzResizeHandleComponent)(i0.ɵɵdirectiveInject(NzResizableService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzResizeHandleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzResizeHandleComponent,\n  selectors: [[\"nz-resize-handle\"], [\"\", \"nz-resize-handle\", \"\"]],\n  hostAttrs: [1, \"nz-resizable-handle\"],\n  hostVars: 16,\n  hostBindings: function NzResizeHandleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function NzResizeHandleComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      })(\"touchstart\", function NzResizeHandleComponent_touchstart_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"nz-resizable-handle-top\", ctx.nzDirection === \"top\")(\"nz-resizable-handle-right\", ctx.nzDirection === \"right\")(\"nz-resizable-handle-bottom\", ctx.nzDirection === \"bottom\")(\"nz-resizable-handle-left\", ctx.nzDirection === \"left\")(\"nz-resizable-handle-topRight\", ctx.nzDirection === \"topRight\")(\"nz-resizable-handle-bottomRight\", ctx.nzDirection === \"bottomRight\")(\"nz-resizable-handle-bottomLeft\", ctx.nzDirection === \"bottomLeft\")(\"nz-resizable-handle-topLeft\", ctx.nzDirection === \"topLeft\");\n    }\n  },\n  inputs: {\n    nzDirection: \"nzDirection\"\n  },\n  outputs: {\n    nzMouseDown: \"nzMouseDown\"\n  },\n  exportAs: [\"nzResizeHandle\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzResizeHandleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeHandleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-resize-handle, [nz-resize-handle]',\n      exportAs: 'nzResizeHandle',\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'nz-resizable-handle',\n        '[class.nz-resizable-handle-top]': `nzDirection === 'top'`,\n        '[class.nz-resizable-handle-right]': `nzDirection === 'right'`,\n        '[class.nz-resizable-handle-bottom]': `nzDirection === 'bottom'`,\n        '[class.nz-resizable-handle-left]': `nzDirection === 'left'`,\n        '[class.nz-resizable-handle-topRight]': `nzDirection === 'topRight'`,\n        '[class.nz-resizable-handle-bottomRight]': `nzDirection === 'bottomRight'`,\n        '[class.nz-resizable-handle-bottomLeft]': `nzDirection === 'bottomLeft'`,\n        '[class.nz-resizable-handle-topLeft]': `nzDirection === 'topLeft'`,\n        '(mousedown)': 'onMousedown($event)',\n        '(touchstart)': 'onMousedown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzResizableService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzDirection: [{\n      type: Input\n    }],\n    nzMouseDown: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nconst DEFAULT_RESIZE_DIRECTION = ['bottomRight', 'topRight', 'bottomLeft', 'topLeft', 'bottom', 'right', 'top', 'left'];\n\nclass NzResizeHandlesComponent {\n  constructor() {\n    this.nzDirections = DEFAULT_RESIZE_DIRECTION;\n    this.directions = new Set(this.nzDirections);\n  }\n\n  ngOnChanges(changes) {\n    if (changes.nzDirections) {\n      this.directions = new Set(changes.nzDirections.currentValue);\n    }\n  }\n\n}\n\nNzResizeHandlesComponent.ɵfac = function NzResizeHandlesComponent_Factory(t) {\n  return new (t || NzResizeHandlesComponent)();\n};\n\nNzResizeHandlesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzResizeHandlesComponent,\n  selectors: [[\"nz-resize-handles\"]],\n  inputs: {\n    nzDirections: \"nzDirections\"\n  },\n  exportAs: [\"nzResizeHandles\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"nzDirection\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzDirection\"]],\n  template: function NzResizeHandlesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzResizeHandlesComponent_nz_resize_handle_0_Template, 1, 1, \"nz-resize-handle\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.directions);\n    }\n  },\n  directives: [NzResizeHandleComponent, i2$1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizeHandlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-resize-handles',\n      exportAs: 'nzResizeHandles',\n      template: ` <nz-resize-handle *ngFor=\"let dir of directions\" [nzDirection]=\"dir\"></nz-resize-handle> `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzDirections: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzResizableModule {}\n\nNzResizableModule.ɵfac = function NzResizableModule_Factory(t) {\n  return new (t || NzResizableModule)();\n};\n\nNzResizableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzResizableModule\n});\nNzResizableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzResizableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent],\n      exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_RESIZE_DIRECTION, NzResizableDirective, NzResizableModule, NzResizableService, NzResizeHandleComponent, NzResizeHandleMouseDownEvent, NzResizeHandlesComponent, getEventWithPoint };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-resizable.mjs"],"names":["i2$1","DOCUMENT","CommonModule","i0","Injectable","Inject","EventEmitter","Directive","Input","Output","Component","ChangeDetectionStrategy","NgModule","__decorate","Subject","fromEvent","takeUntil","isTouchEvent","ensureInBounds","InputBoolean","i2","getEventWithPoint","event","touches","changedTouches","NzResizableService","constructor","ngZone","document","listeners","Map","handleMouseDown$","documentMouseUp$","documentMouseMove$","mouseEntered$","startResizing","_isTouchEvent","clearListeners","moveEvent","upEvent","moveEventHandler","e","next","upEventHandler","set","runOutsideAngular","forEach","handler","name","addEventListener","removeEventListener","clear","ngOnDestroy","complete","ɵfac","NgZone","ɵprov","type","undefined","decorators","args","NzResizableDirective","elementRef","renderer","nzResizableService","platform","nzBounds","nzMinHeight","nzMinWidth","nzGridColumnCount","nzMaxColumn","nzMinColumn","nzLockAspectRatio","nzPreview","nzDisabled","nzResize","nzResizeEnd","nzResizeStart","resizing","currentHandleEvent","ghostElement","sizeCache","destroy$","pipe","subscribe","mouseEvent","setCursor","emit","elRect","el","getBoundingClientRect","endResize","resize","setPosition","position","getComputedStyle","setStyle","calcSize","width","height","ratio","newWidth","newHeight","maxWidth","maxHeight","col","spanWidth","minWidth","boundWidth","Infinity","boundHeight","parent","parentNode","HTMLElement","parentRect","window","innerWidth","innerHeight","nativeElement","boundsRect","nzMaxWidth","nzMaxHeight","test","direction","Math","min","max","round","body","resizeEvent","handleEvent","clientX","left","clientY","top","size","Object","assign","observers","length","run","previewResize","removeGhostElement","createGhostElement","createElement","setAttribute","appendChild","removeChild","ngAfterViewInit","isBrowser","ElementRef","Renderer2","Platform","ɵdir","prototype","selector","exportAs","providers","host","class","NzResizeHandleMouseDownEvent","NzResizeHandleComponent","nzDirection","nzMouseDown","ngOnInit","entered","addClass","removeClass","onMousedown","ɵcmp","template","changeDetection","OnPush","DEFAULT_RESIZE_DIRECTION","NzResizeHandlesComponent","nzDirections","directions","Set","ngOnChanges","changes","currentValue","NgForOf","NzResizableModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i2$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { isTouchEvent, ensureInBounds, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction getEventWithPoint(event) {\n    return isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizableService {\n    constructor(ngZone, document) {\n        this.ngZone = ngZone;\n        this.listeners = new Map();\n        this.handleMouseDown$ = new Subject();\n        this.documentMouseUp$ = new Subject();\n        this.documentMouseMove$ = new Subject();\n        this.mouseEntered$ = new Subject();\n        this.document = document;\n    }\n    startResizing(event) {\n        const _isTouchEvent = isTouchEvent(event);\n        this.clearListeners();\n        const moveEvent = _isTouchEvent ? 'touchmove' : 'mousemove';\n        const upEvent = _isTouchEvent ? 'touchend' : 'mouseup';\n        const moveEventHandler = (e) => {\n            this.documentMouseMove$.next(e);\n        };\n        const upEventHandler = (e) => {\n            this.documentMouseUp$.next(e);\n            this.clearListeners();\n        };\n        this.listeners.set(moveEvent, moveEventHandler);\n        this.listeners.set(upEvent, upEventHandler);\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.forEach((handler, name) => {\n                this.document.addEventListener(name, handler);\n            });\n        });\n    }\n    clearListeners() {\n        this.listeners.forEach((handler, name) => {\n            this.document.removeEventListener(name, handler);\n        });\n        this.listeners.clear();\n    }\n    ngOnDestroy() {\n        this.handleMouseDown$.complete();\n        this.documentMouseUp$.complete();\n        this.documentMouseMove$.complete();\n        this.mouseEntered$.complete();\n        this.clearListeners();\n    }\n}\nNzResizableService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableService, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nNzResizableService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\nclass NzResizableDirective {\n    constructor(elementRef, renderer, nzResizableService, platform, ngZone) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.nzResizableService = nzResizableService;\n        this.platform = platform;\n        this.ngZone = ngZone;\n        this.nzBounds = 'parent';\n        this.nzMinHeight = 40;\n        this.nzMinWidth = 40;\n        this.nzGridColumnCount = -1;\n        this.nzMaxColumn = -1;\n        this.nzMinColumn = -1;\n        this.nzLockAspectRatio = false;\n        this.nzPreview = false;\n        this.nzDisabled = false;\n        this.nzResize = new EventEmitter();\n        this.nzResizeEnd = new EventEmitter();\n        this.nzResizeStart = new EventEmitter();\n        this.resizing = false;\n        this.currentHandleEvent = null;\n        this.ghostElement = null;\n        this.sizeCache = null;\n        this.destroy$ = new Subject();\n        this.nzResizableService.handleMouseDown$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n            if (this.nzDisabled) {\n                return;\n            }\n            this.resizing = true;\n            this.nzResizableService.startResizing(event.mouseEvent);\n            this.currentHandleEvent = event;\n            this.setCursor();\n            this.nzResizeStart.emit({\n                mouseEvent: event.mouseEvent\n            });\n            this.elRect = this.el.getBoundingClientRect();\n        });\n        this.nzResizableService.documentMouseUp$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n            if (this.resizing) {\n                this.resizing = false;\n                this.nzResizableService.documentMouseUp$.next();\n                this.endResize(event);\n            }\n        });\n        this.nzResizableService.documentMouseMove$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n            if (this.resizing) {\n                this.resize(event);\n            }\n        });\n    }\n    setPosition() {\n        const position = getComputedStyle(this.el).position;\n        if (position === 'static' || !position) {\n            this.renderer.setStyle(this.el, 'position', 'relative');\n        }\n    }\n    calcSize(width, height, ratio) {\n        let newWidth;\n        let newHeight;\n        let maxWidth;\n        let maxHeight;\n        let col = 0;\n        let spanWidth = 0;\n        let minWidth = this.nzMinWidth;\n        let boundWidth = Infinity;\n        let boundHeight = Infinity;\n        if (this.nzBounds === 'parent') {\n            const parent = this.renderer.parentNode(this.el);\n            if (parent instanceof HTMLElement) {\n                const parentRect = parent.getBoundingClientRect();\n                boundWidth = parentRect.width;\n                boundHeight = parentRect.height;\n            }\n        }\n        else if (this.nzBounds === 'window') {\n            if (typeof window !== 'undefined') {\n                boundWidth = window.innerWidth;\n                boundHeight = window.innerHeight;\n            }\n        }\n        else if (this.nzBounds && this.nzBounds.nativeElement && this.nzBounds.nativeElement instanceof HTMLElement) {\n            const boundsRect = this.nzBounds.nativeElement.getBoundingClientRect();\n            boundWidth = boundsRect.width;\n            boundHeight = boundsRect.height;\n        }\n        maxWidth = ensureInBounds(this.nzMaxWidth, boundWidth);\n        maxHeight = ensureInBounds(this.nzMaxHeight, boundHeight);\n        if (this.nzGridColumnCount !== -1) {\n            spanWidth = maxWidth / this.nzGridColumnCount;\n            minWidth = this.nzMinColumn !== -1 ? spanWidth * this.nzMinColumn : minWidth;\n            maxWidth = this.nzMaxColumn !== -1 ? spanWidth * this.nzMaxColumn : maxWidth;\n        }\n        if (ratio !== -1) {\n            if (/(left|right)/i.test(this.currentHandleEvent.direction)) {\n                newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n                newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n                if (newHeight >= maxHeight || newHeight <= this.nzMinHeight) {\n                    newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n                }\n            }\n            else {\n                newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n                newWidth = Math.min(Math.max(newHeight * ratio, minWidth), maxWidth);\n                if (newWidth >= maxWidth || newWidth <= minWidth) {\n                    newHeight = Math.min(Math.max(newWidth / ratio, this.nzMinHeight), maxHeight);\n                }\n            }\n        }\n        else {\n            newWidth = Math.min(Math.max(width, minWidth), maxWidth);\n            newHeight = Math.min(Math.max(height, this.nzMinHeight), maxHeight);\n        }\n        if (this.nzGridColumnCount !== -1) {\n            col = Math.round(newWidth / spanWidth);\n            newWidth = col * spanWidth;\n        }\n        return {\n            col,\n            width: newWidth,\n            height: newHeight\n        };\n    }\n    setCursor() {\n        switch (this.currentHandleEvent.direction) {\n            case 'left':\n            case 'right':\n                this.renderer.setStyle(document.body, 'cursor', 'ew-resize');\n                break;\n            case 'top':\n            case 'bottom':\n                this.renderer.setStyle(document.body, 'cursor', 'ns-resize');\n                break;\n            case 'topLeft':\n            case 'bottomRight':\n                this.renderer.setStyle(document.body, 'cursor', 'nwse-resize');\n                break;\n            case 'topRight':\n            case 'bottomLeft':\n                this.renderer.setStyle(document.body, 'cursor', 'nesw-resize');\n                break;\n        }\n        this.renderer.setStyle(document.body, 'user-select', 'none');\n    }\n    resize(event) {\n        const elRect = this.elRect;\n        const resizeEvent = getEventWithPoint(event);\n        const handleEvent = getEventWithPoint(this.currentHandleEvent.mouseEvent);\n        let width = elRect.width;\n        let height = elRect.height;\n        const ratio = this.nzLockAspectRatio ? width / height : -1;\n        switch (this.currentHandleEvent.direction) {\n            case 'bottomRight':\n                width = resizeEvent.clientX - elRect.left;\n                height = resizeEvent.clientY - elRect.top;\n                break;\n            case 'bottomLeft':\n                width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n                height = resizeEvent.clientY - elRect.top;\n                break;\n            case 'topRight':\n                width = resizeEvent.clientX - elRect.left;\n                height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n                break;\n            case 'topLeft':\n                width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n                height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n                break;\n            case 'top':\n                height = elRect.height + handleEvent.clientY - resizeEvent.clientY;\n                break;\n            case 'right':\n                width = resizeEvent.clientX - elRect.left;\n                break;\n            case 'bottom':\n                height = resizeEvent.clientY - elRect.top;\n                break;\n            case 'left':\n                width = elRect.width + handleEvent.clientX - resizeEvent.clientX;\n        }\n        const size = this.calcSize(width, height, ratio);\n        this.sizeCache = Object.assign({}, size);\n        // Re-enter the Angular zone and run the change detection only if there're any `nzResize` listeners,\n        // e.g.: `<div nz-resizable (nzResize)=\"...\"></div>`.\n        if (this.nzResize.observers.length) {\n            this.ngZone.run(() => {\n                this.nzResize.emit(Object.assign(Object.assign({}, size), { mouseEvent: event }));\n            });\n        }\n        if (this.nzPreview) {\n            this.previewResize(size);\n        }\n    }\n    endResize(event) {\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(document.body, 'user-select', '');\n        this.removeGhostElement();\n        const size = this.sizeCache\n            ? Object.assign({}, this.sizeCache) : {\n            width: this.elRect.width,\n            height: this.elRect.height\n        };\n        // Re-enter the Angular zone and run the change detection only if there're any `nzResizeEnd` listeners,\n        // e.g.: `<div nz-resizable (nzResizeEnd)=\"...\"></div>`.\n        if (this.nzResizeEnd.observers.length) {\n            this.ngZone.run(() => {\n                this.nzResizeEnd.emit(Object.assign(Object.assign({}, size), { mouseEvent: event }));\n            });\n        }\n        this.sizeCache = null;\n        this.currentHandleEvent = null;\n    }\n    previewResize({ width, height }) {\n        this.createGhostElement();\n        this.renderer.setStyle(this.ghostElement, 'width', `${width}px`);\n        this.renderer.setStyle(this.ghostElement, 'height', `${height}px`);\n    }\n    createGhostElement() {\n        if (!this.ghostElement) {\n            this.ghostElement = this.renderer.createElement('div');\n            this.renderer.setAttribute(this.ghostElement, 'class', 'nz-resizable-preview');\n        }\n        this.renderer.appendChild(this.el, this.ghostElement);\n    }\n    removeGhostElement() {\n        if (this.ghostElement) {\n            this.renderer.removeChild(this.el, this.ghostElement);\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.platform.isBrowser) {\n            return;\n        }\n        this.el = this.elementRef.nativeElement;\n        this.setPosition();\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.el, 'mouseenter')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.nzResizableService.mouseEntered$.next(true);\n            });\n            fromEvent(this.el, 'mouseleave')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.nzResizableService.mouseEntered$.next(false);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.ghostElement = null;\n        this.sizeCache = null;\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzResizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NzResizableService }, { token: i2.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nNzResizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzResizableDirective, selector: \"[nz-resizable]\", inputs: { nzBounds: \"nzBounds\", nzMaxHeight: \"nzMaxHeight\", nzMaxWidth: \"nzMaxWidth\", nzMinHeight: \"nzMinHeight\", nzMinWidth: \"nzMinWidth\", nzGridColumnCount: \"nzGridColumnCount\", nzMaxColumn: \"nzMaxColumn\", nzMinColumn: \"nzMinColumn\", nzLockAspectRatio: \"nzLockAspectRatio\", nzPreview: \"nzPreview\", nzDisabled: \"nzDisabled\" }, outputs: { nzResize: \"nzResize\", nzResizeEnd: \"nzResizeEnd\", nzResizeStart: \"nzResizeStart\" }, host: { properties: { \"class.nz-resizable-resizing\": \"resizing\", \"class.nz-resizable-disabled\": \"nzDisabled\" }, classAttribute: \"nz-resizable\" }, providers: [NzResizableService], exportAs: [\"nzResizable\"], ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzResizableDirective.prototype, \"nzLockAspectRatio\", void 0);\n__decorate([\n    InputBoolean()\n], NzResizableDirective.prototype, \"nzPreview\", void 0);\n__decorate([\n    InputBoolean()\n], NzResizableDirective.prototype, \"nzDisabled\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-resizable]',\n                    exportAs: 'nzResizable',\n                    providers: [NzResizableService],\n                    host: {\n                        class: 'nz-resizable',\n                        '[class.nz-resizable-resizing]': 'resizing',\n                        '[class.nz-resizable-disabled]': 'nzDisabled'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NzResizableService }, { type: i2.Platform }, { type: i0.NgZone }]; }, propDecorators: { nzBounds: [{\n                type: Input\n            }], nzMaxHeight: [{\n                type: Input\n            }], nzMaxWidth: [{\n                type: Input\n            }], nzMinHeight: [{\n                type: Input\n            }], nzMinWidth: [{\n                type: Input\n            }], nzGridColumnCount: [{\n                type: Input\n            }], nzMaxColumn: [{\n                type: Input\n            }], nzMinColumn: [{\n                type: Input\n            }], nzLockAspectRatio: [{\n                type: Input\n            }], nzPreview: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzResize: [{\n                type: Output\n            }], nzResizeEnd: [{\n                type: Output\n            }], nzResizeStart: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizeHandleMouseDownEvent {\n    constructor(direction, mouseEvent) {\n        this.direction = direction;\n        this.mouseEvent = mouseEvent;\n    }\n}\nclass NzResizeHandleComponent {\n    constructor(nzResizableService, renderer, elementRef) {\n        this.nzResizableService = nzResizableService;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nzDirection = 'bottomRight';\n        this.nzMouseDown = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        // Caretaker note: `mouseEntered$` subject will emit events within the `<root>` zone,\n        // see `NzResizableDirective#ngAfterViewInit`. There're event listeners are added within the `<root>` zone.\n        this.nzResizableService.mouseEntered$.pipe(takeUntil(this.destroy$)).subscribe(entered => {\n            if (entered) {\n                this.renderer.addClass(this.elementRef.nativeElement, 'nz-resizable-handle-box-hover');\n            }\n            else {\n                this.renderer.removeClass(this.elementRef.nativeElement, 'nz-resizable-handle-box-hover');\n            }\n        });\n    }\n    onMousedown(event) {\n        this.nzResizableService.handleMouseDown$.next(new NzResizeHandleMouseDownEvent(this.nzDirection, event));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzResizeHandleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizeHandleComponent, deps: [{ token: NzResizableService }, { token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNzResizeHandleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzResizeHandleComponent, selector: \"nz-resize-handle, [nz-resize-handle]\", inputs: { nzDirection: \"nzDirection\" }, outputs: { nzMouseDown: \"nzMouseDown\" }, host: { listeners: { \"mousedown\": \"onMousedown($event)\", \"touchstart\": \"onMousedown($event)\" }, properties: { \"class.nz-resizable-handle-top\": \"nzDirection === 'top'\", \"class.nz-resizable-handle-right\": \"nzDirection === 'right'\", \"class.nz-resizable-handle-bottom\": \"nzDirection === 'bottom'\", \"class.nz-resizable-handle-left\": \"nzDirection === 'left'\", \"class.nz-resizable-handle-topRight\": \"nzDirection === 'topRight'\", \"class.nz-resizable-handle-bottomRight\": \"nzDirection === 'bottomRight'\", \"class.nz-resizable-handle-bottomLeft\": \"nzDirection === 'bottomLeft'\", \"class.nz-resizable-handle-topLeft\": \"nzDirection === 'topLeft'\" }, classAttribute: \"nz-resizable-handle\" }, exportAs: [\"nzResizeHandle\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizeHandleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-resize-handle, [nz-resize-handle]',\n                    exportAs: 'nzResizeHandle',\n                    template: ` <ng-content></ng-content> `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'nz-resizable-handle',\n                        '[class.nz-resizable-handle-top]': `nzDirection === 'top'`,\n                        '[class.nz-resizable-handle-right]': `nzDirection === 'right'`,\n                        '[class.nz-resizable-handle-bottom]': `nzDirection === 'bottom'`,\n                        '[class.nz-resizable-handle-left]': `nzDirection === 'left'`,\n                        '[class.nz-resizable-handle-topRight]': `nzDirection === 'topRight'`,\n                        '[class.nz-resizable-handle-bottomRight]': `nzDirection === 'bottomRight'`,\n                        '[class.nz-resizable-handle-bottomLeft]': `nzDirection === 'bottomLeft'`,\n                        '[class.nz-resizable-handle-topLeft]': `nzDirection === 'topLeft'`,\n                        '(mousedown)': 'onMousedown($event)',\n                        '(touchstart)': 'onMousedown($event)'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: NzResizableService }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzDirection: [{\n                type: Input\n            }], nzMouseDown: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst DEFAULT_RESIZE_DIRECTION = [\n    'bottomRight',\n    'topRight',\n    'bottomLeft',\n    'topLeft',\n    'bottom',\n    'right',\n    'top',\n    'left'\n];\nclass NzResizeHandlesComponent {\n    constructor() {\n        this.nzDirections = DEFAULT_RESIZE_DIRECTION;\n        this.directions = new Set(this.nzDirections);\n    }\n    ngOnChanges(changes) {\n        if (changes.nzDirections) {\n            this.directions = new Set(changes.nzDirections.currentValue);\n        }\n    }\n}\nNzResizeHandlesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizeHandlesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzResizeHandlesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzResizeHandlesComponent, selector: \"nz-resize-handles\", inputs: { nzDirections: \"nzDirections\" }, exportAs: [\"nzResizeHandles\"], usesOnChanges: true, ngImport: i0, template: ` <nz-resize-handle *ngFor=\"let dir of directions\" [nzDirection]=\"dir\"></nz-resize-handle> `, isInline: true, components: [{ type: NzResizeHandleComponent, selector: \"nz-resize-handle, [nz-resize-handle]\", inputs: [\"nzDirection\"], outputs: [\"nzMouseDown\"], exportAs: [\"nzResizeHandle\"] }], directives: [{ type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizeHandlesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-resize-handles',\n                    exportAs: 'nzResizeHandles',\n                    template: ` <nz-resize-handle *ngFor=\"let dir of directions\" [nzDirection]=\"dir\"></nz-resize-handle> `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzDirections: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzResizableModule {\n}\nNzResizableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzResizableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableModule, declarations: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent], imports: [CommonModule], exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent] });\nNzResizableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzResizableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent],\n                    exports: [NzResizableDirective, NzResizeHandleComponent, NzResizeHandlesComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_RESIZE_DIRECTION, NzResizableDirective, NzResizableModule, NzResizableService, NzResizeHandleComponent, NzResizeHandleMouseDownEvent, NzResizeHandlesComponent, getEventWithPoint };\n"]},"metadata":{},"sourceType":"module"}