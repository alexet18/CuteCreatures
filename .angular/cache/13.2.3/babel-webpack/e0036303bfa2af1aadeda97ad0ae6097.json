{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Regular Expressions for parsing tags and attributes\n\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g; // ! to ~ is the ASCII range.\n\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\n\nfunction encodeEntities(value) {\n  return value.replace(/&/g, '&amp;').replace(SURROGATE_PAIR_REGEXP, match => {\n    const hi = match.charCodeAt(0);\n    const low = match.charCodeAt(1);\n    return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;\n  }).replace(NON_ALPHANUMERIC_REGEXP, match => `&#${match.charCodeAt(0)};`).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nlet NzHighlightPipe = /*#__PURE__*/(() => {\n  class NzHighlightPipe {\n    constructor() {\n      this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];\n    }\n\n    transform(value, highlightValue, flags, klass) {\n      if (!highlightValue) {\n        return value;\n      } // Escapes regex keyword to interpret these characters literally\n\n\n      const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n      const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n      return encodeEntities(wrapValue).replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>').replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n    }\n\n  }\n\n  NzHighlightPipe.ɵfac = function NzHighlightPipe_Factory(t) {\n    return new (t || NzHighlightPipe)();\n  };\n\n  NzHighlightPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"nzHighlight\",\n    type: NzHighlightPipe,\n    pure: true\n  });\n  return NzHighlightPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzHighlightModule = /*#__PURE__*/(() => {\n  class NzHighlightModule {}\n\n  NzHighlightModule.ɵfac = function NzHighlightModule_Factory(t) {\n    return new (t || NzHighlightModule)();\n  };\n\n  NzHighlightModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzHighlightModule\n  });\n  NzHighlightModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NzHighlightModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzHighlightModule, NzHighlightPipe }; //# sourceMappingURL=ng-zorro-antd-core-highlight.mjs.map","map":null,"metadata":{},"sourceType":"module"}