{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Optional, Input, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, ReplaySubject, timer } from 'rxjs';\nimport { startWith, distinctUntilChanged, switchMap, debounce, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nfunction NzSpinComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵelement(1, \"i\", 4);\n    i0.ɵɵelement(2, \"i\", 4);\n    i0.ɵɵelement(3, \"i\", 4);\n    i0.ɵɵelement(4, \"i\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzSpinComponent_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzSpinComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.nzTip);\n  }\n}\n\nfunction NzSpinComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtemplate(2, NzSpinComponent_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵtemplate(3, NzSpinComponent_div_2_div_3_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ant-spin-rtl\", ctx_r2.dir === \"rtl\")(\"ant-spin-spinning\", ctx_r2.isLoading)(\"ant-spin-lg\", ctx_r2.nzSize === \"large\")(\"ant-spin-sm\", ctx_r2.nzSize === \"small\")(\"ant-spin-show-text\", ctx_r2.nzTip);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.nzIndicator || _r0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nzTip);\n  }\n}\n\nfunction NzSpinComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-spin-blur\", ctx_r3.isLoading);\n  }\n}\n\nconst _c0 = [\"*\"];\nconst NZ_CONFIG_MODULE_NAME = 'spin';\n\nclass NzSpinComponent {\n  constructor(nzConfigService, cdr, directionality) {\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzIndicator = null;\n    this.nzSize = 'default';\n    this.nzTip = null;\n    this.nzDelay = 0;\n    this.nzSimple = false;\n    this.nzSpinning = true;\n    this.destroy$ = new Subject();\n    this.spinning$ = new BehaviorSubject(this.nzSpinning);\n    this.delay$ = new ReplaySubject(1);\n    this.isLoading = false;\n    this.dir = 'ltr';\n  }\n\n  ngOnInit() {\n    var _a;\n\n    const loading$ = this.delay$.pipe(startWith(this.nzDelay), distinctUntilChanged(), switchMap(delay => {\n      if (delay === 0) {\n        return this.spinning$;\n      }\n\n      return this.spinning$.pipe(debounce(spinning => timer(spinning ? delay : 0)));\n    }), takeUntil(this.destroy$));\n    loading$.subscribe(loading => {\n      this.isLoading = loading;\n      this.cdr.markForCheck();\n    });\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => this.cdr.markForCheck());\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n\n  ngOnChanges(changes) {\n    const {\n      nzSpinning,\n      nzDelay\n    } = changes;\n\n    if (nzSpinning) {\n      this.spinning$.next(this.nzSpinning);\n    }\n\n    if (nzDelay) {\n      this.delay$.next(this.nzDelay);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzSpinComponent.ɵfac = function NzSpinComponent_Factory(t) {\n  return new (t || NzSpinComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n};\n\nNzSpinComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSpinComponent,\n  selectors: [[\"nz-spin\"]],\n  hostVars: 2,\n  hostBindings: function NzSpinComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-spin-nested-loading\", !ctx.nzSimple);\n    }\n  },\n  inputs: {\n    nzIndicator: \"nzIndicator\",\n    nzSize: \"nzSize\",\n    nzTip: \"nzTip\",\n    nzDelay: \"nzDelay\",\n    nzSimple: \"nzSimple\",\n    nzSpinning: \"nzSpinning\"\n  },\n  exportAs: [\"nzSpin\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 2,\n  consts: [[\"defaultTemplate\", \"\"], [4, \"ngIf\"], [\"class\", \"ant-spin-container\", 3, \"ant-spin-blur\", 4, \"ngIf\"], [1, \"ant-spin-dot\", \"ant-spin-dot-spin\"], [1, \"ant-spin-dot-item\"], [1, \"ant-spin\"], [3, \"ngTemplateOutlet\"], [\"class\", \"ant-spin-text\", 4, \"ngIf\"], [1, \"ant-spin-text\"], [1, \"ant-spin-container\"]],\n  template: function NzSpinComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzSpinComponent_ng_template_0_Template, 5, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NzSpinComponent_div_2_Template, 4, 12, \"div\", 1);\n      i0.ɵɵtemplate(3, NzSpinComponent_div_3_Template, 2, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nzSimple);\n    }\n  },\n  directives: [i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n__decorate([WithConfig()], NzSpinComponent.prototype, \"nzIndicator\", void 0);\n\n__decorate([InputNumber()], NzSpinComponent.prototype, \"nzDelay\", void 0);\n\n__decorate([InputBoolean()], NzSpinComponent.prototype, \"nzSimple\", void 0);\n\n__decorate([InputBoolean()], NzSpinComponent.prototype, \"nzSpinning\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-spin',\n      exportAs: 'nzSpin',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    <div *ngIf=\"isLoading\">\n      <div\n        class=\"ant-spin\"\n        [class.ant-spin-rtl]=\"dir === 'rtl'\"\n        [class.ant-spin-spinning]=\"isLoading\"\n        [class.ant-spin-lg]=\"nzSize === 'large'\"\n        [class.ant-spin-sm]=\"nzSize === 'small'\"\n        [class.ant-spin-show-text]=\"nzTip\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n        <div class=\"ant-spin-text\" *ngIf=\"nzTip\">{{ nzTip }}</div>\n      </div>\n    </div>\n    <div *ngIf=\"!nzSimple\" class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        '[class.ant-spin-nested-loading]': '!nzSimple'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzIndicator: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzTip: [{\n      type: Input\n    }],\n    nzDelay: [{\n      type: Input\n    }],\n    nzSimple: [{\n      type: Input\n    }],\n    nzSpinning: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzSpinModule {}\n\nNzSpinModule.ɵfac = function NzSpinModule_Factory(t) {\n  return new (t || NzSpinModule)();\n};\n\nNzSpinModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSpinModule\n});\nNzSpinModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, ObserversModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSpinComponent],\n      declarations: [NzSpinComponent],\n      imports: [BidiModule, CommonModule, ObserversModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSpinComponent, NzSpinModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-spin.mjs"],"names":["__decorate","i0","Component","ViewEncapsulation","Optional","Input","NgModule","Subject","BehaviorSubject","ReplaySubject","timer","startWith","distinctUntilChanged","switchMap","debounce","takeUntil","i1","WithConfig","InputNumber","InputBoolean","i2","BidiModule","i3","CommonModule","ObserversModule","NZ_CONFIG_MODULE_NAME","NzSpinComponent","constructor","nzConfigService","cdr","directionality","_nzModuleName","nzIndicator","nzSize","nzTip","nzDelay","nzSimple","nzSpinning","destroy$","spinning$","delay$","isLoading","dir","ngOnInit","_a","loading$","pipe","delay","spinning","subscribe","loading","markForCheck","getConfigChangeEventForComponent","change","direction","detectChanges","value","ngOnChanges","changes","next","ngOnDestroy","complete","ɵfac","NzConfigService","ChangeDetectorRef","Directionality","ɵcmp","NgIf","NgTemplateOutlet","prototype","type","args","selector","exportAs","preserveWhitespaces","encapsulation","None","template","host","decorators","NzSpinModule","ɵmod","ɵinj","exports","declarations","imports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Optional, Input, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, ReplaySubject, timer } from 'rxjs';\nimport { startWith, distinctUntilChanged, switchMap, debounce, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nconst NZ_CONFIG_MODULE_NAME = 'spin';\nclass NzSpinComponent {\n    constructor(nzConfigService, cdr, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzIndicator = null;\n        this.nzSize = 'default';\n        this.nzTip = null;\n        this.nzDelay = 0;\n        this.nzSimple = false;\n        this.nzSpinning = true;\n        this.destroy$ = new Subject();\n        this.spinning$ = new BehaviorSubject(this.nzSpinning);\n        this.delay$ = new ReplaySubject(1);\n        this.isLoading = false;\n        this.dir = 'ltr';\n    }\n    ngOnInit() {\n        var _a;\n        const loading$ = this.delay$.pipe(startWith(this.nzDelay), distinctUntilChanged(), switchMap(delay => {\n            if (delay === 0) {\n                return this.spinning$;\n            }\n            return this.spinning$.pipe(debounce(spinning => timer(spinning ? delay : 0)));\n        }), takeUntil(this.destroy$));\n        loading$.subscribe(loading => {\n            this.isLoading = loading;\n            this.cdr.markForCheck();\n        });\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.cdr.markForCheck());\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzSpinning, nzDelay } = changes;\n        if (nzSpinning) {\n            this.spinning$.next(this.nzSpinning);\n        }\n        if (nzDelay) {\n            this.delay$.next(this.nzDelay);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzSpinComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSpinComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzSpinComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzSpinComponent, selector: \"nz-spin\", inputs: { nzIndicator: \"nzIndicator\", nzSize: \"nzSize\", nzTip: \"nzTip\", nzDelay: \"nzDelay\", nzSimple: \"nzSimple\", nzSpinning: \"nzSpinning\" }, host: { properties: { \"class.ant-spin-nested-loading\": \"!nzSimple\" } }, exportAs: [\"nzSpin\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    <div *ngIf=\"isLoading\">\n      <div\n        class=\"ant-spin\"\n        [class.ant-spin-rtl]=\"dir === 'rtl'\"\n        [class.ant-spin-spinning]=\"isLoading\"\n        [class.ant-spin-lg]=\"nzSize === 'large'\"\n        [class.ant-spin-sm]=\"nzSize === 'small'\"\n        [class.ant-spin-show-text]=\"nzTip\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n        <div class=\"ant-spin-text\" *ngIf=\"nzTip\">{{ nzTip }}</div>\n      </div>\n    </div>\n    <div *ngIf=\"!nzSimple\" class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    WithConfig()\n], NzSpinComponent.prototype, \"nzIndicator\", void 0);\n__decorate([\n    InputNumber()\n], NzSpinComponent.prototype, \"nzDelay\", void 0);\n__decorate([\n    InputBoolean()\n], NzSpinComponent.prototype, \"nzSimple\", void 0);\n__decorate([\n    InputBoolean()\n], NzSpinComponent.prototype, \"nzSpinning\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSpinComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-spin',\n                    exportAs: 'nzSpin',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    <div *ngIf=\"isLoading\">\n      <div\n        class=\"ant-spin\"\n        [class.ant-spin-rtl]=\"dir === 'rtl'\"\n        [class.ant-spin-spinning]=\"isLoading\"\n        [class.ant-spin-lg]=\"nzSize === 'large'\"\n        [class.ant-spin-sm]=\"nzSize === 'small'\"\n        [class.ant-spin-show-text]=\"nzTip\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n        <div class=\"ant-spin-text\" *ngIf=\"nzTip\">{{ nzTip }}</div>\n      </div>\n    </div>\n    <div *ngIf=\"!nzSimple\" class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                    host: {\n                        '[class.ant-spin-nested-loading]': '!nzSimple'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.NzConfigService }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzIndicator: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzTip: [{\n                type: Input\n            }], nzDelay: [{\n                type: Input\n            }], nzSimple: [{\n                type: Input\n            }], nzSpinning: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpinModule {\n}\nNzSpinModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSpinModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzSpinModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSpinModule, declarations: [NzSpinComponent], imports: [BidiModule, CommonModule, ObserversModule], exports: [NzSpinComponent] });\nNzSpinModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSpinModule, imports: [[BidiModule, CommonModule, ObserversModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzSpinModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [NzSpinComponent],\n                    declarations: [NzSpinComponent],\n                    imports: [BidiModule, CommonModule, ObserversModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpinComponent, NzSpinModule };\n"]},"metadata":{},"sourceType":"module"}