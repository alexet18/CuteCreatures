{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Regular Expressions for parsing tags and attributes\n\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g; // ! to ~ is the ASCII range.\n\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\n\nfunction encodeEntities(value) {\n  return value.replace(/&/g, '&amp;').replace(SURROGATE_PAIR_REGEXP, match => {\n    const hi = match.charCodeAt(0);\n    const low = match.charCodeAt(1);\n    return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;\n  }).replace(NON_ALPHANUMERIC_REGEXP, match => `&#${match.charCodeAt(0)};`).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nclass NzHighlightPipe {\n  constructor() {\n    this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];\n  }\n\n  transform(value, highlightValue, flags, klass) {\n    if (!highlightValue) {\n      return value;\n    } // Escapes regex keyword to interpret these characters literally\n\n\n    const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n    const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n    return encodeEntities(wrapValue).replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>').replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n  }\n\n}\n\nNzHighlightPipe.ɵfac = function NzHighlightPipe_Factory(t) {\n  return new (t || NzHighlightPipe)();\n};\n\nNzHighlightPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"nzHighlight\",\n  type: NzHighlightPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzHighlightPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzHighlight',\n      pure: true\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzHighlightModule {}\n\nNzHighlightModule.ɵfac = function NzHighlightModule_Factory(t) {\n  return new (t || NzHighlightModule)();\n};\n\nNzHighlightModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzHighlightModule\n});\nNzHighlightModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzHighlightModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [NzHighlightPipe],\n      declarations: [NzHighlightPipe]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzHighlightModule, NzHighlightPipe };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-core-highlight.mjs"],"names":["i0","Pipe","NgModule","CommonModule","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","encodeEntities","value","replace","match","hi","charCodeAt","low","NzHighlightPipe","constructor","UNIQUE_WRAPPERS","transform","highlightValue","flags","klass","searchValue","RegExp","wrapValue","ɵfac","ɵpipe","type","args","name","pure","NzHighlightModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\nfunction encodeEntities(value) {\n    return value\n        .replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, (match) => {\n        const hi = match.charCodeAt(0);\n        const low = match.charCodeAt(1);\n        return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, (match) => `&#${match.charCodeAt(0)};`)\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nclass NzHighlightPipe {\n    constructor() {\n        this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];\n    }\n    transform(value, highlightValue, flags, klass) {\n        if (!highlightValue) {\n            return value;\n        }\n        // Escapes regex keyword to interpret these characters literally\n        const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n        const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n        return encodeEntities(wrapValue)\n            .replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>')\n            .replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n    }\n}\nNzHighlightPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nNzHighlightPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightPipe, name: \"nzHighlight\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'nzHighlight',\n                    pure: true\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzHighlightModule {\n}\nNzHighlightModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzHighlightModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightModule, declarations: [NzHighlightPipe], imports: [CommonModule], exports: [NzHighlightPipe] });\nNzHighlightModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzHighlightModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [NzHighlightPipe],\n                    declarations: [NzHighlightPipe]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzHighlightModule, NzHighlightPipe };\n"]},"metadata":{},"sourceType":"module"}