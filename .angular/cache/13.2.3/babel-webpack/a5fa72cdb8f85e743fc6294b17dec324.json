{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Optional, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate } from 'tslib';\nimport { Router, ActivatedRoute, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, startWith } from 'rxjs/operators';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * https://angular.io/errors/NG3003\n * An intermediate interface for {@link NzBreadCrumbComponent} & {@link NzBreadCrumbItemComponent}\n */\n\nfunction NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NzBreadCrumbItemComponent_ng_container_0_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 6);\n  }\n}\n\nfunction NzBreadCrumbItemComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtemplate(2, NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, NzBreadCrumbItemComponent_ng_container_0_i_3_Template, 1, 0, \"i\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzDropdownMenu\", ctx_r0.nzOverlay);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzOverlay);\n  }\n}\n\nfunction NzBreadCrumbItemComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzBreadCrumbItemComponent_span_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.nzBreadCrumbComponent.nzSeparator, \" \");\n  }\n}\n\nfunction NzBreadCrumbItemComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzBreadCrumbItemComponent_span_3_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r3.nzBreadCrumbComponent.nzSeparator);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-breadcrumb-item\");\n    i0.ɵɵelementStart(1, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template_a_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const breadcrumb_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.navigate(breadcrumb_r2.url, $event);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const breadcrumb_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", breadcrumb_r2.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(breadcrumb_r2.label);\n  }\n}\n\nfunction NzBreadCrumbComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template, 3, 2, \"nz-breadcrumb-item\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.breadcrumbs);\n  }\n}\n\nclass NzBreadcrumb {}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzBreadCrumbItemComponent {\n  constructor(nzBreadCrumbComponent) {\n    this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n  }\n\n}\n\nNzBreadCrumbItemComponent.ɵfac = function NzBreadCrumbItemComponent_Factory(t) {\n  return new (t || NzBreadCrumbItemComponent)(i0.ɵɵdirectiveInject(NzBreadcrumb));\n};\n\nNzBreadCrumbItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbItemComponent,\n  selectors: [[\"nz-breadcrumb-item\"]],\n  inputs: {\n    nzOverlay: \"nzOverlay\"\n  },\n  exportAs: [\"nzBreadcrumbItem\"],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noMenuTpl\", \"\"], [\"class\", \"ant-breadcrumb-separator\", 4, \"ngIf\"], [\"nz-dropdown\", \"\", 1, \"ant-breadcrumb-overlay-link\", 3, \"nzDropdownMenu\"], [3, \"ngTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [1, \"ant-breadcrumb-link\"], [1, \"ant-breadcrumb-separator\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzBreadCrumbItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzBreadCrumbItemComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzBreadCrumbItemComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzBreadCrumbItemComponent_span_3_Template, 2, 1, \"span\", 2);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", !!ctx.nzOverlay)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzBreadCrumbComponent.nzSeparator);\n    }\n  },\n  directives: [i2.NgIf, i3.NzDropDownDirective, i2.NgTemplateOutlet, i4.NzIconDirective, i5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbItemComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-breadcrumb-item',\n      exportAs: 'nzBreadcrumbItem',\n      preserveWhitespaces: false,\n      template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <i *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></i>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NzBreadcrumb\n    }];\n  }, {\n    nzOverlay: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzBreadCrumbComponent {\n  constructor(injector, cdr, elementRef, renderer, directionality) {\n    this.injector = injector;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.directionality = directionality;\n    this.nzAutoGenerate = false;\n    this.nzSeparator = '/';\n    this.nzRouteLabel = 'breadcrumb';\n\n    this.nzRouteLabelFn = label => label;\n\n    this.breadcrumbs = [];\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n\n  ngOnInit() {\n    var _a;\n\n    if (this.nzAutoGenerate) {\n      this.registerRouterChange();\n    }\n\n    (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.prepareComponentForRtl();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.prepareComponentForRtl();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigate(url, e) {\n    e.preventDefault();\n    this.injector.get(Router).navigateByUrl(url);\n  }\n\n  registerRouterChange() {\n    try {\n      const router = this.injector.get(Router);\n      const activatedRoute = this.injector.get(ActivatedRoute);\n      router.events.pipe(filter(e => e instanceof NavigationEnd), takeUntil(this.destroy$), startWith(true) // trigger initial render\n      ).subscribe(() => {\n        this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n        this.cdr.markForCheck();\n      });\n    } catch (e) {\n      throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n    }\n  }\n\n  getBreadcrumbs(route, url = '', breadcrumbs = []) {\n    const children = route.children; // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      if (child.outlet === PRIMARY_OUTLET) {\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n        // Parse this layer and generate a breadcrumb item.\n        const routeUrl = child.snapshot.url.map(segment => segment.path).filter(path => path).join('/'); // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\n\n        const nextUrl = routeUrl ? `${url}/${routeUrl}` : url;\n        const breadcrumbLabel = this.nzRouteLabelFn(child.snapshot.data[this.nzRouteLabel]); // If have data, go to generate a breadcrumb for it.\n\n        if (routeUrl && breadcrumbLabel) {\n          const breadcrumb = {\n            label: breadcrumbLabel,\n            params: child.snapshot.params,\n            url: nextUrl\n          };\n          breadcrumbs.push(breadcrumb);\n        }\n\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n      }\n    }\n\n    return breadcrumbs;\n  }\n\n  prepareComponentForRtl() {\n    if (this.dir === 'rtl') {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n    }\n  }\n\n}\n\nNzBreadCrumbComponent.ɵfac = function NzBreadCrumbComponent_Factory(t) {\n  return new (t || NzBreadCrumbComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzBreadCrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbComponent,\n  selectors: [[\"nz-breadcrumb\"]],\n  inputs: {\n    nzAutoGenerate: \"nzAutoGenerate\",\n    nzSeparator: \"nzSeparator\",\n    nzRouteLabel: \"nzRouteLabel\",\n    nzRouteLabelFn: \"nzRouteLabelFn\"\n  },\n  exportAs: [\"nzBreadcrumb\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NzBreadcrumb,\n    useExisting: NzBreadCrumbComponent\n  }])],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function NzBreadCrumbComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzAutoGenerate && ctx.breadcrumbs.length);\n    }\n  },\n  directives: [NzBreadCrumbItemComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzBreadCrumbComponent.prototype, \"nzAutoGenerate\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-breadcrumb',\n      exportAs: 'nzBreadcrumb',\n      preserveWhitespaces: false,\n      providers: [{\n        provide: NzBreadcrumb,\n        useExisting: NzBreadCrumbComponent\n      }],\n      template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzAutoGenerate: [{\n      type: Input\n    }],\n    nzSeparator: [{\n      type: Input\n    }],\n    nzRouteLabel: [{\n      type: Input\n    }],\n    nzRouteLabelFn: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzBreadCrumbSeparatorComponent {}\n\nNzBreadCrumbSeparatorComponent.ɵfac = function NzBreadCrumbSeparatorComponent_Factory(t) {\n  return new (t || NzBreadCrumbSeparatorComponent)();\n};\n\nNzBreadCrumbSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbSeparatorComponent,\n  selectors: [[\"nz-breadcrumb-separator\"]],\n  exportAs: [\"nzBreadcrumbSeparator\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"ant-breadcrumb-separator\"]],\n  template: function NzBreadCrumbSeparatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbSeparatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-breadcrumb-separator',\n      exportAs: 'nzBreadcrumbSeparator',\n      template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzBreadCrumbModule {}\n\nNzBreadCrumbModule.ɵfac = function NzBreadCrumbModule_Factory(t) {\n  return new (t || NzBreadCrumbModule)();\n};\n\nNzBreadCrumbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzBreadCrumbModule\n});\nNzBreadCrumbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule], BidiModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n      declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n      exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbModule, NzBreadCrumbSeparatorComponent };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-breadcrumb.mjs"],"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Optional","NgModule","i2","CommonModule","i3","NzDropDownModule","i4","NzIconModule","i5","NzOutletModule","__decorate","Router","ActivatedRoute","NavigationEnd","PRIMARY_OUTLET","Subject","takeUntil","filter","startWith","PREFIX","InputBoolean","i1","BidiModule","OverlayModule","NzOverlayModule","NzBreadcrumb","NzBreadCrumbItemComponent","constructor","nzBreadCrumbComponent","ɵfac","ɵcmp","NgIf","NzDropDownDirective","NgTemplateOutlet","NzIconDirective","NzStringTemplateOutletDirective","type","args","changeDetection","OnPush","encapsulation","None","selector","exportAs","preserveWhitespaces","template","nzOverlay","NzBreadCrumbComponent","injector","cdr","elementRef","renderer","directionality","nzAutoGenerate","nzSeparator","nzRouteLabel","nzRouteLabelFn","label","breadcrumbs","dir","destroy$","addClass","nativeElement","ngOnInit","_a","registerRouterChange","change","pipe","subscribe","direction","prepareComponentForRtl","detectChanges","value","ngOnDestroy","next","complete","navigate","url","e","preventDefault","get","navigateByUrl","router","activatedRoute","events","getBreadcrumbs","root","markForCheck","Error","route","children","length","child","outlet","routeUrl","snapshot","map","segment","path","join","nextUrl","breadcrumbLabel","data","breadcrumb","params","push","removeClass","Injector","ChangeDetectorRef","ElementRef","Renderer2","Directionality","provide","useExisting","NgForOf","prototype","providers","decorators","NzBreadCrumbSeparatorComponent","NzBreadCrumbModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Optional, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate } from 'tslib';\nimport { Router, ActivatedRoute, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, startWith } from 'rxjs/operators';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * https://angular.io/errors/NG3003\n * An intermediate interface for {@link NzBreadCrumbComponent} & {@link NzBreadCrumbItemComponent}\n */\nclass NzBreadcrumb {\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbItemComponent {\n    constructor(nzBreadCrumbComponent) {\n        this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n    }\n}\nNzBreadCrumbItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbItemComponent, deps: [{ token: NzBreadcrumb }], target: i0.ɵɵFactoryTarget.Component });\nNzBreadCrumbItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzBreadCrumbItemComponent, selector: \"nz-breadcrumb-item\", inputs: { nzOverlay: \"nzOverlay\" }, exportAs: [\"nzBreadcrumbItem\"], ngImport: i0, template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <i *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></i>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NzDropDownDirective, selector: \"[nz-dropdown]\", inputs: [\"nzDropdownMenu\", \"nzTrigger\", \"nzMatchWidthElement\", \"nzBackdrop\", \"nzClickHide\", \"nzDisabled\", \"nzVisible\", \"nzOverlayClassName\", \"nzOverlayStyle\", \"nzPlacement\"], outputs: [\"nzVisibleChange\"], exportAs: [\"nzDropdown\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i5.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-breadcrumb-item',\n                    exportAs: 'nzBreadcrumbItem',\n                    preserveWhitespaces: false,\n                    template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <i *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></i>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: NzBreadcrumb }]; }, propDecorators: { nzOverlay: [{\n                type: Input\n            }] } });\n\nclass NzBreadCrumbComponent {\n    constructor(injector, cdr, elementRef, renderer, directionality) {\n        this.injector = injector;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.directionality = directionality;\n        this.nzAutoGenerate = false;\n        this.nzSeparator = '/';\n        this.nzRouteLabel = 'breadcrumb';\n        this.nzRouteLabelFn = label => label;\n        this.breadcrumbs = [];\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n    }\n    ngOnInit() {\n        var _a;\n        if (this.nzAutoGenerate) {\n            this.registerRouterChange();\n        }\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareComponentForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareComponentForRtl();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    navigate(url, e) {\n        e.preventDefault();\n        this.injector.get(Router).navigateByUrl(url);\n    }\n    registerRouterChange() {\n        try {\n            const router = this.injector.get(Router);\n            const activatedRoute = this.injector.get(ActivatedRoute);\n            router.events\n                .pipe(filter(e => e instanceof NavigationEnd), takeUntil(this.destroy$), startWith(true) // trigger initial render\n            )\n                .subscribe(() => {\n                this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n                this.cdr.markForCheck();\n            });\n        }\n        catch (e) {\n            throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n        }\n    }\n    getBreadcrumbs(route, url = '', breadcrumbs = []) {\n        const children = route.children;\n        // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n        if (children.length === 0) {\n            return breadcrumbs;\n        }\n        for (const child of children) {\n            if (child.outlet === PRIMARY_OUTLET) {\n                // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n                // Parse this layer and generate a breadcrumb item.\n                const routeUrl = child.snapshot.url\n                    .map(segment => segment.path)\n                    .filter(path => path)\n                    .join('/');\n                // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\n                const nextUrl = routeUrl ? `${url}/${routeUrl}` : url;\n                const breadcrumbLabel = this.nzRouteLabelFn(child.snapshot.data[this.nzRouteLabel]);\n                // If have data, go to generate a breadcrumb for it.\n                if (routeUrl && breadcrumbLabel) {\n                    const breadcrumb = {\n                        label: breadcrumbLabel,\n                        params: child.snapshot.params,\n                        url: nextUrl\n                    };\n                    breadcrumbs.push(breadcrumb);\n                }\n                return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n            }\n        }\n        return breadcrumbs;\n    }\n    prepareComponentForRtl() {\n        if (this.dir === 'rtl') {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n        }\n    }\n}\nNzBreadCrumbComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbComponent, deps: [{ token: i0.Injector }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzBreadCrumbComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzBreadCrumbComponent, selector: \"nz-breadcrumb\", inputs: { nzAutoGenerate: \"nzAutoGenerate\", nzSeparator: \"nzSeparator\", nzRouteLabel: \"nzRouteLabel\", nzRouteLabelFn: \"nzRouteLabelFn\" }, providers: [{ provide: NzBreadcrumb, useExisting: NzBreadCrumbComponent }], exportAs: [\"nzBreadcrumb\"], ngImport: i0, template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `, isInline: true, components: [{ type: NzBreadCrumbItemComponent, selector: \"nz-breadcrumb-item\", inputs: [\"nzOverlay\"], exportAs: [\"nzBreadcrumbItem\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzBreadCrumbComponent.prototype, \"nzAutoGenerate\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-breadcrumb',\n                    exportAs: 'nzBreadcrumb',\n                    preserveWhitespaces: false,\n                    providers: [{ provide: NzBreadcrumb, useExisting: NzBreadCrumbComponent }],\n                    template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzAutoGenerate: [{\n                type: Input\n            }], nzSeparator: [{\n                type: Input\n            }], nzRouteLabel: [{\n                type: Input\n            }], nzRouteLabelFn: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbSeparatorComponent {\n}\nNzBreadCrumbSeparatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbSeparatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzBreadCrumbSeparatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzBreadCrumbSeparatorComponent, selector: \"nz-breadcrumb-separator\", exportAs: [\"nzBreadcrumbSeparator\"], ngImport: i0, template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbSeparatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-breadcrumb-separator',\n                    exportAs: 'nzBreadcrumbSeparator',\n                    template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbModule {\n}\nNzBreadCrumbModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzBreadCrumbModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbModule, declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent], imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule], exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent] });\nNzBreadCrumbModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbModule, imports: [[CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule], BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzBreadCrumbModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n                    declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n                    exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbModule, NzBreadCrumbSeparatorComponent };\n"]},"metadata":{},"sourceType":"module"}