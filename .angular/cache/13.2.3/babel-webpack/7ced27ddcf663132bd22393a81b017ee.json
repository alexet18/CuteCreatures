{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { BidiModule } from '@angular/cdk/bidi';\nconst _c0 = [\"textEl\"];\n\nfunction NzAvatarComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzIcon);\n  }\n}\n\nfunction NzAvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"img\", 4);\n    i0.ɵɵlistener(\"error\", function NzAvatarComponent_img_1_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.imgError($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.nzSrc, i0.ɵɵsanitizeUrl);\n    i0.ɵɵattribute(\"srcset\", ctx_r1.nzSrcSet, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.nzAlt);\n  }\n}\n\nfunction NzAvatarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5, 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.textStyles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nconst _c1 = [\"*\"];\nconst NZ_CONFIG_MODULE_NAME = 'avatar';\nlet NzAvatarComponent = /*#__PURE__*/(() => {\n  class NzAvatarComponent {\n    constructor(nzConfigService, elementRef, cdr, platform) {\n      this.nzConfigService = nzConfigService;\n      this.elementRef = elementRef;\n      this.cdr = cdr;\n      this.platform = platform;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzShape = 'circle';\n      this.nzSize = 'default';\n      this.nzGap = 4;\n      this.nzError = new EventEmitter();\n      this.hasText = false;\n      this.hasSrc = true;\n      this.hasIcon = false;\n      this.textStyles = {};\n      this.classMap = {};\n      this.customSize = null;\n      this.el = this.elementRef.nativeElement;\n    }\n\n    imgError($event) {\n      this.nzError.emit($event);\n\n      if (!$event.defaultPrevented) {\n        this.hasSrc = false;\n        this.hasIcon = false;\n        this.hasText = false;\n\n        if (this.nzIcon) {\n          this.hasIcon = true;\n        } else if (this.nzText) {\n          this.hasText = true;\n        }\n\n        this.cdr.detectChanges();\n        this.setSizeStyle();\n        this.notifyCalc();\n      }\n    }\n\n    ngOnChanges() {\n      this.hasText = !this.nzSrc && !!this.nzText;\n      this.hasIcon = !this.nzSrc && !!this.nzIcon;\n      this.hasSrc = !!this.nzSrc;\n      this.setSizeStyle();\n      this.notifyCalc();\n    }\n\n    calcStringSize() {\n      if (!this.hasText) {\n        return;\n      }\n\n      const childrenWidth = this.textEl.nativeElement.offsetWidth;\n      const avatarWidth = this.el.getBoundingClientRect().width;\n      const offset = this.nzGap * 2 < avatarWidth ? this.nzGap * 2 : 8;\n      const scale = avatarWidth - offset < childrenWidth ? (avatarWidth - offset) / childrenWidth : 1;\n      this.textStyles = {\n        transform: `scale(${scale}) translateX(-50%)`\n      };\n\n      if (this.customSize) {\n        Object.assign(this.textStyles, {\n          lineHeight: this.customSize\n        });\n      }\n\n      this.cdr.detectChanges();\n    }\n\n    notifyCalc() {\n      // If use ngAfterViewChecked, always demands more computations, so......\n      if (this.platform.isBrowser) {\n        setTimeout(() => {\n          this.calcStringSize();\n        });\n      }\n    }\n\n    setSizeStyle() {\n      if (typeof this.nzSize === 'number') {\n        this.customSize = `${this.nzSize}px`;\n      } else {\n        this.customSize = null;\n      }\n\n      this.cdr.markForCheck();\n    }\n\n  }\n\n  NzAvatarComponent.ɵfac = function NzAvatarComponent_Factory(t) {\n    return new (t || NzAvatarComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Platform));\n  };\n\n  NzAvatarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzAvatarComponent,\n    selectors: [[\"nz-avatar\"]],\n    viewQuery: function NzAvatarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n      }\n    },\n    hostAttrs: [1, \"ant-avatar\"],\n    hostVars: 20,\n    hostBindings: function NzAvatarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"width\", ctx.customSize)(\"height\", ctx.customSize)(\"line-height\", ctx.customSize)(\"font-size\", ctx.hasIcon && ctx.customSize ? ctx.nzSize / 2 : null, \"px\");\n        i0.ɵɵclassProp(\"ant-avatar-lg\", ctx.nzSize === \"large\")(\"ant-avatar-sm\", ctx.nzSize === \"small\")(\"ant-avatar-square\", ctx.nzShape === \"square\")(\"ant-avatar-circle\", ctx.nzShape === \"circle\")(\"ant-avatar-icon\", ctx.nzIcon)(\"ant-avatar-image\", ctx.hasSrc);\n      }\n    },\n    inputs: {\n      nzShape: \"nzShape\",\n      nzSize: \"nzSize\",\n      nzGap: \"nzGap\",\n      nzText: \"nzText\",\n      nzSrc: \"nzSrc\",\n      nzSrcSet: \"nzSrcSet\",\n      nzAlt: \"nzAlt\",\n      nzIcon: \"nzIcon\"\n    },\n    outputs: {\n      nzError: \"nzError\"\n    },\n    exportAs: [\"nzAvatar\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 3,\n    consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [3, \"src\", \"error\", 4, \"ngIf\"], [\"class\", \"ant-avatar-string\", 3, \"ngStyle\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [3, \"src\", \"error\"], [1, \"ant-avatar-string\", 3, \"ngStyle\"], [\"textEl\", \"\"]],\n    template: function NzAvatarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NzAvatarComponent_i_0_Template, 1, 1, \"i\", 0);\n        i0.ɵɵtemplate(1, NzAvatarComponent_img_1_Template, 1, 3, \"img\", 1);\n        i0.ɵɵtemplate(2, NzAvatarComponent_span_2_Template, 3, 2, \"span\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.nzIcon && ctx.hasIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nzSrc && ctx.hasSrc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nzText && ctx.hasText);\n      }\n    },\n    directives: [i3.NgIf, i4.NzIconDirective, i3.NgStyle],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([WithConfig()], NzAvatarComponent.prototype, \"nzShape\", void 0);\n\n  __decorate([WithConfig()], NzAvatarComponent.prototype, \"nzSize\", void 0);\n\n  __decorate([WithConfig(), InputNumber()], NzAvatarComponent.prototype, \"nzGap\", void 0);\n\n  return NzAvatarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzAvatarGroupComponent = /*#__PURE__*/(() => {\n  class NzAvatarGroupComponent {}\n\n  NzAvatarGroupComponent.ɵfac = function NzAvatarGroupComponent_Factory(t) {\n    return new (t || NzAvatarGroupComponent)();\n  };\n\n  NzAvatarGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzAvatarGroupComponent,\n    selectors: [[\"nz-avatar-group\"]],\n    hostAttrs: [1, \"ant-avatar-group\"],\n    exportAs: [\"nzAvatarGroup\"],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function NzAvatarGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzAvatarGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nlet NzAvatarModule = /*#__PURE__*/(() => {\n  class NzAvatarModule {}\n\n  NzAvatarModule.ɵfac = function NzAvatarModule_Factory(t) {\n    return new (t || NzAvatarModule)();\n  };\n\n  NzAvatarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzAvatarModule\n  });\n  NzAvatarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule]]\n  });\n  return NzAvatarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAvatarComponent, NzAvatarGroupComponent, NzAvatarModule }; //# sourceMappingURL=ng-zorro-antd-avatar.mjs.map","map":null,"metadata":{},"sourceType":"module"}