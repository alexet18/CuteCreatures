{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { BidiModule } from '@angular/cdk/bidi';\nconst _c0 = [\"textEl\"];\n\nfunction NzAvatarComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzIcon);\n  }\n}\n\nfunction NzAvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"img\", 4);\n    i0.ɵɵlistener(\"error\", function NzAvatarComponent_img_1_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.imgError($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.nzSrc, i0.ɵɵsanitizeUrl);\n    i0.ɵɵattribute(\"srcset\", ctx_r1.nzSrcSet, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.nzAlt);\n  }\n}\n\nfunction NzAvatarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5, 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.textStyles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nconst _c1 = [\"*\"];\nconst NZ_CONFIG_MODULE_NAME = 'avatar';\n\nclass NzAvatarComponent {\n  constructor(nzConfigService, elementRef, cdr, platform) {\n    this.nzConfigService = nzConfigService;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.platform = platform;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzShape = 'circle';\n    this.nzSize = 'default';\n    this.nzGap = 4;\n    this.nzError = new EventEmitter();\n    this.hasText = false;\n    this.hasSrc = true;\n    this.hasIcon = false;\n    this.textStyles = {};\n    this.classMap = {};\n    this.customSize = null;\n    this.el = this.elementRef.nativeElement;\n  }\n\n  imgError($event) {\n    this.nzError.emit($event);\n\n    if (!$event.defaultPrevented) {\n      this.hasSrc = false;\n      this.hasIcon = false;\n      this.hasText = false;\n\n      if (this.nzIcon) {\n        this.hasIcon = true;\n      } else if (this.nzText) {\n        this.hasText = true;\n      }\n\n      this.cdr.detectChanges();\n      this.setSizeStyle();\n      this.notifyCalc();\n    }\n  }\n\n  ngOnChanges() {\n    this.hasText = !this.nzSrc && !!this.nzText;\n    this.hasIcon = !this.nzSrc && !!this.nzIcon;\n    this.hasSrc = !!this.nzSrc;\n    this.setSizeStyle();\n    this.notifyCalc();\n  }\n\n  calcStringSize() {\n    if (!this.hasText) {\n      return;\n    }\n\n    const childrenWidth = this.textEl.nativeElement.offsetWidth;\n    const avatarWidth = this.el.getBoundingClientRect().width;\n    const offset = this.nzGap * 2 < avatarWidth ? this.nzGap * 2 : 8;\n    const scale = avatarWidth - offset < childrenWidth ? (avatarWidth - offset) / childrenWidth : 1;\n    this.textStyles = {\n      transform: `scale(${scale}) translateX(-50%)`\n    };\n\n    if (this.customSize) {\n      Object.assign(this.textStyles, {\n        lineHeight: this.customSize\n      });\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  notifyCalc() {\n    // If use ngAfterViewChecked, always demands more computations, so......\n    if (this.platform.isBrowser) {\n      setTimeout(() => {\n        this.calcStringSize();\n      });\n    }\n  }\n\n  setSizeStyle() {\n    if (typeof this.nzSize === 'number') {\n      this.customSize = `${this.nzSize}px`;\n    } else {\n      this.customSize = null;\n    }\n\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzAvatarComponent.ɵfac = function NzAvatarComponent_Factory(t) {\n  return new (t || NzAvatarComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Platform));\n};\n\nNzAvatarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAvatarComponent,\n  selectors: [[\"nz-avatar\"]],\n  viewQuery: function NzAvatarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-avatar\"],\n  hostVars: 20,\n  hostBindings: function NzAvatarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.customSize)(\"height\", ctx.customSize)(\"line-height\", ctx.customSize)(\"font-size\", ctx.hasIcon && ctx.customSize ? ctx.nzSize / 2 : null, \"px\");\n      i0.ɵɵclassProp(\"ant-avatar-lg\", ctx.nzSize === \"large\")(\"ant-avatar-sm\", ctx.nzSize === \"small\")(\"ant-avatar-square\", ctx.nzShape === \"square\")(\"ant-avatar-circle\", ctx.nzShape === \"circle\")(\"ant-avatar-icon\", ctx.nzIcon)(\"ant-avatar-image\", ctx.hasSrc);\n    }\n  },\n  inputs: {\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\",\n    nzGap: \"nzGap\",\n    nzText: \"nzText\",\n    nzSrc: \"nzSrc\",\n    nzSrcSet: \"nzSrcSet\",\n    nzAlt: \"nzAlt\",\n    nzIcon: \"nzIcon\"\n  },\n  outputs: {\n    nzError: \"nzError\"\n  },\n  exportAs: [\"nzAvatar\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [3, \"src\", \"error\", 4, \"ngIf\"], [\"class\", \"ant-avatar-string\", 3, \"ngStyle\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [3, \"src\", \"error\"], [1, \"ant-avatar-string\", 3, \"ngStyle\"], [\"textEl\", \"\"]],\n  template: function NzAvatarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzAvatarComponent_i_0_Template, 1, 1, \"i\", 0);\n      i0.ɵɵtemplate(1, NzAvatarComponent_img_1_Template, 1, 3, \"img\", 1);\n      i0.ɵɵtemplate(2, NzAvatarComponent_span_2_Template, 3, 2, \"span\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzIcon && ctx.hasIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzSrc && ctx.hasSrc);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzText && ctx.hasText);\n    }\n  },\n  directives: [i3.NgIf, i4.NzIconDirective, i3.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([WithConfig()], NzAvatarComponent.prototype, \"nzShape\", void 0);\n\n__decorate([WithConfig()], NzAvatarComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig(), InputNumber()], NzAvatarComponent.prototype, \"nzGap\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAvatarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-avatar',\n      exportAs: 'nzAvatar',\n      template: `\n    <i nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></i>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl [ngStyle]=\"textStyles\" *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `,\n      host: {\n        class: 'ant-avatar',\n        '[class.ant-avatar-lg]': `nzSize === 'large'`,\n        '[class.ant-avatar-sm]': `nzSize === 'small'`,\n        '[class.ant-avatar-square]': `nzShape === 'square'`,\n        '[class.ant-avatar-circle]': `nzShape === 'circle'`,\n        '[class.ant-avatar-icon]': `nzIcon`,\n        '[class.ant-avatar-image]': `hasSrc `,\n        '[style.width]': 'customSize',\n        '[style.height]': 'customSize',\n        '[style.line-height]': 'customSize',\n        // nzSize type is number when customSize is true\n        '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n      },\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Platform\n    }];\n  }, {\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzGap: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzSrc: [{\n      type: Input\n    }],\n    nzSrcSet: [{\n      type: Input\n    }],\n    nzAlt: [{\n      type: Input\n    }],\n    nzIcon: [{\n      type: Input\n    }],\n    nzError: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzAvatarGroupComponent {}\n\nNzAvatarGroupComponent.ɵfac = function NzAvatarGroupComponent_Factory(t) {\n  return new (t || NzAvatarGroupComponent)();\n};\n\nNzAvatarGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzAvatarGroupComponent,\n  selectors: [[\"nz-avatar-group\"]],\n  hostAttrs: [1, \"ant-avatar-group\"],\n  exportAs: [\"nzAvatarGroup\"],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function NzAvatarGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAvatarGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-avatar-group',\n      exportAs: 'nzAvatarGroup',\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'ant-avatar-group'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzAvatarModule {}\n\nNzAvatarModule.ɵfac = function NzAvatarModule_Factory(t) {\n  return new (t || NzAvatarModule)();\n};\n\nNzAvatarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzAvatarModule\n});\nNzAvatarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAvatarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzAvatarComponent, NzAvatarGroupComponent],\n      exports: [NzAvatarComponent, NzAvatarGroupComponent],\n      imports: [BidiModule, CommonModule, NzIconModule, PlatformModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAvatarComponent, NzAvatarGroupComponent, NzAvatarModule };","map":{"version":3,"sources":["/home/tudor/Desktop/Work/Git/Cute/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-avatar.mjs"],"names":["__decorate","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","NgModule","i1","WithConfig","InputNumber","i2","PlatformModule","i3","CommonModule","i4","NzIconModule","BidiModule","NZ_CONFIG_MODULE_NAME","NzAvatarComponent","constructor","nzConfigService","elementRef","cdr","platform","_nzModuleName","nzShape","nzSize","nzGap","nzError","hasText","hasSrc","hasIcon","textStyles","classMap","customSize","el","nativeElement","imgError","$event","emit","defaultPrevented","nzIcon","nzText","detectChanges","setSizeStyle","notifyCalc","ngOnChanges","nzSrc","calcStringSize","childrenWidth","textEl","offsetWidth","avatarWidth","getBoundingClientRect","width","offset","scale","transform","Object","assign","lineHeight","isBrowser","setTimeout","markForCheck","ɵfac","NzConfigService","ElementRef","ChangeDetectorRef","Platform","ɵcmp","NgIf","NzIconDirective","NgStyle","prototype","type","args","selector","exportAs","template","host","class","preserveWhitespaces","changeDetection","OnPush","encapsulation","None","nzSrcSet","nzAlt","static","NzAvatarGroupComponent","NzAvatarModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nconst NZ_CONFIG_MODULE_NAME = 'avatar';\nclass NzAvatarComponent {\n    constructor(nzConfigService, elementRef, cdr, platform) {\n        this.nzConfigService = nzConfigService;\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.platform = platform;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzShape = 'circle';\n        this.nzSize = 'default';\n        this.nzGap = 4;\n        this.nzError = new EventEmitter();\n        this.hasText = false;\n        this.hasSrc = true;\n        this.hasIcon = false;\n        this.textStyles = {};\n        this.classMap = {};\n        this.customSize = null;\n        this.el = this.elementRef.nativeElement;\n    }\n    imgError($event) {\n        this.nzError.emit($event);\n        if (!$event.defaultPrevented) {\n            this.hasSrc = false;\n            this.hasIcon = false;\n            this.hasText = false;\n            if (this.nzIcon) {\n                this.hasIcon = true;\n            }\n            else if (this.nzText) {\n                this.hasText = true;\n            }\n            this.cdr.detectChanges();\n            this.setSizeStyle();\n            this.notifyCalc();\n        }\n    }\n    ngOnChanges() {\n        this.hasText = !this.nzSrc && !!this.nzText;\n        this.hasIcon = !this.nzSrc && !!this.nzIcon;\n        this.hasSrc = !!this.nzSrc;\n        this.setSizeStyle();\n        this.notifyCalc();\n    }\n    calcStringSize() {\n        if (!this.hasText) {\n            return;\n        }\n        const childrenWidth = this.textEl.nativeElement.offsetWidth;\n        const avatarWidth = this.el.getBoundingClientRect().width;\n        const offset = this.nzGap * 2 < avatarWidth ? this.nzGap * 2 : 8;\n        const scale = avatarWidth - offset < childrenWidth ? (avatarWidth - offset) / childrenWidth : 1;\n        this.textStyles = {\n            transform: `scale(${scale}) translateX(-50%)`\n        };\n        if (this.customSize) {\n            Object.assign(this.textStyles, {\n                lineHeight: this.customSize\n            });\n        }\n        this.cdr.detectChanges();\n    }\n    notifyCalc() {\n        // If use ngAfterViewChecked, always demands more computations, so......\n        if (this.platform.isBrowser) {\n            setTimeout(() => {\n                this.calcStringSize();\n            });\n        }\n    }\n    setSizeStyle() {\n        if (typeof this.nzSize === 'number') {\n            this.customSize = `${this.nzSize}px`;\n        }\n        else {\n            this.customSize = null;\n        }\n        this.cdr.markForCheck();\n    }\n}\nNzAvatarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.Platform }], target: i0.ɵɵFactoryTarget.Component });\nNzAvatarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAvatarComponent, selector: \"nz-avatar\", inputs: { nzShape: \"nzShape\", nzSize: \"nzSize\", nzGap: \"nzGap\", nzText: \"nzText\", nzSrc: \"nzSrc\", nzSrcSet: \"nzSrcSet\", nzAlt: \"nzAlt\", nzIcon: \"nzIcon\" }, outputs: { nzError: \"nzError\" }, host: { properties: { \"class.ant-avatar-lg\": \"nzSize === 'large'\", \"class.ant-avatar-sm\": \"nzSize === 'small'\", \"class.ant-avatar-square\": \"nzShape === 'square'\", \"class.ant-avatar-circle\": \"nzShape === 'circle'\", \"class.ant-avatar-icon\": \"nzIcon\", \"class.ant-avatar-image\": \"hasSrc \", \"style.width\": \"customSize\", \"style.height\": \"customSize\", \"style.line-height\": \"customSize\", \"style.font-size.px\": \"(hasIcon && customSize) ? $any(nzSize) / 2 : null\" }, classAttribute: \"ant-avatar\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], exportAs: [\"nzAvatar\"], usesOnChanges: true, ngImport: i0, template: `\n    <i nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></i>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl [ngStyle]=\"textStyles\" *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    WithConfig()\n], NzAvatarComponent.prototype, \"nzShape\", void 0);\n__decorate([\n    WithConfig()\n], NzAvatarComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzAvatarComponent.prototype, \"nzGap\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-avatar',\n                    exportAs: 'nzAvatar',\n                    template: `\n    <i nz-icon *ngIf=\"nzIcon && hasIcon\" [nzType]=\"nzIcon\"></i>\n    <img *ngIf=\"nzSrc && hasSrc\" [src]=\"nzSrc\" [attr.srcset]=\"nzSrcSet\" [attr.alt]=\"nzAlt\" (error)=\"imgError($event)\" />\n    <span class=\"ant-avatar-string\" #textEl [ngStyle]=\"textStyles\" *ngIf=\"nzText && hasText\">{{ nzText }}</span>\n  `,\n                    host: {\n                        class: 'ant-avatar',\n                        '[class.ant-avatar-lg]': `nzSize === 'large'`,\n                        '[class.ant-avatar-sm]': `nzSize === 'small'`,\n                        '[class.ant-avatar-square]': `nzShape === 'square'`,\n                        '[class.ant-avatar-circle]': `nzShape === 'circle'`,\n                        '[class.ant-avatar-icon]': `nzIcon`,\n                        '[class.ant-avatar-image]': `hasSrc `,\n                        '[style.width]': 'customSize',\n                        '[style.height]': 'customSize',\n                        '[style.line-height]': 'customSize',\n                        // nzSize type is number when customSize is true\n                        '[style.font-size.px]': '(hasIcon && customSize) ? $any(nzSize) / 2 : null'\n                    },\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: i1.NzConfigService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.Platform }]; }, propDecorators: { nzShape: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzGap: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }], nzSrc: [{\n                type: Input\n            }], nzSrcSet: [{\n                type: Input\n            }], nzAlt: [{\n                type: Input\n            }], nzIcon: [{\n                type: Input\n            }], nzError: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAvatarGroupComponent {\n}\nNzAvatarGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzAvatarGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.2\", type: NzAvatarGroupComponent, selector: \"nz-avatar-group\", host: { classAttribute: \"ant-avatar-group\" }, exportAs: [\"nzAvatarGroup\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-avatar-group',\n                    exportAs: 'nzAvatarGroup',\n                    template: ` <ng-content></ng-content> `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'ant-avatar-group'\n                    }\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAvatarModule {\n}\nNzAvatarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzAvatarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarModule, declarations: [NzAvatarComponent, NzAvatarGroupComponent], imports: [BidiModule, CommonModule, NzIconModule, PlatformModule], exports: [NzAvatarComponent, NzAvatarGroupComponent] });\nNzAvatarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarModule, imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.2\", ngImport: i0, type: NzAvatarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzAvatarComponent, NzAvatarGroupComponent],\n                    exports: [NzAvatarComponent, NzAvatarGroupComponent],\n                    imports: [BidiModule, CommonModule, NzIconModule, PlatformModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAvatarComponent, NzAvatarGroupComponent, NzAvatarModule };\n"]},"metadata":{},"sourceType":"module"}